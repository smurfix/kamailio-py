{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/",
      "email": "somebody@zoom.us/"
    },
    "description": "The Zoom Phone API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation. All endpoints are available via `https` and are located at `api.zoom.us/v2/`.\n\nFor instance you can list all users on an account via `https://api.zoom.us/v2/users/`.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "termsOfService": "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "title": "Zoom Phone API",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://api.zoom.us/v2"
    }
  ],
  "paths": {
    "/phone/audios/{audioId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the audio item.",
            "in": "path",
            "name": "audioId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted an audio item"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed**\n"
          }
        },
        "tags": [
          "Audio Library"
        ],
        "description": "Use this API to delete an audio item.\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** ` phone:write`,`phone:write:admin`\n\n**Rate Limit Label:** `Light`",
        "operationId": "DeleteAudioItem",
        "summary": "Delete an audio item"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the audio item.",
            "in": "path",
            "name": "audioId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "audio_id": "DP-6B4CeTjyo-FYfsFXdXQ",
                      "name": "Teeeee.mp3",
                      "play_url": "https://file.example.com/file?jwt=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MzY3MjY0MDEsImlzcyI6ImNyb3NzZmlsZSIsImF1ZCI6ImZpbGUiLCJkaWciOiIzM2MyZGFhZjQ2ZDQ2MzFiNGJkMWUzZmRmYmI5OTBjOTUzNTEwZmE5ZDYxZjYyNDAyNGY5OWZiYmY5ZmZlMWU4In0.kPwNFT1C_twZHl3CTeyaiOLhxmJBcHb__SvDBmgGpiQ&mode=download&path=zoomfs%3A%2F%2Fpbx-voice%2F%2Fprompt%2FNNNiWOl7SSmO-qXFOSXPMA%2FhcAjVmo0SVmdSvW2Sm7VrA.mp3"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "audio_id": {
                      "description": "Unique identifier of the audio item",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the audio item",
                      "type": "string"
                    },
                    "play_url": {
                      "description": "URL of the audio file (url is valid for 6 hours)",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed an audio item"
          }
        },
        "tags": [
          "Audio Library"
        ],
        "description": "Use this API to get an audio item.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** ` phone:read`,`phone:read:admin`\n\n**Rate Limit Label:** `Light`",
        "operationId": "GetAudioItem",
        "summary": "Get an audio item"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the audio item.",
            "in": "path",
            "name": "audioId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully updated an audio item"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed**\n"
          }
        },
        "tags": [
          "Audio Library"
        ],
        "description": "Use this API to update an audio item.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** ` phone:write`,`phone:write:admin`\n\n**Rate Limit Label:** `Light`",
        "operationId": "UpdateAudioItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "The name of the audio item.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update an audio item"
      }
    },
    "/phone/auto_receptionists": {
      "get": {
        "parameters": [
          {
            "description": "The total number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "auto_receptionists": [
                        {
                          "cost_center": "test",
                          "department": "test",
                          "extension_id": "wh1KurOzThOXrtqTe0cXvw",
                          "extension_number": 18300,
                          "id": "3VnxCE-iQ1SrX5hKYTtSfg",
                          "name": "test",
                          "phone_numbers": [
                            {
                              "id": "wLXTuEbgQ9i3maoawZ4Orw",
                              "number": "+12058945692"
                            }
                          ],
                          "site": {
                            "id": "4ziOo5WxRQeXdJSpYlDv0Q",
                            "name": "TestRange"
                          }
                        }
                      ],
                      "next_page_token": "eKTSRXixDFXKyiRa7gscqzgxVyv2E4daqU2",
                      "page_size": 1,
                      "total_records": 2
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "auto_receptionists": {
                      "items": {
                        "properties": {
                          "cost_center": {
                            "description": "`nullable` Cost center name.",
                            "type": "string"
                          },
                          "department": {
                            "description": "`nullable` Department name.",
                            "type": "string"
                          },
                          "extension_id": {
                            "description": "Extension ID",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "Extension number of the auto receptionist.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Unique identifier of the auto receptionist.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the auto receptionist.",
                            "type": "string"
                          },
                          "phone_numbers": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Unique identifier of the phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "Phone number.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "Total number of records returned from a single API call.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "Total number of records found for this query.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nList of [auto receptionists](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-auto-receptionists) retrieved successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Auto Receptionists"
        ],
        "description": "Use this API to list auto receptionists.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n",
        "operationId": "listAutoReceptionists",
        "summary": "List auto receptionists"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "extension_number": 123,
                      "id": "officdt76ydatat",
                      "name": "HQ Auto Receptionist"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "extension_number": {
                      "description": " Extension number assigned to the auto receptionist.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Auto receptionist ID. Unique identifier of the auto receptionist.",
                      "type": "string"
                    },
                    "name": {
                      "description": " Name of the auto receptionist.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nAuto receptionist added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\n* Multiple Site is disabled.\n\n* Site does not exist.\n\n\n"
          }
        },
        "tags": [
          "Auto Receptionists"
        ],
        "description": "Auto receptionists answer calls with a personalized recording and routes calls to a phone user, call queue, common area phone, voicemail or an IVR system. Use this API to add an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-) to a Zoom Phone.\n\n**Prerequisites:**\n\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addAutoReceptionist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Provide a name to help identify the auto receptionist.",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the site where the auto receptionist is to be assigned. This field is required only if you have [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) enabled.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add an auto receptionist"
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}": {
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the Auto Receptionist. It can be retrieved from the [List Phone Sites API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites).",
            "in": "path",
            "name": "autoReceptionistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n **No Content**\n\nAuto Receptionist details updated sucessfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `300`\n\nExtension Number must be {min} to {max} digits\n\nValidation Failed. AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionistId}\n\n\n**Error Code:** `400`\n\nInvalid short number length.\n\nInvalid full extension number length.\n\n\n**Error Code:** `10001`\n\nNumber {extensionNumber} is a reserved extension number.\n\nExtension number {extensionNumber} is already used.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Auto Receptionists"
        ],
        "description": "An auto receptionist answers calls with a personalized recording and routes calls to a phone user, call queue, common area phone, or voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.\n\nUse this API to [change information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3) such as display name and extension number assigned to the main auto receptionist.\n\n\n**Prerequisites:**\n\n* Pro or higher account with Zoom Phone license.\n\n**Scopes:** `phone:write:admin` \n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateAutoReceptionist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cost_center": {
                    "description": "Cost center name",
                    "type": "string"
                  },
                  "department": {
                    "description": "Department name.",
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Extension number to be assigned to the auto receptionist. If site code is enabled, provide the short extension number instead.",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Display name of the auto receptionist.",
                    "maxLength": 32,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update auto receptionist details"
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/ivr": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the auto receptionist. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "in": "path",
            "name": "autoReceptionistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query hours type, `business_hours` or `closed_hours`, default `business_hours`.",
            "in": "query",
            "name": "hours_type",
            "schema": {
              "default": "business_hours",
              "type": "string"
            }
          },
          {
            "description": "Auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed, `holiday_id` has a high priority and `hours_type` is invalid.",
            "in": "query",
            "name": "holiday_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "audio_prompt": {
                        "id": "",
                        "name": "Default"
                      },
                      "caller_enters_no_action": {
                        "action": 15,
                        "audio_prompt_repeat": 2,
                        "forward_to": {
                          "display_name": "TestCC0001",
                          "extension_id": "z97zV9NsSoa846i-ag3uEw"
                        }
                      },
                      "key_actions": [
                        {
                          "action": 200,
                          "key": "0",
                          "target": {
                            "display_name": "ZOOM_API",
                            "extension_id": "TO586CYlQFC_WCUvPRXytA",
                            "extension_number": "17000017002",
                            "id": "oG_nYRFuTJiY1tu0Fur_4Q"
                          },
                          "voicemail_greeting": {
                            "id": "dpLzi_pLRh6dCSmKiWicbw",
                            "name": "custom.wav"
                          }
                        },
                        {
                          "action": 14,
                          "key": "1"
                        },
                        {
                          "action": 10,
                          "key": "2",
                          "target": {
                            "phone_number": "+8618251885571"
                          }
                        },
                        {
                          "action": 2,
                          "key": "3",
                          "target": {
                            "display_name": "ZOOM_API",
                            "extension_id": "CQLPaj0oSCC0olJLmAfgwQ",
                            "extension_number": "9000009001",
                            "id": "EVqEKnrMRWyPr705Fk5h2w"
                          }
                        },
                        {
                          "action": 15,
                          "key": "4",
                          "target": {
                            "display_name": "TestCC0001",
                            "extension_id": "z97zV9NsSoa846i-ag3uEw"
                          }
                        },
                        {
                          "action": 10,
                          "key": "5",
                          "target": {
                            "phone_number": "+8618251885571"
                          }
                        },
                        {
                          "action": 22,
                          "key": "*"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "audio_prompt": {
                      "properties": {
                        "id": {
                          "description": "Audio prompt file ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Audio prompt file name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "caller_enters_no_action": {
                      "description": "The action if caller enters no action after the prompt played.",
                      "properties": {
                        "action": {
                          "description": "The action if caller enters no action after the prompt played.\n\n`-1` Disconnect the call\n\n`2` Forward to the user\n\n`4` Forward to the common area phone\n\n`5` Forward to Cisco/Polycom Room\n\n`6` Forward to the auto receptionist\n\n`7` Forward to the call queue\n\n`8` Forward to the shared line group\n\n`15` Forward to the Contact Center\n",
                          "type": "integer"
                        },
                        "audio_prompt_repeat": {
                          "description": "The number of times to repeat the audio prompt.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "type": "integer"
                        },
                        "forward_to": {
                          "properties": {
                            "display_name": {
                              "description": "Display name.",
                              "type": "string"
                            },
                            "extension_id": {
                              "description": "The extension ID or contact center setting ID.",
                              "type": "string"
                            },
                            "extension_number": {
                              "description": "The extension number.",
                              "type": "string"
                            },
                            "id": {
                              "description": "The user, common area phone, Zoom Room, Cisco/Polycom room, auto receptionist, call queue or shared line group ID.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "key_actions": {
                      "description": "IVR routing options.",
                      "items": {
                        "properties": {
                          "action": {
                            "description": "The action after clicking the key.\n\nFor key `0`-`9`\n\n`100` Leave voicemail to the current extension\n\n`200` Leave voicemail to the user\n\n`300` Leave voicemail to the auto receptionist\n\n`400` Leave voicemail to the  call queue\n\n`500` Leave voicemail to the shared line group\n\n`2` Forward to the user\n\n`3` Forward to Zoom Room\n\n`4` Forward to the common area phone\n\n`5` Forward to Cisco/Polycom Room\n\n`6` Forward to the auto receptionist\n\n`7` Forward to the call queue\n\n`8` Forward to the shared line group\n\n`9` Forward to external contacts\n\n`10` Forward to a phone number\n\n`15` Forward to the contact center\n\n`16` Forward to the meeting service\n\n`17` Forward to the meeting service number\n\n`-1` Disabled\n\nFor key * or #\n\n`21` Repeat menu greeting\n\n`22` Return to the root menu\n\n`23` Return to the previous menu\n\n`-1` Disabled",
                            "type": "integer"
                          },
                          "key": {
                            "description": "Key. The following values are supported: numeric('0'-'9'), *, #.",
                            "type": "string"
                          },
                          "target": {
                            "description": "Route to an extension, phone number, or a contact center.",
                            "properties": {
                              "display_name": {
                                "description": "Display name.",
                                "type": "string"
                              },
                              "extension_id": {
                                "description": "The extension ID or contact center setting ID.",
                                "type": "string"
                              },
                              "extension_number": {
                                "description": "The extension number.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The user, common area phone, Zoom Room, Cisco/Polycom room, auto receptionist, call queue or shared line group ID.",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "The phone number to forward to, in E164 format.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "voicemail_greeting": {
                            "description": "Voicemail greeting.",
                            "properties": {
                              "id": {
                                "description": "Voicemail greeting file ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Voicemail greeting file name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \nGet an interactive voice response (IVR) system of an auto receptionist."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `400` \nAuto Receptionist does not exist: {0}.\nHoliday hours handling does not exist: {0}."
          }
        },
        "tags": [
          "IVR"
        ],
        "description": "Use this API to get an [interactive voice response (IVR) system](https://support.zoom.us/hc/en-us/articles/360038601971) of the specified auto receptionist.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "getAutoReceptionistIVR",
        "summary": "Get auto receptionist IVR"
      },
      "patch": {
        "parameters": [
          {
            "description": "Auto receptionist id.",
            "in": "path",
            "name": "autoReceptionistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nAuto Receptionist IVR updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `400` \nAuto Receptionist does not exist: {0}.\nHoliday hours handling does not exist: {0}.\n**Error code**: `300` \nThe number of times to repeat the audio prompt is required and can not be greater than 3.\nThe action value set for if caller enters no action after the prompt played is not correct.\nThe action value is not correct.\nThe id for noAction to forward to is not correct.\nVoicemail greeting file id is required.\nThe phone number to forward to is required."
          }
        },
        "tags": [
          "IVR"
        ],
        "description": "Use this API to update the [interactive voice response (IVR) system](https://support.zoom.us/hc/en-us/articles/360038601971) of the specified auto receptionist.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updateAutoReceptionistIVR",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "audio_prompt_id": {
                    "description": "Audio prompt file ID.",
                    "type": "string"
                  },
                  "caller_enters_no_action": {
                    "description": "The action if caller enters no action after the prompt played.",
                    "properties": {
                      "action": {
                        "description": "The action if caller enters no action after the prompt played.\n-1 Disconnect the call\n2 Forward to the user\n4 Forward to the common area phone\n5 Forward to Cisco/Polycom Room\n6 Forward to the auto receptionist\n7 Forward to the call queue\n8 Forward to the shared line group\n15 Forward to the Contact Center\n",
                        "type": "integer"
                      },
                      "audio_prompt_repeat": {
                        "description": "The number of times to repeat the audio prompt.",
                        "enum": [
                          1,
                          2,
                          3
                        ],
                        "type": "integer"
                      },
                      "forward_to_extension_id": {
                        "description": "The extension ID or contact center setting ID.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "holiday_id": {
                    "description": "Auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed, `holiday_id` has a high priority and `hours_type` is invalid.",
                    "type": "string"
                  },
                  "hours_type": {
                    "description": "Hours type. `business_hours` (default) or `closed_hours`.",
                    "type": "string"
                  },
                  "key_action": {
                    "properties": {
                      "action": {
                        "description": "The action after clicking the key.\n\nFor key `0`-`9`\n100 Leave voicemail to the current extension\n200 Leave voicemail to the user\n300 Leave voicemail to the auto receptionist\n400 Leave voicemail to the  call queue\n500 Leave voicemail to the shared line group\n2 Forward to the user\n3 Forward to Zoom Room\n4 Forward to the common area phone\n5 Forward to Cisco/Polycom Room\n6 Forward to the auto receptionist\n7 Forward to the call queue\n8 Forward to the shared line group\n9 Forward to external contacts\n10 Forward to a phone number\n15 Forward to the contact center\n16 Forward to the meeting service\n17 Forward to the meeting service number\n-1 Disabled\n\nFor key * or #\n21 Repeat menu greeting\n22 Return to the root menu\n23 Return to the previous menu\n-1 Disabled",
                        "type": "integer"
                      },
                      "key": {
                        "description": "Key. The following values are supported: numeric('0'-'9'), *, #.",
                        "type": "string"
                      },
                      "target": {
                        "properties": {
                          "extension_id": {
                            "description": "The extension ID or contact center setting ID.",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number to forward to.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "voicemail_greeting_id": {
                        "description": "Voicemail greeting file ID.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update auto receptionist IVR"
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers": {
      "delete": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone numbers unassigned successfully."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\n\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Auto Receptionists"
        ],
        "description": "Unassign all phone numbers that were previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "unassignAllPhoneNumsAutoReceptionist",
        "summary": "Unassign all phone numbers"
      },
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the Auto Receptionist. It can be retrieved from the [List Phone Sites API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites).",
            "in": "path",
            "name": "autoReceptionistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone numbers assigned successfully."
          },
          "400": {
            "description": "\n**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nUnable to update this number as it is used for outbound caller ID to public safety answering point.\n\nPhone number does not exist, phonenumberId:{phonenumberId}\n\nphoneNumber is used, phonenumberId:{phonenumberId}"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\n\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Auto Receptionists"
        ],
        "description": "Assign available phone numbers to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). The available numbers can be retrieved using the List Phone Numbers API with `type` query parameter set to \"unassigned\".\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignPhoneNumbersAutoReceptionist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "description": "Provide either the unique identifier of the Phone Number  in the `id` field or provide the phone number in the `number` field.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the Phone number.",
                          "type": "string"
                        },
                        "number": {
                          "description": "Phone number in e164 format.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign phone numbers"
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the auto receptionist. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "in": "path",
            "name": "autoReceptionistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123).",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone number unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPhone number does not belong to auto receptionist."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Bad Request**\n\n**Error Code:** `404`\n\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Auto Receptionists"
        ],
        "description": "Unassign a specific phone number that was previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignAPhoneNumAutoReceptionist",
        "summary": "Unassign a phone number"
      }
    },
    "/phone/blocked_list": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "The total number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "blocked_list": [
                        {
                          "block_type": "inbound",
                          "comment": "Blocked numbers starting with 777",
                          "id": "7buyurtKc0Zw",
                          "match_type": "prefix",
                          "phone_number": "15550100",
                          "status": "active"
                        },
                        {
                          "block_type": "inbound",
                          "comment": "Blocked an unknown caller",
                          "id": "cYDtrtyrgyQw",
                          "match_type": "phoneNumber",
                          "phone_number": "15550101",
                          "status": "active"
                        }
                      ],
                      "next_page_token": "",
                      "page_size": 30,
                      "total_records": 2
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "blocked_list": {
                      "items": {
                        "properties": {
                          "block_type": {
                            "description": "Block type.\n`inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.\n`outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "type": "string"
                          },
                          "comment": {
                            "description": "Provide a comment to help you identify the blocked number or prefix.",
                            "maxLength": 255,
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the blocked list.",
                            "type": "string"
                          },
                          "match_type": {
                            "description": "Indicates the match type for the blocked list:\n\n`phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.\n\n`prefix`: Indicates that all numbers starting with the prefix that is shown in the `phone_number` field are blocked.",
                            "enum": [
                              "phoneNumber",
                              "prefix"
                            ],
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field. If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone number in the `country` field.",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "status": {
                            "description": "Indicates whether the blocking is active or inactive. \n`active`: The blocked list is active.\n`inactive`: The blocked list is inactive.",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The total number of records returned from a single API call.",
                      "maximum": 300,
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records found for this query.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nBlocked list returned successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Blocked List"
        ],
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available. \nUse this API to list all the blocked lists in an acccount.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n**Scope:** `phone:read:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listBlockedList",
        "summary": "List blocked lists"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "dhfhfhnim"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Unique identifier of the blocked list.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nNumber added to the blocked list successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\nInvalid country."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` **Conflict**\n\n\nBlocked number already exists."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Blocked List"
        ],
        "description": "A Zoom account owner or a user with the admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available. Use this API to create a block list and add a number to the list.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n**Scope:** `phone:write:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addAnumberToBlockedList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "block_type": {
                    "description": "State whether you want the block type to be inbound or outbound.\n\n`inbound`: Pass this value to prevent the blocked number or prefix from calling into the phone users.\n\n`outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.",
                    "enum": [
                      "inbound",
                      "outbound"
                    ],
                    "type": "string"
                  },
                  "comment": {
                    "description": "Provide a comment to help you identify the blocked number or prefix.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "country": {
                    "description": "The country information. For example, entering US or CH.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "match_type": {
                    "description": "Specify the match type for the blocked list:\n\n* `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Provide the phone number in the `phone_number` field and the country code in the `country` field.\n\n* `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country or an area code. Enter a phone number in the `phone_number` field and in the `country` field, enter a country code as part of the prefix.",
                    "enum": [
                      "phoneNumber",
                      "prefix"
                    ],
                    "type": "string"
                  },
                  "phone_number": {
                    "description": "The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field. If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone number in the `country` field.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "status": {
                    "description": "Enable or disable the blocking. One of the following values are allowed:\n\n`active`: Keep the blocking active.\n\n`inactive`: Disable the blocking.",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create a blocked list"
      }
    },
    "/phone/blocked_list/{blockedListId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the blocked list. This can be retrieved from the List Blocked List API.",
            "in": "path",
            "name": "blockedListId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nBlocked list deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300`\n\nValidation Failed. Blocked number (Id: {blockedListId}) does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Blocked List"
        ],
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers).\n\nUse this API to delete a blocked list and therefore removing the associated number from the blocked list. The number will be unblocked after the deletion.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n**Scope:** `phone:write:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteABlockedList",
        "summary": "Delete a blocked list"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the blocked list.",
            "in": "path",
            "name": "blockedListId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "block_type": "inbound",
                      "comment": "Blocked all numbers starting with 0001",
                      "id": "7bR_Ix4KSJS_heuPPKc0Zw",
                      "match_type": "prefix",
                      "phone_number": "0001",
                      "status": "active"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "block_type": {
                      "description": "Block type.\n\n* `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.\n\n* `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.",
                      "enum": [
                        "inbound",
                        "outbound"
                      ],
                      "type": "string"
                    },
                    "comment": {
                      "description": "Provide a comment to help you identify the blocked number or prefix.",
                      "maxLength": 255,
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique identifier of the blocked list.",
                      "type": "string"
                    },
                    "match_type": {
                      "description": "Indicates the match type for the blocked list. The values can be one of the following:\n\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.\n\n* `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.",
                      "enum": [
                        "phoneNumber",
                        "prefix"
                      ],
                      "type": "string"
                    },
                    "phone_number": {
                      "description": "The phone number or the prefix number that is blocked based on the `match_type`.",
                      "maxLength": 50,
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates whether the blocking is active or inactive.\n\n*n`active`: The blocked list is active.\n\n* `inactive`: The blocked list is inactive.",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nBlocked list retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nBlocked number (Id: {blockedListId}) does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Blocked List"
        ],
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.\nUse this API to get information about a specific blocked list.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n**Scope:** `phone:read:admin`\n \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getABlockedList",
        "summary": "Get blocked list details"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the blocked list.",
            "in": "path",
            "name": "blockedListId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nBlocked list updated successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\nBlocked number (Id: {blockedListId}) does not exist.\n\n **Error Code:** `300` <br>\nInvalid country.\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` **Conflict**\n\n\nBlocked number already exists."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Blocked List"
        ],
        "description": "A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.\nUse this API to update the information on the blocked list.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n**Scope:** `phone:write:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateBlockedList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "block_type": {
                    "description": "State whether you want the block type to be inbound or outbound.\n`inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.\n`outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.",
                    "enum": [
                      "inbound",
                      "outbound"
                    ],
                    "type": "string"
                  },
                  "comment": {
                    "description": "Provide a comment to help you identify the blocked number or prefix.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "country": {
                    "description": "The country information. For example, entering US or CH.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "match_type": {
                    "description": "Specify the match type for the blocked list:\n\n* `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Provide the phone number in the `phone_number` field and the country code in the `country` field.\n\n* `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country or an area code. Enter a phone number in the `phone_number` field and in the `country` field, enter a country code as part of the prefix.",
                    "enum": [
                      "phoneNumber",
                      "prefix"
                    ],
                    "type": "string"
                  },
                  "phone_number": {
                    "description": "The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field. If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone number in the `country` field.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "status": {
                    "description": "Enable or disable the blocking:\n* `active`: Keep the blocking active.\n* `inactive`: Disable the blocking.",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a blocked list"
      }
    },
    "/phone/byoc_numbers": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "phone_numbers": [
                        {
                          "id": "incididunt",
                          "number": "+123456789"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the phone number.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number in e164 format.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**"
          },
          "300": {
            "description": "**HTTP Status Code:** `300`\n\nValidation failed. Adding batch phone numbers are limited to 50 per request.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad request**\n\nBYOC phone numbers are not enabled for this account."
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124` Account does not exist: {accountId}. "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\nThe following account carrier does not exist: {0}."
          },
          "429": {
            "description": "**HTTP Status Code:** `429` **Too Many Requests**\n\n You have reached the maximum number of concurrent requests for this account's BYOC phone numbers."
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Use this API to add BYOC (Bring Your Own Carrier) phone numbers to Zoom Phone.\n\n**Scopes:** `phone:write:admin`, `phone:write`, or `phone:master`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise plan \n* A Zoom Phone license",
        "operationId": "addBYOCNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "carrier": {
                    "description": "Name of the carrier.",
                    "type": "string"
                  },
                  "phone_numbers": {
                    "description": "Phone number(s) to be added to Zoom. The value should be in e164 format.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "sip_group_id": {
                    "description": "Sip group id.",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the site. This field is only required if you have enabled multiple sites in the account. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.",
                    "type": "string"
                  }
                },
                "required": [
                  "carrier",
                  "phone_numbers"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add BYOC phone numbers"
      }
    },
    "/phone/call_logs": {
      "get": {
        "parameters": [
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 300,
              "type": "integer"
            }
          },
          {
            "description": "Start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data. The month defined should fall within the last six months. If unspecified, returns data within the 24 hours.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "The type of the call logs. The value can be either \"all\" or \"missed\".",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Filter the API response by [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,\n`pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`, `parkPickup`,\n`parkTimeout`, `monitor`, `takeover`, `sipGroup`",
            "in": "query",
            "name": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enables you to search call logs by start or end time. Choose `startTime` or `endTime`.",
            "in": "query",
            "name": "time_type",
            "schema": {
              "default": "startTime",
              "enum": [
                "startTime",
                "endTime"
              ],
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to filter API responses to include call logs that only have a non-zero charge.",
            "in": "query",
            "name": "charged_call_logs",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_logs": [
                        {
                          "call_end_time": "2022-01-25T22:01:44Z",
                          "call_id": "7057267278995522273",
                          "call_type": "pstn",
                          "callee_country_code": "1",
                          "callee_country_iso_code": "US",
                          "callee_name": "Zoom",
                          "callee_number": "+12096531109",
                          "callee_number_type": 2,
                          "caller_country_code": "1",
                          "caller_country_iso_code": "US",
                          "caller_did_number": "+19875550320",
                          "caller_name": "Quense Dom",
                          "caller_number": "123155",
                          "caller_number_type": 1,
                          "date_time": "2022-01-25T22:01:23Z",
                          "direction": "outbound",
                          "duration": 14,
                          "has_voicemail": false,
                          "id": "447ae678-f409-4eef-b257-a7834d6f4c5b",
                          "owner": {
                            "extension_number": 12155,
                            "id": "BY8Bi-lKQ3ythLMTcJSViA",
                            "name": "Jackie Zoom",
                            "type": "user"
                          },
                          "path": "sharedLines",
                          "recording_id": "447ae678f4094eefb257a7034d6f4c5b",
                          "recording_type": "Automatic",
                          "result": "Auto Recorded",
                          "site": {
                            "id": "uAWXLmxuT8K55YWu5nkZVA",
                            "name": "San Jose Main"
                          },
                          "user_id": "BY8BM-lKQ30thLMTcJSViA"
                        },
                        {
                          "call_id": "7057267077970051821",
                          "call_type": "voip",
                          "callee_country_code": "1",
                          "callee_country_iso_code": "US",
                          "callee_did_number": "+14435554700",
                          "callee_name": "Production Zoo",
                          "callee_number": "123155",
                          "callee_number_type": 1,
                          "caller_country_code": "1",
                          "caller_country_iso_code": "US",
                          "caller_name": "Zoom",
                          "caller_number": "+12485551109",
                          "caller_number_type": 2,
                          "date_time": "2022-01-25T22:00:37Z",
                          "direction": "inbound",
                          "duration": 0,
                          "has_recording": false,
                          "has_voicemail": false,
                          "id": "0f69yed7-0d4e-4d8e-a34c-bf52c1396218",
                          "owner": {
                            "extension_number": 123155,
                            "id": "BY8BM-lKQ3ythLMTcJSViA",
                            "name": "Jack Corporation",
                            "type": "user"
                          },
                          "path": "sharedLines",
                          "result": "No Answer",
                          "site": {
                            "id": "uAKXpmxuT8K55YWu5nkZVA",
                            "name": "San Jose Site"
                          },
                          "user_id": "BY8BM-lKQ3ythLMTcJSViA"
                        },
                        {
                          "call_end_time": "2022-01-25T22:00:07Z",
                          "call_id": "7087266948261121193",
                          "call_type": "voip",
                          "callee_country_code": "1",
                          "callee_country_iso_code": "US",
                          "callee_did_number": "+18185555005",
                          "callee_name": "Jeb Dob",
                          "callee_number": "101",
                          "callee_number_type": 1,
                          "caller_country_code": "1",
                          "caller_country_iso_code": "US",
                          "caller_name": "Zoom",
                          "caller_number": "+14085551109",
                          "caller_number_type": 2,
                          "date_time": "2022-01-25T22:00:07Z",
                          "direction": "inbound",
                          "duration": 0,
                          "has_recording": false,
                          "has_voicemail": false,
                          "id": "39bf2079-670b-4bd6-90cf-455d23bf8154",
                          "owner": {
                            "extension_number": 101,
                            "id": "8QPWOww_R2m9hxXvaypp4g",
                            "name": "Jackson Developer",
                            "type": "user"
                          },
                          "path": "pstn",
                          "result": "No Answer",
                          "site": {
                            "id": "GNO-CptXQaGhqH3qfPD1kg",
                            "name": "Main Site"
                          },
                          "user_id": "8QPWOww_R2m9hxXvaypp4g"
                        },
                        {
                          "call_end_time": "2022-01-24T23:58:10Z",
                          "call_id": "7056926284340112376",
                          "call_type": "voip",
                          "callee_country_code": "1",
                          "callee_country_iso_code": "US",
                          "callee_did_number": "+12095555005",
                          "callee_name": "Gianna Pei",
                          "callee_number": "101",
                          "callee_number_type": 1,
                          "caller_country_code": "1",
                          "caller_country_iso_code": "US",
                          "caller_name": "Zoom",
                          "caller_number": "+17165559999",
                          "caller_number_type": 2,
                          "date_time": "2022-01-24T23:58:10Z",
                          "direction": "inbound",
                          "duration": 0,
                          "has_recording": false,
                          "id": "11f2bacb-37d8-4ae4-8d88-be657421266f",
                          "owner": {
                            "extension_number": 101,
                            "id": "8QPWOww_R2m9hxXvaypp4g",
                            "name": "Jin Lee",
                            "type": "user"
                          },
                          "path": "pstn",
                          "result": "No Answer",
                          "site": {
                            "id": "GNO-CItXQaGhqH3qfPD1kg",
                            "name": "Main Site"
                          },
                          "user_id": "86QPWOww_R2m9hxXvaypp4g",
                          "voice_mail_id": "6737f6ec5c824f8481c9940f2cafa449"
                        }
                      ],
                      "from": "2022-01-24",
                      "next_page_token": "",
                      "page_size": 6,
                      "to": "2022-01-25",
                      "total_records": 4
                    }
                  }
                },
                "schema": {
                  "description": "Account call logs",
                  "properties": {
                    "call_logs": {
                      "description": "Call Log",
                      "items": {
                        "properties": {
                          "answer_start_time": {
                            "description": "GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.\n\t\t",
                            "format": "date-time",
                            "type": "string"
                          },
                          "call_id": {
                            "description": "Unique identifier of the phone call.",
                            "type": "string"
                          },
                          "call_type": {
                            "description": "The type of call:\n*`voip` (Voice over IP)\n*`pstn` (Public Switched Telephone Network)\n*`tollfree`\n*`international`\n*`contactCenter`",
                            "enum": [
                              "voip",
                              "pstn",
                              "tollfree",
                              "international",
                              "contactCenter"
                            ],
                            "type": "string"
                          },
                          "callee_country_code": {
                            "description": "Country calling code.",
                            "type": "string"
                          },
                          "callee_country_iso_code": {
                            "description": "ISO alpha2 country code.",
                            "type": "string"
                          },
                          "callee_did_number": {
                            "description": "Callee's DID (direct inward dial) number in e164 format.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Contact name of callee",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "Number of callee",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type:\n* `1` — Internal number.\n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_country_code": {
                            "description": "Country calling code.",
                            "type": "string"
                          },
                          "caller_country_iso_code": {
                            "description": "ISO alpha2 country code.",
                            "type": "string"
                          },
                          "caller_did_number": {
                            "description": "Caller's DID (direct inward dial) number in e164 format.",
                            "type": "string"
                          },
                          "caller_name": {
                            "description": "Contact name of caller",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "Number of caller",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "charge": {
                            "description": "Billing charge for the call.",
                            "type": "string"
                          },
                          "client_code": {
                            "description": "Client code.",
                            "type": "string"
                          },
                          "date_time": {
                            "description": "Start time of the call",
                            "type": "string"
                          },
                          "device_private_ip": {
                            "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "type": "string"
                          },
                          "device_public_ip": {
                            "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction of the call. \"inbound\" | \"outbound\"",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the call in seconds.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Call Log ID",
                            "type": "string"
                          },
                          "owner": {
                            "properties": {
                              "extension_number": {
                                "description": "The owner's extension number.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "The owner ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The owner name.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonAreaPhone",
                                  "sharedLineGroup"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "path": {
                            "description": "Path of the call. ",
                            "type": "string"
                          },
                          "rate": {
                            "description": "Billing rate for the call.",
                            "type": "string"
                          },
                          "recording_id": {
                            "description": "Unique identifier of the call recording.",
                            "type": "string"
                          },
                          "recording_type": {
                            "description": "Type of call recording:\n\n`1` OnDemand\n\n`2` Automatic",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "string"
                          },
                          "result": {
                            "description": "Result of the call. \"call_connected\" | \"recorded\" | \"no_answer\"",
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site where the phone number is assigned.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "user_id": {
                            "description": "User ID of the call log owner.",
                            "type": "string"
                          },
                          "waiting_time": {
                            "description": "Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.\n\t\t\t",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "description": "Start time and date of the logs.",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_count": {
                      "description": "Total number of pages. This field is deprecated.",
                      "type": "integer"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call for each page.",
                      "type": "integer"
                    },
                    "to": {
                      "description": "Start time and date of the logs.",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nAccount's call logs returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\n\n**Error Code:** `3001`\n\nError retrieving call logs."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Logs"
        ],
        "description": "Use this API to return an account's [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs).\n\n**Scopes:** `phone:read:admin`, `phone_call_log:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* Account owner or a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone management",
        "operationId": "accountCallLogs",
        "summary": "Get account's call logs"
      }
    },
    "/phone/call_logs/{callLogId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the call log. Both `callLogId` and `callId` can be used as path parameters. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or the [user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).",
            "in": "path",
            "name": "callLogId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "call_id": {
                      "description": "Unique identifier of the phone call.",
                      "type": "string"
                    },
                    "call_type": {
                      "description": "The type of call:\n*`voip` (Voice over IP)\n*`pstn` (Public Switched Telephone Network)\n*`tollfree`\n*`international`\n*`contactCenter`",
                      "enum": [
                        "voip",
                        "pstn",
                        "tollfree",
                        "international",
                        "contactCenter"
                      ],
                      "type": "string"
                    },
                    "callee_country_code": {
                      "description": "Country calling code.",
                      "type": "string"
                    },
                    "callee_country_iso_code": {
                      "description": "ISO alpha2 country code.",
                      "type": "string"
                    },
                    "callee_did_number": {
                      "description": "Callee's DID (direct inward dial) number in e164 format.",
                      "type": "string"
                    },
                    "callee_name": {
                      "description": "Contact name of callee.",
                      "type": "string"
                    },
                    "callee_number": {
                      "description": "Number of callee.",
                      "type": "string"
                    },
                    "callee_number_type": {
                      "description": "The callee's number type:\n* `1` — Internal number.\n* `2` — External number.\n* `3` — Customized emergency number.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "caller_country_code": {
                      "description": "Country calling code.",
                      "type": "string"
                    },
                    "caller_country_iso_code": {
                      "description": "ISO alpha2 country code.",
                      "type": "string"
                    },
                    "caller_did_number": {
                      "description": "Caller's DID (direct inward dial) number in e164 format.",
                      "type": "string"
                    },
                    "caller_name": {
                      "description": "Contact name of caller.",
                      "type": "string"
                    },
                    "caller_number": {
                      "description": "Number of caller.",
                      "type": "string"
                    },
                    "caller_number_type": {
                      "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "date_time": {
                      "description": "Start time of the call.",
                      "type": "string"
                    },
                    "device_private_ip": {
                      "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                      "type": "string"
                    },
                    "device_public_ip": {
                      "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                      "type": "string"
                    },
                    "direction": {
                      "description": "Direction of the call: `inbound` | `outbound`",
                      "enum": [
                        "inbound",
                        "outbound"
                      ],
                      "type": "string"
                    },
                    "duration": {
                      "description": "Duration of the call in seconds.",
                      "type": "integer"
                    },
                    "has_recording": {
                      "description": "Whether the call has a recording or not.",
                      "type": "boolean"
                    },
                    "has_voicemail": {
                      "description": "Whether the call has voicemail or not.",
                      "type": "boolean"
                    },
                    "id": {
                      "description": "Call Log ID",
                      "type": "string"
                    },
                    "log_details": {
                      "description": "Child records.",
                      "items": {
                        "properties": {
                          "date_time": {
                            "description": "Start time of the call.",
                            "type": "string"
                          },
                          "device_private_ip": {
                            "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "type": "string"
                          },
                          "device_public_ip": {
                            "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the call in seconds.",
                            "type": "integer"
                          },
                          "forward_to": {
                            "description": "Information about the call's forwarding.",
                            "properties": {
                              "extension_number": {
                                "description": "The call forward's extension number.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The call forward's unique ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The call forward's name.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The call forwarding recipient type: \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `sharedLineGroup`",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "sharedLineGroup"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "Call log ID.",
                            "type": "string"
                          },
                          "path": {
                            "description": "Path of the call.",
                            "type": "string"
                          },
                          "result": {
                            "description": "Result of the call: `call_connected` | `recorded` | `no_answer`.",
                            "enum": [
                              "call_connected",
                              "recorded",
                              "no_answer"
                            ],
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you can create sites based on different office locations.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site where the phone number is assigned.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "path": {
                      "description": "Path of the call.",
                      "type": "string"
                    },
                    "result": {
                      "description": "Result of the call: `call_connected` | `recorded` | `no_answer`.",
                      "enum": [
                        "call_connected",
                        "recorded",
                        "no_answer"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The details of the call log."
          }
        },
        "tags": [
          "Call Logs"
        ],
        "description": "Use this API to return information about a [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_call_log:read`, `phone_call_log:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "getCallLogDetails",
        "summary": "Get call log details",
        "x-private": false
      }
    },
    "/phone/call_logs/{callLogId}/client_code": {
      "put": {
        "parameters": [
          {
            "description": "Unique identifier of the call log.",
            "in": "path",
            "name": "callLogId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nSuccessfully added the client code to the call log."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\n\nValidation Failed."
          }
        },
        "tags": [
          "Call Logs"
        ],
        "description": "Use this API to add a client code to a [call log](https://support.zoom.us/hc/en-us/articles/360040999352-Assigning-client-codes-to-phone-calls). You can track call logs with a client code. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** ` phone:write:admin`\n\n**Rate Limit Label:** `Light`",
        "operationId": "addClientCodeToCallLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client_code": {
                    "description": "The client code(3 to 16 digit number) to mark the call log.",
                    "type": "string"
                  }
                },
                "required": [
                  "client_code"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a client code to a call log"
      }
    },
    "/phone/call_logs/{id}/recordings": {
      "get": {
        "parameters": [
          {
            "description": "The unique ID of the call log. You can use `callLogId` and `callId` as path parameters.\n\nThe value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or the [user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_id": "7057301355241426400",
                      "call_log_id": "c455bkd5-7e97-4fd2-930a-3bk6bbb6ae79",
                      "callee_name": "Jon Prode",
                      "callee_number": "123155",
                      "callee_number_type": 1,
                      "caller_name": "Zoom",
                      "caller_number": "12096531109",
                      "caller_number_type": 2,
                      "date_time": "2022-01-26T00:13:58Z",
                      "direction": "outbound",
                      "download_url": "https://zoom.us/v2/phone/recording/download/H7R3iJyBsWjbLOCQ",
                      "duration": 17,
                      "end_time": "2022-01-26T00:14:16Z",
                      "file_url": "https://file.zoom.us/file?_20220126001358.mp3",
                      "id": "c455b1d57e974fd2930a3bd6bbb6ae79",
                      "owner": {},
                      "recording_type": "Automatic",
                      "site": {
                        "id": "uAKXLmxuT8K59YWu5nkZVA"
                      }
                    }
                  }
                },
                "schema": {
                  "description": "Information about the user's phone recording.",
                  "properties": {
                    "call_id": {
                      "description": "The phone call's unique ID.",
                      "type": "string"
                    },
                    "call_log_id": {
                      "description": "The phone call log's unique ID.",
                      "type": "string"
                    },
                    "callee_name": {
                      "description": "The callee's contact name.",
                      "type": "string"
                    },
                    "callee_number": {
                      "description": "The phone number associated with the callee. Could be a phone number or an extension. Extension number is a combination of the site number and the short extension.",
                      "type": "string"
                    },
                    "callee_number_type": {
                      "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "caller_name": {
                      "description": "The caller's contact name.",
                      "type": "string"
                    },
                    "caller_number": {
                      "description": "The phone number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                      "type": "string"
                    },
                    "caller_number_type": {
                      "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "date_time": {
                      "description": "The date and time at which the recording was received.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "direction": {
                      "description": "The call's direction:\n* `inbound`\n* `outbound`",
                      "type": "string"
                    },
                    "download_url": {
                      "description": "The URL from which to download the recording. For security purposes, you **must** provide an OAuth access token in the Authorization header to download the recording file using this URL. For example:\n\n```curl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```",
                      "type": "string"
                    },
                    "duration": {
                      "description": "The call recording's duration, in seconds.",
                      "type": "integer"
                    },
                    "end_time": {
                      "description": "The recording's end time.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "The recording's ID.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nOK."
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: \"{accountId}\"."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error code:** `1001`\n\nRecording does not exist: \"{callId or callLogId}\"."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Recordings"
        ],
        "description": "Use this API to get an account's [call recording](https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings) by the recording's `callId` or `callLogId`.\n\n**Prerequisites:** \n* A Pro or higher account with Zoom Phone license. \n* Account owner or admin privileges\n\n**Scopes:** `phone:read:admin`, `phone:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getPhoneRecordingsByCallIdOrCallLogId",
        "summary": "Get recording by call ID"
      }
    },
    "/phone/call_queues": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "The number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_queues": [
                        {
                          "extension_id": "YhH4QZ8bTPG7iymTUdj-bQ",
                          "extension_number": 1011,
                          "id": "gdfgd4fg",
                          "name": "My test call queue",
                          "phone_numbers": [
                            {
                              "id": "01",
                              "number": "875489",
                              "source": "internal"
                            }
                          ],
                          "site": {
                            "id": "vCESddfg_ixWA",
                            "name": "Main Site"
                          },
                          "status": "active"
                        }
                      ],
                      "next_page_token": "nisidfyolore",
                      "page_size": 1,
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "call_queues": {
                      "items": {
                        "properties": {
                          "extension_id": {
                            "description": "Extension ID.",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "Extension number assigned to the queue.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Unique identifier of the Call Queue.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the Call Queue.",
                            "type": "string"
                          },
                          "phone_numbers": {
                            "description": "Phone number(s) assigned to the call queue.",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Unique identifier of the Phone number assigned.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "Phone number.",
                                  "type": "string"
                                },
                                "source": {
                                  "description": "Source",
                                  "enum": [
                                    "internal",
                                    "external"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned. ",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Status of the Call Queue.\n`active`: Call queue is enabled and active.\n`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned from a single API call.",
                      "maximum": 300,
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records found for this query.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nCall Queues listed successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to list Call queues.\n\n\n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n",
        "operationId": "listCallQueues",
        "summary": "List call queues"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "extension_number": 10201,
                      "id": "SujgNzKq-w",
                      "name": "testing123",
                      "status": "active"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "extension_number": {
                      "description": "Extension number assigned for the Call Queue.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Unique identifier of the Call Queue.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the Call Queue.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the Call Queue.\n\n`active`: Call queue is enabled and active.\n\n`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nCall Queue created successfully."
          },
          "400": {
            "description": "\n**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `300`\n\nValidation Failed.\n\nMultiple Site is disabled.\n\nSite does not exist.\n {extensionNumber} is out of range\n Exceeded the maximum number to add members per time\n\n\n**Error Code:** `400`\n Invalid short number length.\n Extension number {extensionNumber} is already used.\n\n**Error Code:** `412` The maximum number of Call Queue members is up to {maxSize}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `1001`\n\n User not found: {userId}\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to [create a call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413).\n You can add phone users or common area phones to call queues.\n\n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "createCallQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cost_center": {
                    "description": "Cost center name.",
                    "type": "string"
                  },
                  "department": {
                    "description": "Department name.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description for the Call Queue.",
                    "maxLength": 32,
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Phone extension number for the site.\n\n\nIf a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.",
                    "type": "integer"
                  },
                  "members": {
                    "description": "A list of one or more phone users to be included in the call queue. Provide either users or common area phone(s). Provide at least one user in the users object.",
                    "properties": {
                      "common_area_phone_ids": {
                        "description": "**Optional**\n\nUnique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). This can be retrieved from the List Common Area Phones API.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "users": {
                        "description": "Users object. Provide either the id (userId) field or the email address of the user.",
                        "items": {
                          "properties": {
                            "email": {
                              "description": "Email address of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "User Id of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "Name of the Call Queue.",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the site. Required only if [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) have been enabled. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
                    "type": "string"
                  }
                },
                "required": [
                  "site_id",
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create a call queue"
      }
    },
    "/phone/call_queues/{callQueueId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the call queue.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCall Queue deleted successfully. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `400`\n\nThe group does not exist, groupId:{callQueueId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to delete a Call Queue.\n \n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "deleteACallQueue",
        "summary": "Delete a call queue"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue. This can be retrieved from [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listCallQueues).",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "cost_center": "testCostCenter",
                      "department": "testDepartment",
                      "extension_id": "YhH4QZ8bTPG7iymTUdj-bQ",
                      "extension_number": 10001,
                      "id": "jIfhghXFA",
                      "members": {
                        "users": [
                          {
                            "id": "z8hfgh8uQ",
                            "level": "manager",
                            "name": "Lisa Yankowski",
                            "receive_call": true
                          }
                        ]
                      },
                      "name": "Test-Callqueue",
                      "site": {
                        "id": "CcvcvnWA",
                        "name": "Main Site"
                      },
                      "status": "active"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "cost_center": {
                      "description": "Cost center name.",
                      "type": "string"
                    },
                    "department": {
                      "description": "Department name.",
                      "type": "string"
                    },
                    "extension_id": {
                      "description": "Extension ID.",
                      "type": "string"
                    },
                    "extension_number": {
                      "description": "Extension number assigned to the Call Queue.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Unique identifier of the Call Queue.",
                      "type": "string"
                    },
                    "members": {
                      "properties": {
                        "common_area_phones": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "users": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "User ID: Unique identifier of the user.",
                                "type": "string"
                              },
                              "level": {
                                "description": "Level of the user. The value can be one of the following:\n\n`manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.\n\n\n`user`: Regular user without the privileges of a manager.",
                                "enum": [
                                  "manager",
                                  "user"
                                ],
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              },
                              "receive_call": {
                                "description": "Determines whether the user can receive calls or not.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "description": "Name of the Call Queue.",
                      "type": "string"
                    },
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the number.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number.",
                            "type": "string"
                          },
                          "source": {
                            "description": "Source",
                            "enum": [
                              "internal",
                              "external"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "site": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the Call Queue.",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nCall Queue details retrieved successfully. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\n The group does not exist, groupId:{callQueueId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to get information on a specific Call Queue.\n\n \n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getACallQueue",
        "summary": "Get call queue details"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCall Queue details updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300`\n\nValidation Failed. The group does not exist, groupId:{groupId}\n\nTimezone not found in the system.\n\n\n**Error Code:** `400`\n\nUnable to update this call queue as it is used for internal safety response team."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to update information of a specific Call Queue.\n \n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId": "updateCallQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cost_center": {
                    "description": "Cost center name.",
                    "type": "string"
                  },
                  "department": {
                    "description": "Department name.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description for the Call Queue.",
                    "maxLength": 32,
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Phone extension number for the site.\n\n\nIf a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of the Call Queue.",
                    "maxLength": 32,
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of the Call Queue. Allowed values:\n\n`active`\n\n`inactive`",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "type": "string"
                  },
                  "timezone": {
                    "description": "[Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Call Queue.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update call queue details"
      }
    },
    "/phone/call_queues/{callQueueId}/manager": {
      "put": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCall queue manager changed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `300`\n\nValidation Failed. The group does not exist, groupId:{callQueueId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `1001`\n\nUser not found: {userId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "A call queue manager has the privileges to maanage the call queue's voicemail inbox and recordings, change all call queue settings and call queue policy settings.\n\n Use this API to to set another phone user as the [call queue manager](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_db06854b-e6a3-4afe-ba15-baf58f31f90c).\n\n\n**Prerequisites:**\n* Pro or higher account plan.\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "changeCallQueueManager",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "member_id": {
                    "description": "Unique identifier (userId) or email address of the user who will be the new call queue manager.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Change call queue manager"
      }
    },
    "/phone/call_queues/{callQueueId}/members": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMember unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300`\n\nValidation Failed. The group does not exist, groupId:{callQueueId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Use this API to remove all members from a Call Queue who were previously assigned to that Call Queue. The members could be phone users or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).\n**Prerequisites:**\n\n* Pro or higher account plan.\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignAllMembers",
        "summary": "Unassign all members"
      },
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nMembers added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `300`\n\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n\nExceeded the maximum number to add members per time.\n\n\n**Error Code:** `412`\n\nThe maximum number of Call Queue members is up to {maxSize}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `1001`\n\nUser not found: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Add phone users and/or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) as members to a specific Call Queue.\n\n\n**Prerequisites:**\n\n* Pro or higher account plan.\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addMembersToCallQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "A maximum of 10 members can be added at a time.",
                    "properties": {
                      "common_area_phone_ids": {
                        "description": "Array of one or more Common Area Phone Ids of the Common Area Phone(s) that you would like to add to the Call Queue.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "email": {
                              "description": "Email address of the user.",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID: Unique identifier of the user.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add members to a call queue"
      }
    },
    "/phone/call_queues/{callQueueId}/members/{memberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue from which the member needs to be unassigned.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the member who needs to be unassigned.",
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMember unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300`\n\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n**Error Code:** `400`\nUnable to delete manager\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\nUnable to find group member"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Use this API to remove a member from a Call Queue who was previously added to that Call Queue. The member could be a phone user or a [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). A member who is a Call Queue Manager cannot be unassigned from the Call Queue using this API. \n**Prerequisites:**\n\n* Pro or higher account plan.\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "unassignMemberFromCallQueue",
        "summary": "Unassign a member"
      }
    },
    "/phone/call_queues/{callQueueId}/phone_numbers": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue. This can be retrieved from List Call Queues API.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone numbers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `300`\n\nValidation Failed. The group does not exist, groupId:{callQueueId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "Use this API to unbind all phone numbers that are assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues) After successful unbinding, the numbers will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).\n If you only need to unassign a specific phone number, use the Unassign a Phone Number API instead. \n\n**Prerequisites:**\n* Pro or higher account palan\n* Account owner or admin permissions\n* Zoom Phone license \n **Scopes:** `phone:write:admin`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "unassignAPhoneNumCallQueue",
        "summary": "Unassign all phone numbers"
      },
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "After [buying phone number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad), you can assign it, allowing callers to directly dial a number to reach a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).\n\n\n**Prerequisites:**\n\n* Pro or higher account plan.\n* Account owner or admin permissions\n* Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "assignPhoneToCallQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "description": "Provide either the `id` or the `number` field. Only a max of 5 numbers can be assigned to a call queue at a time.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the phone number.",
                          "type": "string"
                        },
                        "number": {
                          "description": "Phone number.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign numbers to a call queue"
      }
    },
    "/phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue. This can be retrieved from the List Call Queues API.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the Phone Number. ",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone Number unassigned successfuly."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300`\n\nValidation failed. The group does not exist, groupId:{callQueueId}.\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\n\nPhone number not belong to call queue."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Queues"
        ],
        "description": "After assigning a phone number, you can unbind it if you don't want it to be assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues). Use this API to unbind a phone number from a Call Queue. After successful unbinding, the number will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).\n\n\n**Prerequisites:**\n* Pro or higher account palan\n* Account owner or admin permissions\n* Zoom Phone license \n **Scopes:** `phone:write:admin`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "unAssignPhoneNumCallQueue",
        "summary": "Unassign a phone number"
      }
    },
    "/phone/call_queues/{callQueueId}/recordings": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the Call Queue.",
            "in": "path",
            "name": "callQueueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "fg4t65hy",
                      "page_size": 1,
                      "recordings": [
                        {
                          "callee_name": "dfhjdvf",
                          "callee_number": "900138752313210",
                          "callee_number_type": "internal",
                          "caller_name": "idvdfdf",
                          "caller_number": "+900138732313213",
                          "caller_number_type": "internal",
                          "date_time": "2026-08-11",
                          "direction": "outbound",
                          "download_url": "sjhgkdfg.fdghfb/fdgfdg",
                          "duration": 20,
                          "id": "dvfv5gg"
                        }
                      ],
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "from": {
                      "description": "Start date.",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer"
                    },
                    "recordings": {
                      "items": {
                        "properties": {
                          "callee_name": {
                            "description": "Contact name of the callee.",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "Name of the callee.",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "string"
                          },
                          "caller_name": {
                            "description": "Name of the caller.",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "Phone number of the caller.",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "date_time": {
                            "description": "Date of the recording.",
                            "format": "date",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction of call. The value of this field can be either `outbound` or `inbound`.",
                            "type": "string"
                          },
                          "download_url": {
                            "description": "URL using which the recording can be downloaded.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the call.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Unique identifier of the recording.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "to": {
                      "description": "End date.",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "The total number of records returned for this API call.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Call Queues"
        ],
        "description": "Use this API to view [call recordings](https://support.zoom.us/hc/en-us/articles/360038521091#h_cbc9f2a3-e06c-4daa-83d4-ddbceef9c77b) from the call queue.\n\n\n**Prerequisites:**\n\n* Pro or higher account with Zoom Phone license.\n* [Automatic call recordings](https://support.zoom.us/hc/en-us/articles/360033511872#h_fcb297bb-14e8-4094-91ca-dc61e1a18734) must be enabled in the Policy Settings for call queues. \n **Scope:** `phone:read:admin`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n\n\n",
        "operationId": "getCallQueueRecordings",
        "summary": "Get call queue recordings"
      }
    },
    "/phone/calling_plans": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "calling_plans": [
                        {
                          "assigned": 1,
                          "available": 9,
                          "name": "US/Canada metered calling plan",
                          "subscribed": 10,
                          "type": 100
                        },
                        {
                          "assigned": 2,
                          "available": 2,
                          "name": "Australia/New Zealand metered calling plan",
                          "subscribed": 4,
                          "type": 101
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "calling_plans": {
                      "items": {
                        "properties": {
                          "assigned": {
                            "description": "Total number of plan used.",
                            "type": "integer"
                          },
                          "available": {
                            "description": "Remaining number of calling plans that can be assigned.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the plan.",
                            "type": "string"
                          },
                          "subscribed": {
                            "description": "Total number of plan subscriptions bought.",
                            "type": "integer"
                          },
                          "type": {
                            "description": "Plan type. Refer to the Plan Number section [here](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nCalling plans listed successfully.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to return all of an account's Zoom Phone [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro or a higher account \n* A Zoom Phone license",
        "operationId": "listCallingPlans",
        "summary": "List calling plans"
      }
    },
    "/phone/carrier_reseller/numbers": {
      "get": {
        "parameters": [
          {
            "description": "The size of the page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number assignment status.",
            "in": "query",
            "name": "assigned_status",
            "required": false,
            "schema": {
              "enum": [
                "assigned",
                "unassigned",
                "returned"
              ],
              "type": "string"
            }
          },
          {
            "description": "Partner account ID from sub-account.",
            "in": "query",
            "name": "sub_account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Partial string of the phone number.",
            "in": "query",
            "name": "keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "carrier_reseller_numbers": [
                        {
                          "assigned_status": "assigned",
                          "carrier_code": 232,
                          "phone_number": "12052334444",
                          "status": "active",
                          "sub_account_id": "343432",
                          "sub_account_name": "xxxxx"
                        }
                      ],
                      "next_page_token": "",
                      "page_size": 30,
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "carrier_reseller_numbers": {
                      "items": {
                        "properties": {
                          "assigned_status": {
                            "description": "Number assignment status.",
                            "enum": [
                              "assigned",
                              "unassigned",
                              "returned"
                            ],
                            "type": "string"
                          },
                          "carrier_code": {
                            "description": "Carrier reseller ID.",
                            "type": "integer"
                          },
                          "country_iso_code": {
                            "description": "Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "Phone number in E164 format.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of phone number.",
                            "enum": [
                              "inactive",
                              "active"
                            ],
                            "type": "string"
                          },
                          "sub_account_id": {
                            "description": "`nullable` Partner account ID from sub-account.",
                            "type": "string"
                          },
                          "sub_account_name": {
                            "description": "`nullable` Sub-account name.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call for each page.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **No Content**\n\nPhone numbers listed successfully."
          }
        },
        "tags": [
          "Carrier Reseller"
        ],
        "description": "Use this API to list phone numbers in a carrier reseller (master) account that can be pushed to its subaccounts.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "listCRPhoneNumbers",
        "summary": "List phone numbers"
      },
      "patch": {
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone numbers activated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\nPhone number does not exists.\n**Error Code:** `429`\nPhone number batch operation is limited to 200 per request."
          }
        },
        "tags": [
          "Carrier Reseller"
        ],
        "description": "Use this API to change phone number status to 'active' in a carrier reseller's master account. Up to 200 numbers at a time.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "activeCRPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "description": "Phone number in E164 format. Number up to 200.",
                  "type": "string"
                },
                "type": "array"
              }
            }
          }
        },
        "summary": "Activate phone numbers"
      },
      "post": {
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **No Content**\n\nPhone numbers created successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\nThis account is not a Carrier Reseller.\nReseller does not configure Carrier.\n**Error Code:** `300`\nInvalid phone number.\nInvalid phone number status.\nUnable to recognize country.\nPhone number already exists.\n**Error Code:** `429`\nPhone number batch operation is limited to 200 per request."
          }
        },
        "tags": [
          "Carrier Reseller"
        ],
        "description": "Use this API to add phone numbers to a carrier reseller (master) account. Up to 200 numbers at a time. If this API is called in MA mode, it also has functions of distribution.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "createCRPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "description": "Number up to 200",
                  "properties": {
                    "phone_number": {
                      "description": "Phone number in E164 format.",
                      "type": "string"
                    },
                    "status": {
                      "description": "`nullable` Status of phone number. default value is 'inactive'.",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            }
          }
        },
        "summary": "Create phone numbers"
      }
    },
    "/phone/carrier_reseller/numbers/{number}": {
      "delete": {
        "parameters": [
          {
            "description": "Phone number in E164 format.",
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone number unassigned/deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\nPhone number does not exists.\n**Error Code:** `429`\nPhone number batch operation is limited to 200 per request."
          }
        },
        "tags": [
          "Carrier Reseller"
        ],
        "description": "Use this API to delete or unassign a phone number from a carrier reseller account.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "deleteCRPhoneNumber",
        "summary": "Delete a phone number"
      }
    },
    "/phone/common_area_phones": {
      "get": {
        "parameters": [
          {
            "description": "The total number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "common_area_phones": [
                        {
                          "calling_plans": [
                            {
                              "name": "string",
                              "type": "integer"
                            }
                          ],
                          "device_type": "string",
                          "display_name": "string",
                          "id": "string",
                          "mac_address": "string",
                          "phone_numbers": [
                            {
                              "id": "string",
                              "number": "string",
                              "source": "string"
                            }
                          ],
                          "site": {
                            "id": "string",
                            "name": "string"
                          },
                          "status": "string"
                        }
                      ],
                      "next_page_token": "string",
                      "page_size": "integer",
                      "total_records": "integer"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "common_area_phones": {
                      "items": {
                        "properties": {
                          "calling_plans": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Plan name.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "[Plan Number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "device_type": {
                            "description": "Type of device (manufacturer name + model name). Refer to the table here for a list of [supported devices](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice).",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "Display name of the common area phone.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the common area phone.",
                            "type": "string"
                          },
                          "mac_address": {
                            "description": " Mac address or serial number.",
                            "type": "string"
                          },
                          "phone_numbers": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Unique identifier of the Phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "Phone number.",
                                  "type": "string"
                                },
                                "source": {
                                  "description": "Phone number source. The value can be either `internal` or `external`.",
                                  "enum": [
                                    "internal",
                                    "external"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Status of the common area phone. It can be either `online` or `offline`.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "Total number of records returned from a single API call.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "Total number of records found for this query.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nList of Common Area Phones retrieved successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Use this API to list all of an account's [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).\n\nA common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* A [supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)",
        "operationId": "listCommonAreaPhones",
        "summary": "List common area phones"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "display_name": "Common Area Phone - lobby",
                      "id": "comfgfd45um"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "display_name": {
                      "description": "Display name of the common area phone.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique identifier of the common area phone.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nCommon area phone added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation failed.<br>\n* Phone manufacturer does not exist.\n* Phone model does not exist.\n* Phone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.\nCommon area optimization option is enabled."
          },
          "409": {
            "description": "**HTTP Status Code:** `409`\n\n**Error Code:** `409`\n\nThe MAC Address already exists in the system."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Use this API to [add a common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones#h_2d0da347-c35a-4993-9771-e21aaa568deb).\n\nA common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* A [supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)\n\n**Scopes:** \n`phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addCommonAreaPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cost_center": {
                    "description": "The cost center the common area phone belongs to.",
                    "type": "string"
                  },
                  "department": {
                    "description": "The department the common area phone belongs to.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description for the common area phone.",
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Display name of the Common area phone.",
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Extension number assigned to the common area phone. If site code is enabled, provide the short extension number instead.",
                    "type": "integer"
                  },
                  "mac_address": {
                    "description": "Mac Address (serial number) of the common area desk phone. These examples show the formats supported: `64-16-7f-37-90-92` or `64167f379092`",
                    "type": "string"
                  },
                  "model": {
                    "description": "Device Model name. Refer to the \"Model Name\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "provision_template_id": {
                    "description": "Provision template id",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
                    "type": "string"
                  },
                  "time_zone": {
                    "description": "[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists) for the common area phone.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Phone device manufacturer name. Refer to the \"Manufacturer Name\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "display_name",
                  "extension_number",
                  "mac_address",
                  "type"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a common area phone"
      }
    },
    "/phone/common_area_phones/{commonAreaPhoneId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the common area phone.",
            "in": "path",
            "name": "commonAreaPhoneId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCommon Area Phone deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300`\n\nValidation Failed\n\nDevice does not exist in the system.\n**Error Code:** `400`<br>\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.\n Use this API to remove the [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) from Zoom Phone System in an account.\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteCommonAreaPhone",
        "summary": "Delete a common area phone"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the Common Area Phone. Use the unique identifier or the Mac address of the common area phone. The Mac address can be in hyphenated (`00-04-f2-5e-ec-3c`) or not hyphenated (`0004f25eec3c`) format. You can get this value from the [List Common Area Phones API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listCommonAreaPhones).",
            "in": "path",
            "name": "commonAreaPhoneId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "cost_center": "CDE  7 Zoom Meetings Pro",
                      "department": "ABC 50 Zoom Phone Pro ",
                      "device_type": "Cisco cp7821",
                      "display_name": "testcommonareaphone",
                      "emergency_address": {
                        "address_line1": "55 ALMADEN BLVD",
                        "address_line2": "BUILDING 66",
                        "city": "SAN JOSE",
                        "country": "US",
                        "id": "Qza2T_KATwCeUfTkzGsOmQ",
                        "state_code": "CA",
                        "status": "6",
                        "zip": "95113"
                      },
                      "id": "d6dfgdfgfdgiglw",
                      "mac_address": "105f11123456",
                      "provision": {
                        "sip_accounts": [
                          {
                            "authorization_id": "1234567894",
                            "outbound_proxy": "abcd.zoom.us:1001",
                            "password": "SomeRandomPasswordValue",
                            "secondary_outbound_proxy": "proxy.example.com:5555",
                            "sip_domain": "abc.zoomcloudpbx.com",
                            "user_name": "71600000002730"
                          }
                        ],
                        "type": "manual"
                      },
                      "site": {
                        "id": "CEdfdfgdgixWA",
                        "name": "Main Site"
                      },
                      "status": "offline"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "calling_plans": {
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Calling plan name.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Calling plan type.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "cost_center": {
                      "description": "The cost center the common area phone belongs to.",
                      "type": "string"
                    },
                    "department": {
                      "description": "The department the common area phone belongs to.",
                      "type": "string"
                    },
                    "device_type": {
                      "description": "Type of device (manufacturer name + model name).",
                      "type": "string"
                    },
                    "emergency_address": {
                      "description": "The emergency address information.",
                      "properties": {
                        "address_line1": {
                          "description": "The emergency location address line 1.",
                          "type": "string"
                        },
                        "address_line2": {
                          "description": "The emergency location address line 2.",
                          "type": "string"
                        },
                        "city": {
                          "description": "The emergency location address's city.",
                          "type": "string"
                        },
                        "country": {
                          "description": "The emergency location address's country.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The emergency location address ID.",
                          "type": "string"
                        },
                        "state_code": {
                          "description": "The emergency location address's state code.",
                          "type": "string"
                        },
                        "status": {
                          "description": "The emergency address verification status.: \n* `1` — Verification Not Required. \n* `2` — Unverified. \n* `3` — Verification Requested. \n* `4` — Verfied. \n* `5` — Rejected. \n* `6` — Verification Failed.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "zip": {
                          "description": "The emergency address zip code.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "Unique identifier of the common area phone.",
                      "type": "string"
                    },
                    "mac_address": {
                      "description": " Mac address or serial number.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Display name of the common area phone.",
                      "type": "string"
                    },
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "display_name": {
                            "description": "Phone number display name.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Phone number id.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number number.",
                            "type": "string"
                          },
                          "source": {
                            "description": "Phone number source. The value can be either `internal` or `external`.",
                            "enum": [
                              "internal",
                              "external"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "policy": {
                      "properties": {
                        "hot_desking": {
                          "description": "",
                          "properties": {
                            "status": {
                              "description": "Allow Hot Desking feature to current device.",
                              "enum": [
                                "unsupported",
                                "on",
                                "off"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "international_calling": {
                          "description": "",
                          "properties": {
                            "enable": {
                              "description": "Allow current extension to place international calls outside of the calling plan.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "select_outbound_caller_id": {
                          "description": "",
                          "properties": {
                            "enable": {
                              "description": "Allow current extension to change outbound caller ID when placing calls.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provision": {
                      "description": "Provisioning information of the common area phone.",
                      "properties": {
                        "sip_accounts": {
                          "description": "SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.  ",
                          "items": {
                            "properties": {
                              "authorization_id": {
                                "description": "Authorization ID of the SIP account provided in the provisioning process.",
                                "type": "string"
                              },
                              "outbound_proxy": {
                                "description": "Outbound proxy provided in the provisioning process.",
                                "type": "string"
                              },
                              "password": {
                                "description": "Password entered during the  provisioning process. ",
                                "type": "string"
                              },
                              "secondary_outbound_proxy": {
                                "description": "The secondary outbound proxy provided in the provisioning process.",
                                "type": "string"
                              },
                              "sip_domain": {
                                "description": "SIP Domain provided in the provisioning process.\n \n ",
                                "type": "string"
                              },
                              "user_name": {
                                "description": "User name of the SIP account provided in the provisioning process.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "description": "[Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:\n\n* `ztp` : Zero touch provisioning.\n* `assisted`: Assisted provisioning.\n* `manual`: Manual provisioning. \n\n",
                          "enum": [
                            "assisted",
                            "ztp",
                            "manual"
                          ],
                          "type": "string"
                        },
                        "url": {
                          "description": "Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provision_template": {
                      "properties": {
                        "id": {
                          "description": "Provision template id.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Provision template name.",
                          "type": "string"
                        },
                        "supported": {
                          "description": "Support provision template or not.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "site": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the site.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the common area phone. It can be either `online` or `offline`.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nCommon Area Phone details returned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nDevice does not exist in the system.\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Use this API to get details on a specific [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.\n\nA common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it. \n\n\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* A [supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)\n\n**Scopes:** \n`phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "getACommonAreaPhone",
        "summary": "Get common area phone details"
      },
      "patch": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCommon Area Phone information updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `300`\n\nValidation Failed. Device does not exist in the system.\nSelect outbound caller id feature requires a Zoom Phone Metered, Unlimited, or Pro plan.\nInternational calling feature requires a Zoom Phone Metered, Unlimited, or Pro plan.\nHot desking not supported.\nProvision template not supported.\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Use this API to update details on a specific [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.\n\nA common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* A [supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)",
        "operationId": "updateCommonAreaPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cost_center": {
                    "description": "The cost center the common area phone belongs to.",
                    "type": "string"
                  },
                  "department": {
                    "description": "The department the common area phone belongs to.",
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Display name of the common area phone.",
                    "type": "string"
                  },
                  "emergency_address_id": {
                    "description": "The emergency location's address ID.",
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Extension number of the phone. If site code is enabled, provide short extension number instead.",
                    "type": "integer"
                  },
                  "mac_address": {
                    "description": " Mac address or serial number of the device. Examples of supported format: \"64-16-7f-37-90-92\" or \"64167f379092\".",
                    "type": "string"
                  },
                  "policy": {
                    "properties": {
                      "hot_desking": {
                        "description": "",
                        "properties": {
                          "status": {
                            "description": "Allow Hot Desking feature to current device.",
                            "enum": [
                              "unsupported",
                              "on",
                              "off"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "international_calling": {
                        "properties": {
                          "enable": {
                            "description": "Allow current extension to place international calls outside of the calling plan.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "select_outbound_caller_id": {
                        "properties": {
                          "enable": {
                            "description": "Allow current extension to change outbound caller ID when placing calls.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "provision_template_id": {
                    "description": "Provision template id",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update common area phone"
      }
    },
    "/phone/common_area_phones/{commonAreaPhoneId}/calling_plans": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "calling_plans": [
                        {
                          "name": "Zoom Phone Pro",
                          "type": 3000
                        },
                        {
                          "name": "US/CA Metered Calling Plan",
                          "type": 100
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "calling_plans": {
                      "items": {
                        "properties": {
                          "name": {
                            "description": "",
                            "type": "integer"
                          },
                          "type": {
                            "description": "",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nAssign calling plans to Common area phone successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `404`\n\nDevice does not exist: {commonAreaPhoneId}.\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Assign calling plans to common area phone.\n\n\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignCallingPlansToCommonAreaPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calling_plans": {
                    "items": {
                      "properties": {
                        "type": {
                          "description": "",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "calling_plans"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign calling plans to common area phone"
      }
    },
    "/phone/common_area_phones/{commonAreaPhoneId}/calling_plans/{type}": {
      "delete": {
        "parameters": [
          {
            "description": "The common area phone's unique ID.",
            "in": "path",
            "name": "commonAreaPhoneId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to remove.",
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nUnassign calling plans from Common Area Phone successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `404`\nDevice does not exist: {commonAreaPhoneId}.\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Use this API to unassign a calling plan from a common area phone.\n\n**Prerequisites:** \n* A Pro or higher account with a Zoom Phone license \n* An account owner or admin permissions\n\n**Scopes:** \n `phone:write:admin`\n\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignCallingPlansFromCommonAreaPhone",
        "summary": "Unassign calling plan from a common area phone"
      }
    },
    "/phone/common_area_phones/{commonAreaPhoneId}/phone_numbers": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "phone_numbers": [
                        {
                          "id": "dsss123ssssfdsa",
                          "number": "+12055433924"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "",
                            "type": "string"
                          },
                          "number": {
                            "description": "",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nAssign phone numbers to Common area phone successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n\n**Error Code:** `404`\n\nDevice does not exist: {commonAreaPhoneId}.\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Assign phone numbers to common area phone.\n\n\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n**Scope:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignPhoneNumbersToCommonAreaPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "id": {
                          "description": "",
                          "type": "string"
                        },
                        "number": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "phone_numbers"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign phone numbers to common area phone"
      }
    },
    "/phone/common_area_phones/{commonAreaPhoneId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "parameters": [
          {
            "description": "The common area phone's unique ID.",
            "in": "path",
            "name": "commonAreaPhoneId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone number or the phone number's unique ID.",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nUnassign phone numbers from Common Area Phone successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `404`\nDevice does not exist: {commonAreaPhoneId}.\n**Error Code:** `400`<br>\nCommon area optimization option is enabled."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Common Area Phones"
        ],
        "description": "Use this API to unassign a phone number from a common Area phone.\n\n**Prerequisites:**\n\n* A Pro or a higher account with a Zoom Phone license\n* An account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignPhoneNumbersFromCommonAreaPhone",
        "summary": "Unassign phone numbers from a common area phone"
      }
    },
    "/phone/company_number": {
      "put": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMain company number updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\n\nTarget phone number can not be set as main company number.\n\nUnable to update this number as it is used for outbound caller ID to public safety answering point."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\nphoneNumber does not exist, phonenumberId:{phonenumberId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to [change an account's main company number](https://support.zoom.us/hc/en-us/articles/360028553691#h_82414c34-9df2-428a-85a4-efcf7f9e0d72).\n\nExternal users can use the [main company number](https://support.zoom.us/hc/en-us/articles/360028553691) to reach your Zoom Phone users by dialing the main company number and the user's extension. It can also be used by your account's Zoom Phone users as their caller ID when making calls.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* Account owner or admin permissions",
        "operationId": "changeMainCompanyNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_number": {
                    "description": "Provide either the unique identifier of the phone number (id) or the phone number itself in e164 format (e.g: +199955500123).",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Change main company number"
      }
    },
    "/phone/devices": {
      "get": {
        "parameters": [
          {
            "description": "State of the device. The value should be either `assigned` to list devices that have been assigned to user(s) or `unassigned` to list devices that have not yet been assigned to any user in the Zoom account.",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "assigned",
                "unassigned"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "devices": [
                        {
                          "assignee": {
                            "extension_number": 123,
                            "id": "i242djsgrg",
                            "name": "Pooja"
                          },
                          "device_type": "AudioCodes405",
                          "display_name": "Pooja's Phone",
                          "id": "1234324",
                          "mac_address": "203a07240534",
                          "site": {
                            "id": "sdfdgdg32",
                            "name": "HQ site"
                          },
                          "status": "online"
                        }
                      ],
                      "next_page_token": "proident in o",
                      "page_size": 80839828,
                      "total_records": 808398280
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "devices": {
                      "items": {
                        "properties": {
                          "assignee": {
                            "properties": {
                              "extension_number": {
                                "description": "Extension number of the Zoom Phone used by the user.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "User ID of the user to whom the device has been assigned.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "device_type": {
                            "description": "Includes manufacturer name and the model name.",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "Display name of the device.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Device ID - Unique identifier of the Device.",
                            "type": "string"
                          },
                          "mac_address": {
                            "description": "MAC address or serial number of the device.",
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Status of the device. The value is either `online` or `offline`.",
                            "enum": [
                              "online",
                              "offline"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned with a single API call.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records found for the query across all pages.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nDevices listed successfully. "
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "List all the [desk phone devices](https://support.zoom.us/hc/en-us/articles/360021119092) that are configured with Zoom Phone on an account.\n\n**Scopes:** `phone:read:admin`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions",
        "operationId": "listPhoneDevices",
        "summary": "List devices"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nDevice added successfully.  "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\nPhone manufacturer does not exist.\n\nPhone model does not exist.\n\nPhone manufacturer is not supported.\n\n\n**Error Code:** `400`\n\nThe MAC Address is invalid.\n\nThe MAC Address already exists in the system.\n\nEach user can be assigned up to three desk phones.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n**Error Code:** `1001`\n\nUser not found: {userId}\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "By default, all Zoom Phone users can make and receive calls using the Zoom desktop and mobile applications. Additionally, if a desk phone is required, use this API to [add a desk phone and assign it](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da) to a user.\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addPhoneDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assigned_to": {
                    "description": "User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Display name of the desk phone.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "mac_address": {
                    "description": "The MAC address of the desk phone.\n \nNote: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.",
                    "pattern": "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model name of the device.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "type": {
                    "description": "Manufacturer (brand) name of the device.",
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "mac_address",
                  "display_name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a device"
      }
    },
    "/phone/devices/sync": {
      "post": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDevice re-sync command issued."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\n* Site does not exist. \n*{level} is out of range\n\n\n**Error Code:**`429`\n\n\"Too many concurrent requests. A request has already been made.\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "Use this API to resync all online zero-touch or assisted-provisioning devices in an account or a site. Only allows sending one request every 15 minutes.\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n**Scopes:** `phone:write:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "syncPhoneDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "level": {
                    "description": "Deskphone sync level: 1 - account level, 2 - site level.",
                    "maximum": 2,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "site_id": {
                    "description": "Site ID.",
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "level"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Sync deskphones"
      }
    },
    "/phone/devices/{deviceId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDevice deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed.**\n\nDevice does not exist in the system.\nOnly unassigned device can be deleted.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "Remove a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092) from the Zoom Phone System Management.\n\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* Device must not have been assigned to a user.\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteADevice",
        "summary": "Delete a device"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "assignee": {
                        "extension_number": 123,
                        "id": "i242djsgrg",
                        "name": "Pooja"
                      },
                      "device_type": "Ribbon EdgeMarc302",
                      "display_name": "Pooja's Phone",
                      "id": "1234324",
                      "mac_address": "203a07240534",
                      "provision": {
                        "sip_accounts": [
                          {
                            "authorization_id": "123123",
                            "outbound_proxy": "123123",
                            "password": "1123",
                            "secondary_outbound_proxy": "proxy.example.com:5555",
                            "shared_line": {
                              "line_subscription": {
                                "display_name": "Pooja",
                                "extension_number": 123123
                              },
                              "outbound_caller_id": "+123123123"
                            },
                            "sip_domain": "123.zoom.us",
                            "user_name": "123123"
                          }
                        ],
                        "type": "manual"
                      },
                      "site": {
                        "id": "123123",
                        "name": "Main Site"
                      },
                      "status": "offline"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "assignee": {
                      "description": "User to whom the device has been assigned.",
                      "properties": {
                        "extension_number": {
                          "description": "Extension number of the Zoom Phone used by the user.",
                          "type": "integer"
                        },
                        "id": {
                          "description": "User ID of the user to whom the device has been assigned.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the user.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "device_type": {
                      "description": "Includes manufacturer name and the model name.",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "Display name of the device.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Device ID - Unique identifier of the Device.",
                      "type": "string"
                    },
                    "mac_address": {
                      "description": "MAC address or serial number of the device.",
                      "type": "string"
                    },
                    "provision": {
                      "description": "Provisioning information of a device.",
                      "properties": {
                        "sip_accounts": {
                          "description": "SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.  ",
                          "items": {
                            "properties": {
                              "authorization_id": {
                                "description": "Authorization ID of the SIP account provided in the provisioning process.",
                                "type": "string"
                              },
                              "outbound_proxy": {
                                "description": "Outbound proxy provided in the provisioning process.",
                                "type": "string"
                              },
                              "password": {
                                "description": "Password entered during the  provisioning process. ",
                                "type": "string"
                              },
                              "secondary_outbound_proxy": {
                                "description": "The secondary outbound proxy provided in the provisioning process.",
                                "type": "string"
                              },
                              "shared_line": {
                                "description": "Return additional provisioning information with generic device SIP credentials.",
                                "properties": {
                                  "alias": {
                                    "description": "Alias.",
                                    "type": "string"
                                  },
                                  "line_subscription": {
                                    "description": "Line subscription.",
                                    "properties": {
                                      "display_name": {
                                        "description": "Display name.",
                                        "type": "string"
                                      },
                                      "extension_number": {
                                        "description": "Extension number.",
                                        "type": "integer"
                                      },
                                      "phone_number": {
                                        "description": "Phone number.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "outbound_caller_id": {
                                    "description": "Outbound caller ID.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "sip_domain": {
                                "description": "SIP Domain provided in the provisioning process.\n \n ",
                                "type": "string"
                              },
                              "user_name": {
                                "description": "User name of the SIP account provided in the provisioning process.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "description": "[Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:\n\n* `ztp` : Zero touch provisioning.\n* `assisted`: Assisted provisioning.\n* `manual`: Manual provisioning. \n\n",
                          "enum": [
                            "assisted",
                            "ztp",
                            "manual"
                          ],
                          "type": "string"
                        },
                        "url": {
                          "description": "Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "site": {
                      "properties": {
                        "id": {
                          "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the device. The value is either `online` or `offline`.",
                      "enum": [
                        "online",
                        "offline"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nDevice information retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nDevice does not exist in the system."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "Get detailed information about a specific [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions",
        "operationId": "getADevice",
        "summary": "Get device details"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the Device.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDevice updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` \n\nValidation failed. Device does not exist in the system.\n\nInvalid userId.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n**Error Code:** `1001`\n\nUser not found: {userId}\n\nThe user extension does not exist, extensionId: {extensionId}.\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` **Too Many Requests**\n\n**Error Code:** `429`\n\nEach user can be assigned up to three desk phones."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Devices"
        ],
        "description": "Update information of a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).\n\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n \n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateADevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assigned_to": {
                    "description": "User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Display name of the desk phone.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "mac_address": {
                    "description": "The MAC address of the desk phone.\n \nNote: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.",
                    "pattern": "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a device"
      }
    },
    "/phone/emergency_addresses": {
      "get": {
        "parameters": [
          {
            "description": "The emergency address site ID.",
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "User ID to which the personal emergency address belongs.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          },
          {
            "description": "The emergency address verification status: \n* `1` — Verification not Required. \n* `2` — Unverified. \n* `3` — Verification requested. \n* `4` — Verified. \n* `5` — Rejected. \n* `6` — Verification failed.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "emergency_addresses": [
                        {
                          "address_line1": "55 Almaden Boulevard",
                          "city": "SAN JOSE",
                          "country": "US",
                          "id": "CCc8zYT1SN60i7uDMzDbXA",
                          "is_default": false,
                          "level": 1,
                          "owner": {
                            "extension_number": 1000000000,
                            "id": "q5C69v95SPKsZ5uUi-Xbcw",
                            "name": "someownername"
                          },
                          "site": {
                            "id": "8f71O6rWT8KFUGQmJIFAdQ",
                            "name": "somesitename"
                          },
                          "state_code": "CA",
                          "status": 1,
                          "zip": "95113"
                        }
                      ],
                      "next_page_token": "",
                      "page_size": 1,
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "emergency_addresses": {
                      "description": "Information about emergency addresses.",
                      "items": {
                        "properties": {
                          "address_line1": {
                            "description": "The emergency address line 1.",
                            "type": "string"
                          },
                          "address_line2": {
                            "description": "The emergency address line 2.",
                            "type": "string"
                          },
                          "city": {
                            "description": "The emergency address city.",
                            "type": "string"
                          },
                          "country": {
                            "description": "The emergency address country.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The emergency address ID.",
                            "type": "string"
                          },
                          "is_default": {
                            "description": "Indicates whether the emergency address is default or not.",
                            "type": "boolean"
                          },
                          "level": {
                            "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                            "enum": [
                              0,
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "owner": {
                            "description": "The emergency address owner information for a user-level emergency address.",
                            "properties": {
                              "extension_number": {
                                "description": "The emergency address owner extension number.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The emergency address owner ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The emergency address owner name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "site": {
                            "description": "The emergency address site information.",
                            "properties": {
                              "id": {
                                "description": "The site's ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The site's name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "state_code": {
                            "description": "The emergency address state code.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The emergency address verification status: \n* `1` — Verification not required. \n* `2` — Unverified. \n* `3` — Verification requested. \n* `4` — Verified. \n* `5` — Rejected. \n* `6` — Verification failed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "zip": {
                            "description": "The emergency address zip code.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned with a single API call.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nEmergency addresses listed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nSite does not exist: {site_id}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Addresses"
        ],
        "description": "Use this API to list emergency addresses.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "listEmergencyAddresses",
        "summary": "List emergency addresses"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "address_line1": "55 Almaden Boulevard",
                      "city": "SAN JOSE",
                      "country": "US",
                      "id": "CCc8zYT1SN60i7uDMzDbXA",
                      "is_default": false,
                      "level": 1,
                      "owner": {
                        "extension_number": 1000000000,
                        "id": "q5C69v95SPKsZ5uUi-Xbcw",
                        "name": "someownername"
                      },
                      "site": {
                        "id": "8f71O6rWT8KFUGQmJIFAdQ",
                        "name": "somesitename"
                      },
                      "state_code": "CA",
                      "status": 1,
                      "zip": "95113"
                    }
                  }
                },
                "schema": {
                  "items": {
                    "properties": {
                      "address_line1": {
                        "description": "The emergency address line 1.",
                        "type": "string"
                      },
                      "address_line2": {
                        "description": "The emergency address line 2.",
                        "type": "string"
                      },
                      "city": {
                        "description": "The emergency address city.",
                        "type": "string"
                      },
                      "country": {
                        "description": "The emergency address country.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The emergency address ID.",
                        "type": "string"
                      },
                      "is_default": {
                        "description": "Indicates whether the emergency address is default or not.",
                        "type": "boolean"
                      },
                      "level": {
                        "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                        "enum": [
                          0,
                          1,
                          2
                        ],
                        "type": "integer"
                      },
                      "owner": {
                        "description": "The emergency address owner information for a user-level emergency address.",
                        "properties": {
                          "extension_number": {
                            "description": "The emergency address owner extension number.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The emergency address owner ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The emergency address owner name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "site": {
                        "description": "The emergency address site information.",
                        "properties": {
                          "id": {
                            "description": "The site's ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The site's name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "state_code": {
                        "description": "The emergency address state code.",
                        "type": "string"
                      },
                      "status": {
                        "description": "The emergency address verification status: \n* `1` — Verification not required. \n* `2` — Unverified. \n* `3` — Verification requested. \n* `4` — Verified. \n* `5` — Rejected. \n* `6` — Verification failed.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "type": "integer"
                      },
                      "zip": {
                        "description": "The emergency address zip code.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nEmergency address added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\nA site ID is required.\n\nSite does not exist.\n\nCannot set non-default emergency address.\nUser address cannot be default.\nInvalid address: {formattedAddress}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\nSystem has verified and suggested to use this address: {formattedAddress}.\n"
          }
        },
        "tags": [
          "Emergency Addresses"
        ],
        "description": "Use this API to add an emergency address.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "addEmergencyAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address_line1": {
                    "description": "The emergency address line 1.",
                    "type": "string"
                  },
                  "address_line2": {
                    "description": "The emergency address line 2.",
                    "type": "string"
                  },
                  "city": {
                    "description": "The emergency address city.",
                    "type": "string"
                  },
                  "country": {
                    "description": "The emergency address country.",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Indicates whether the emergency address is default or not.",
                    "type": "boolean"
                  },
                  "site_id": {
                    "description": "The site ID. Nullable if 'user_id' is not null.",
                    "type": "string"
                  },
                  "state_code": {
                    "description": "The emergency address state code.",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID to which the personal emergency address belongs.",
                    "type": "string"
                  },
                  "zip": {
                    "description": "The emergency address zip code.",
                    "type": "string"
                  }
                },
                "required": [
                  "country",
                  "address_line1",
                  "state_code",
                  "city",
                  "zip"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add an emergency address"
      }
    },
    "/phone/emergency_addresses/{emergencyAddressId}": {
      "delete": {
        "parameters": [
          {
            "description": "The emergency address ID.",
            "in": "path",
            "name": "emergencyAddressId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nEmergency address deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed.**\n\nEmergency address does not exist: {0}.\n\nCannot delete default emergency address.\n\nCannot delete emergency address whose status is {status}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Addresses"
        ],
        "description": "Use this API to remove an emergency address.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "deleteEmergencyAddress",
        "summary": "Delete an emergency address"
      },
      "get": {
        "parameters": [
          {
            "description": "The emergency address ID.",
            "in": "path",
            "name": "emergencyAddressId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "address_line1": "55 Almaden Boulevard",
                      "city": "SAN JOSE",
                      "country": "US",
                      "id": "CCc8zYT1SN60i7uDMzDbXA",
                      "is_default": false,
                      "level": 1,
                      "owner": {
                        "extension_number": 1000000000,
                        "id": "q5C69v95SPKsZ5uUi-Xbcw",
                        "name": "someownername"
                      },
                      "site": {
                        "id": "8f71O6rWT8KFUGQmJIFAdQ",
                        "name": "somesitename"
                      },
                      "state_code": "CA",
                      "status": 1,
                      "zip": "95113"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "address_line1": {
                      "description": "The emergency address line 1.",
                      "type": "string"
                    },
                    "address_line2": {
                      "description": "The emergency address line 2.",
                      "type": "string"
                    },
                    "city": {
                      "description": "The emergency address city.",
                      "type": "string"
                    },
                    "country": {
                      "description": "The emergency address country.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The emergency address ID.",
                      "type": "string"
                    },
                    "is_default": {
                      "description": "Indicates whether the emergency address is default or not.",
                      "type": "boolean"
                    },
                    "level": {
                      "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "owner": {
                      "description": "The emergency address owner information for a user-level emergency address.",
                      "properties": {
                        "extension_number": {
                          "description": "The emergency address owner extension number.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The emergency address owner ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The emergency address owner name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "site": {
                      "description": "The emergency address site information.",
                      "properties": {
                        "id": {
                          "description": "The site's ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The site's name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "state_code": {
                      "description": "The emergency address state code.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The emergency address verification status: \n* `1` — Verification not required. \n* `2` — Unverified. \n* `3` — Verification requested. \n* `4` — Verified. \n* `5` — Rejected. \n* `6` — Verification failed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "zip": {
                      "description": "The emergency address zip code.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nEmergency address retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `300` **Bad Request**\n\n**Error Code:** `400`\n\nEmergency address does not exist {emergencyAddressId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Addresses"
        ],
        "description": "Use this API to get emergency address information.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n",
        "operationId": "getEmergencyAddress",
        "summary": "Get emergency address details"
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "address_line1": "55 Almaden Boulevard",
                      "city": "SAN JOSE",
                      "country": "US",
                      "id": "CCc8zYT1SN60i7uDMzDbXA",
                      "is_default": false,
                      "level": 1,
                      "owner": {
                        "extension_number": 1000000000,
                        "id": "q5C69v95SPKsZ5uUi-Xbcw",
                        "name": "someownername"
                      },
                      "site": {
                        "id": "8f71O6rWT8KFUGQmJIFAdQ",
                        "name": "somesitename"
                      },
                      "state_code": "CA",
                      "status": 1,
                      "zip": "95113"
                    }
                  }
                },
                "schema": {
                  "items": {
                    "properties": {
                      "address_line1": {
                        "description": "The emergency address line 1.",
                        "type": "string"
                      },
                      "address_line2": {
                        "description": "The emergency address line 2.",
                        "type": "string"
                      },
                      "city": {
                        "description": "The emergency address city.",
                        "type": "string"
                      },
                      "country": {
                        "description": "The emergency address country.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The emergency address ID.",
                        "type": "string"
                      },
                      "is_default": {
                        "description": "Indicates whether the emergency address is default or not.",
                        "type": "boolean"
                      },
                      "level": {
                        "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                        "enum": [
                          0,
                          1,
                          2
                        ],
                        "type": "integer"
                      },
                      "owner": {
                        "description": "The emergency address owner information for a user-level emergency address.",
                        "properties": {
                          "extension_number": {
                            "description": "The emergency address owner extension number.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The emergency address owner ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The emergency address owner name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "site": {
                        "description": "The emergency address site information.",
                        "properties": {
                          "id": {
                            "description": "The site's ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The site's name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "state_code": {
                        "description": "The emergency address state code.",
                        "type": "string"
                      },
                      "status": {
                        "description": "The emergency address verification status: \n* `1` — Verification not required. \n* `2` — Unverified. \n* `3` — Verification requested. \n* `4` — Verified. \n* `5` — Rejected. \n* `6` — Verification failed.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "type": "integer"
                      },
                      "zip": {
                        "description": "The emergency address zip code.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nEmergency address updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\nInvalid address: {formattedAddress}.\n\nChange country is not allowed.\n\nCannot change site.\n\nPersonal emergency address could not be changed to default.\n\nCannot set non-default emergency address.\n\nEmergency address is already set as default.\n\nCannot update emergency address whose status is {status}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\n\n**Error Code:** `404`\nSystem has verified and suggested to use this address: {formattedAddress}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Addresses"
        ],
        "description": "Use this API to update an emergency address information.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "updateEmergencyAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address_line1": {
                    "description": "The emergency address line 1.",
                    "type": "string"
                  },
                  "address_line2": {
                    "description": "The emergency address line 2.",
                    "type": "string"
                  },
                  "city": {
                    "description": "The emergency address city.",
                    "type": "string"
                  },
                  "country": {
                    "description": "The emergency address country.",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Indicates whether the emergency address is default or not.",
                    "type": "boolean"
                  },
                  "state_code": {
                    "description": "The emergency address state code.",
                    "type": "string"
                  },
                  "zip": {
                    "description": "The emergency address zip code.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update an emergency address"
      }
    },
    "/phone/emergency_number_pools/phone_numbers": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "phone_numbers": [
                        {
                          "id": "djkfsd13",
                          "number": "+123456789"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "phone_numbers": {
                      "description": "Assigned phone number",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "ID of the phone number",
                            "type": "string"
                          },
                          "number": {
                            "description": "The phone number that is assigned to the emergency number pool.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \n\nPhone number assigned successfully. \n"
          },
          "404": {
            "description": "**Error Code:** `300`\n\nEmergency number pool ID error.\n\nValidation Failed. Phone number has already been assigned.\n**Error Code:** `429`\n\nToo many concurrent requests. A request has already been made."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to assign phone numbers to the [Emergency Number Pool](https://support.zoom.us/hc/en-us/articles/360062110192-Routing-emergency-calls).\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "assignPhoneNumberToEmergencyNumberPool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "id": {
                          "description": "ID for phone number",
                          "type": "string"
                        },
                        "number": {
                          "description": "Phone number in E164 format.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API. Required if multiple sites are enabled.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Provide either an ID or a number in the request body."
        },
        "summary": "Assign phone numbers to the emergency number pool"
      }
    },
    "/phone/emergency_number_pools/phone_numbers/{phoneNumberId}": {
      "delete": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** `300`\n\nEmergency number pool error.\n**Error Code:** `429`\n\nToo many concurrent requests. A request has already been made."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to unassign phone numbers from the [Emergency Number Pool](https://support.zoom.us/hc/en-us/articles/360062110192-Routing-emergency-calls).\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "unassignPhoneNumberFromEmergencyNumberPool",
        "summary": "Unassign phone numbers from the emergency number pool"
      }
    },
    "/phone/extension/{extensionId}/call_handling/settings": {
      "get": {
        "parameters": [
          {
            "description": "The extension ID.",
            "in": "path",
            "name": "extensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "business_hours": [
                        {
                          "settings": {
                            "custom_hours_settings": [
                              {
                                "from": "09:00",
                                "to": "18:00",
                                "type": 0,
                                "weekday": 1
                              },
                              {
                                "from": "00:00",
                                "to": "00:00",
                                "type": 1,
                                "weekday": 2
                              },
                              {
                                "from": "09:00",
                                "to": "18:00",
                                "type": 2,
                                "weekday": 3
                              },
                              {
                                "from": "09:30",
                                "to": "18:30",
                                "type": 2,
                                "weekday": 4
                              },
                              {
                                "from": "09:46",
                                "to": "18:46",
                                "type": 2,
                                "weekday": 5
                              },
                              {
                                "from": "09:00",
                                "to": "18:00",
                                "type": 0,
                                "weekday": 6
                              },
                              {
                                "from": "00:00",
                                "to": "00:00",
                                "type": 1,
                                "weekday": 7
                              }
                            ],
                            "type": 2
                          },
                          "sub_setting_type": "custom_hours"
                        },
                        {
                          "settings": {
                            "call_forwarding_settings": [
                              {
                                "description": "Zoom Applications",
                                "enable": true,
                                "id": "9aZLs_GqQb2qypzDgVWyzQ"
                              }
                            ],
                            "require_press_1_before_connecting": false
                          },
                          "sub_setting_type": "call_forwarding"
                        },
                        {
                          "settings": {
                            "max_wait_time": 60,
                            "ring_mode": "sequential",
                            "routing": {
                              "action": 9,
                              "forward_to": {
                                "display_name": "Test_add_01",
                                "extension_id": "OJGi5xOFQPmrJbKg68-iWg",
                                "id": "1",
                                "phone_number": "+8615850138221"
                              }
                            }
                          },
                          "sub_setting_type": "call_handling"
                        }
                      ],
                      "closed_hours": [
                        {
                          "settings": {
                            "call_forwarding_settings": [
                              {
                                "description": "Zoom Applications",
                                "enable": true,
                                "id": "INYrRpOORcWcl1L1LTrZRA"
                              }
                            ],
                            "require_press_1_before_connecting": false
                          },
                          "sub_setting_type": "call_forwarding"
                        },
                        {
                          "settings": {
                            "max_wait_time": 60,
                            "ring_mode": "simultaneous",
                            "routing": {
                              "action": 9,
                              "forward_to": {
                                "display_name": "Test_add_ec_01",
                                "extension_id": "y0brV9dgQyCYid1h9ILCOw",
                                "id": "Test_add_ec_01"
                              }
                            }
                          },
                          "sub_setting_type": "call_handling"
                        }
                      ],
                      "holiday_hours": [
                        {
                          "details": [
                            {
                              "settings": {
                                "from": "2021-09-30T09:01:53Z",
                                "name": "holiday_2021_09_29_09_01_53_605",
                                "to": "2021-10-01T09:01:53Z"
                              },
                              "sub_setting_type": "holiday"
                            },
                            {
                              "settings": {
                                "call_forwarding_settings": [
                                  {
                                    "description": "Zoom Applications",
                                    "enable": false,
                                    "id": "lPof7CDrQJuQB3G1MAe8_w"
                                  }
                                ],
                                "require_press_1_before_connecting": true
                              },
                              "sub_setting_type": "call_forwarding"
                            },
                            {
                              "settings": {
                                "max_wait_time": 30,
                                "ring_mode": "simultaneous",
                                "routing": {
                                  "action": 1,
                                  "allow_callers_check_voicemail": false,
                                  "connect_to_operator": false
                                }
                              },
                              "sub_setting_type": "call_handling"
                            }
                          ],
                          "holiday_id": "TWIkBs6QQKe4mXfwKGUZfQ"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "business_hours": {
                      "description": "Information about the business hours settings.",
                      "items": {
                        "properties": {
                          "settings": {
                            "description": "The business hours settings.",
                            "properties": {
                              "allow_callers_check_voicemail": {
                                "description": "Whether to allow the callers to check voicemails over a phone. Required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                "type": "boolean"
                              },
                              "allow_members_to_reset": {
                                "description": "Allow queue members to set their own Business Hours. This will allow queue members' Business Hours to override the default hours of the Call Queue.\n\nRequired for `Call Queue custom_hours` sub-setting.",
                                "type": "boolean"
                              },
                              "audio_while_connecting": {
                                "description": "The audio while connecting prompt. Option to select the audio played for the inbound callers when they are waiting to be routed to the next available call queue member.\n\nempty char - default and `0` - disable \n\nReturned only for the `Call Queue call handling` sub setting.",
                                "properties": {
                                  "id": {
                                    "description": "The audio while connecting prompt ID.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The audio while connecting prompt name.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "call_distribution": {
                                "description": "Use this option to distribute incoming calls.\n\nIf `Sequential` or `Rotating` is selected, calls will ring for a specific time before trying the next available queue member. \n\nReturned only for the `call_handling` sub-setting.",
                                "properties": {
                                  "handle_multiple_calls": {
                                    "description": "The maximum number of calls that can be handled simultaneously is less than half of the total amount of available call queue members. Note that the first incoming call may not be answered first.\n\nReturned only except `simultaneous` ring mode.",
                                    "type": "boolean"
                                  },
                                  "ring_duration": {
                                    "description": "Ringing duration for each member:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nReturned only except `simultaneous` ring mode.",
                                    "enum": [
                                      10,
                                      15,
                                      20,
                                      25,
                                      30,
                                      35,
                                      40,
                                      45,
                                      50,
                                      55,
                                      60
                                    ],
                                    "type": "integer"
                                  },
                                  "ring_mode": {
                                    "description": "The call distribution ring mode: \n* `simultaneous` \n* `sequential` \n* `rotating` \n* `longest_idle`",
                                    "enum": [
                                      "simultaneous",
                                      "sequential",
                                      "rotating",
                                      "longest_idle"
                                    ],
                                    "type": "string"
                                  },
                                  "skip_offline_device_phone_number": {
                                    "description": "1. Devices with Zoom app or client not launched and mobile phone with screen locked will be skipped. \n\n2. Phone numbers added to user's call handling settings will be skipped.\n\nReturned only except `simultaneous` ring mode.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "call_forwarding_settings": {
                                "description": "The call forwarding settings. Returned only for the `call_forwarding` sub-setting.",
                                "items": {
                                  "properties": {
                                    "description": {
                                      "description": "The external phone number's description.",
                                      "type": "string"
                                    },
                                    "enable": {
                                      "description": "Whether to receive a call.",
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "description": "The call forwarding's ID.",
                                      "type": "string"
                                    },
                                    "phone_number": {
                                      "description": "The external phone number, in E164 format.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "call_not_answer_action": {
                                "$ref": "#/components/schemas/CallHandlingNotAnswerAction"
                              },
                              "connect_to_operator": {
                                "description": "Whether to allow callers to reach an operator. Returns only when `call_not_answer_action` is set to `1` (forward to voicemail).",
                                "type": "boolean"
                              },
                              "custom_hours_settings": {
                                "description": "The custom hours settings. Returned only for the `custom_hours` sub-setting.",
                                "items": {
                                  "properties": {
                                    "from": {
                                      "description": "The custom hours start time, and `HH:mm` format.",
                                      "type": "string"
                                    },
                                    "to": {
                                      "description": "The custom hours end time, in `HH:mm` format.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of custom hours: \n* `0` — Disabled. \n* `1` — 24 hours. \n* `2` — Customized hours.",
                                      "enum": [
                                        0,
                                        1,
                                        2
                                      ],
                                      "type": "integer"
                                    },
                                    "weekday": {
                                      "description": "The day of the week: \n* `1` — Sunday \n* `2` — Monday \n* `3` — Tuesday \n* `4` — Wednesday \n* `5` — Thursday \n* `6` — Friday \n* `7` — Saturday",
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ],
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "greeting_prompt": {
                                "description": "The greeting audio prompt.\n\nReturned only for the `Call Queue` and `Auto Receptionist` `call handling` sub setting.",
                                "properties": {
                                  "id": {
                                    "description": "The greeting audio prompt ID. \n\n empty char - default and `0` - disable at this time.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The greeting audio prompt name.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "max_call_in_queue": {
                                "description": "The max call in queue,\nSpecify the maximum number of callers to place in the queue. When this number is exceeded, callers will be routed based on your overflow option. Up to 60.\n\nReturned only for the `Call Queue call_handling` sub-setting.",
                                "type": "integer"
                              },
                              "max_wait_time": {
                                "description": "The max wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \nSpecify how long a caller will wait in the queue. Once the wait time is exceeded, the caller will be rerouted based on your overflow option for `Call Queue`:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300` \n* `600` \n* `900` \n* `1200` \n* `1500` \n* `1800`  \n\nReturned only for the `call_handling` sub-setting.",
                                "enum": [
                                  10,
                                  15,
                                  20,
                                  25,
                                  30,
                                  35,
                                  40,
                                  45,
                                  50,
                                  55,
                                  60,
                                  120,
                                  180,
                                  240,
                                  300,
                                  600,
                                  900,
                                  1200,
                                  1500,
                                  1800
                                ],
                                "type": "integer"
                              },
                              "music_on_hold": {
                                "description": "The music on hold prompt. This option to choose music for inbound callers when they're placed on hold by a call queue member.\n\nempty char - default and `0` - disable.\n\nReturned only for the `Call Queue call handling` sub setting.",
                                "properties": {
                                  "id": {
                                    "description": "The music on hold prompt ID.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The music on hold prompt name.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "receive_call": {
                                "description": "Receive calls while on a call. When enabled, call queue members can still receive new incoming calls notification even on the call. \n\nReturned only for the `Call Queue call handling` sub setting.",
                                "type": "boolean"
                              },
                              "require_press_1_before_connecting": {
                                "description": "When a call is forwarded to a personal phone number, whether the user must press \"1\" before the call connects. This helps to ensure that missed calls do not reach to your personal voicemail. Returned only for the `call_forwarding` sub-setting.",
                                "type": "boolean"
                              },
                              "ring_mode": {
                                "description": "The call handling ring mode: \n* `simultaneous` \n* `sequential` \n\nReturned only for the `call_handling` sub-setting.",
                                "enum": [
                                  "simultaneous",
                                  "sequential"
                                ],
                                "type": "string"
                              },
                              "routing": {
                                "$ref": "#/components/schemas/CallHandlingRouting"
                              },
                              "type": {
                                "description": "The type of custom hours: \n* `1` — 24 hours, 7 days a week. \n* `2` — Custom hours. \n\nReturned only for the `custom_hours` sub-setting.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer"
                              },
                              "wrap_up_time": {
                                "description": "The wrap up time in seconds \nSpecify the duration before the next queue call is routed to a member for `Call Queue`:\n* `0` \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300`\n\nReturned only for the `call_handling` sub-setting.",
                                "enum": [
                                  10,
                                  15,
                                  20,
                                  25,
                                  30,
                                  35,
                                  40,
                                  45,
                                  50,
                                  55,
                                  60,
                                  120,
                                  180,
                                  240,
                                  300
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "sub_settings_type": {
                            "description": "The type of sub-setting: \n* `call_forwarding` \n* `custom_hours` \n* `call_handling`",
                            "enum": [
                              "call_forwarding",
                              "custom_hours",
                              "call_handling"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "closed_hours": {
                      "description": "Information about the closed hours settings.",
                      "items": {
                        "properties": {
                          "settings": {
                            "description": "The closed hours settings.",
                            "properties": {
                              "allow_callers_check_voicemail": {
                                "description": "Whether to allow the callers to check voicemails over a phone. Required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                "type": "boolean"
                              },
                              "call_forwarding_settings": {
                                "description": "The call forwarding settings. Returned only for the `call_forwarding` sub-setting.",
                                "items": {
                                  "properties": {
                                    "description": {
                                      "description": "The external phone number description.",
                                      "type": "string"
                                    },
                                    "enable": {
                                      "description": "Whether to receive a call.",
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "description": "The call forwarding ID.",
                                      "type": "string"
                                    },
                                    "phone_number": {
                                      "description": "The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "call_not_answer_action": {
                                "$ref": "#/components/schemas/CallHandlingNotAnswerAction"
                              },
                              "connect_to_operator": {
                                "description": "Whether to allow callers to reach an operator. Returned only when the `call_not_answer_action` setting is set as a `1` (forward to voicemail) value.",
                                "type": "boolean"
                              },
                              "max_wait_time": {
                                "description": "The max wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nReturned only for the `call_handling` sub-setting.",
                                "enum": [
                                  "15",
                                  "20",
                                  "25",
                                  "30",
                                  "35",
                                  "40",
                                  "45",
                                  "50",
                                  "55",
                                  "60"
                                ],
                                "type": "integer"
                              },
                              "require_press_1_before_connecting": {
                                "description": "When a call is forwarded to a personal phone number, whether the user must press \"1\" before the call connects. This helps to ensure that missed calls do not reach to your personal voicemail. Returned only for the `call_forwarding` sub-setting.",
                                "type": "boolean"
                              },
                              "ring_mode": {
                                "description": "The call handling's ring mode setting: \n* `simultaneous` \n* `sequential` \n\nReturned only for the `call_handling` sub-setting.",
                                "enum": [
                                  "simultaneous",
                                  "sequential"
                                ],
                                "type": "string"
                              },
                              "routing": {
                                "$ref": "#/components/schemas/CallHandlingRouting"
                              }
                            },
                            "type": "object"
                          },
                          "sub_settings_type": {
                            "description": "The type of sub-setting: \n* `call_forwarding` \n* `call_handling`",
                            "enum": [
                              "call_forwarding",
                              "call_handling"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "holiday_hours": {
                      "description": "Information about the holiday hours settings.",
                      "items": {
                        "properties": {
                          "details": {
                            "description": "Information about the holiday call handling.",
                            "items": {
                              "properties": {
                                "settings": {
                                  "description": "Sub-setting information.",
                                  "properties": {
                                    "allow_callers_check_voicemail": {
                                      "description": "Whether to allow the callers to check voicemails over a phone. Required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                      "type": "boolean"
                                    },
                                    "call_forwarding_settings": {
                                      "description": "The call forwarding settings. Returned only for the `call_forwarding` sub-setting.",
                                      "items": {
                                        "properties": {
                                          "description": {
                                            "description": "The external phone number's description.",
                                            "type": "string"
                                          },
                                          "enable": {
                                            "description": "Whether to receive a call.",
                                            "type": "boolean"
                                          },
                                          "id": {
                                            "description": "The call forwarding's ID.",
                                            "type": "string"
                                          },
                                          "phone_number": {
                                            "description": "The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "call_not_answer_action": {
                                      "$ref": "#/components/schemas/CallHandlingNotAnswerAction"
                                    },
                                    "connect_to_operator": {
                                      "description": "Whether to allow callers to reach an operator. Returned only when the `call_not_answer_action` setting is set as a `1` (Forward to a voicemail) value.",
                                      "type": "boolean"
                                    },
                                    "from": {
                                      "description": "The holiday start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. Returned only for the `holiday` sub-setting.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "max_wait_time": {
                                      "description": "The max wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nReturned only for the `call_handling` sub-setting.",
                                      "enum": [
                                        "15",
                                        "20",
                                        "25",
                                        "30",
                                        "35",
                                        "40",
                                        "45",
                                        "50",
                                        "55",
                                        "60"
                                      ],
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "The holiday name. Returned only for the `holiday` sub-setting.",
                                      "type": "string"
                                    },
                                    "require_press_1_before_connecting": {
                                      "description": "When a call is forwarded to a personal phone number, whether the user must press \"1\" before the call connects. Returned only for the `call_forwarding` sub-setting.",
                                      "type": "boolean"
                                    },
                                    "ring_mode": {
                                      "description": "The call handling's ring mode setting: \n* `simultaneous` \n* `sequential` \n\nReturned only for the `call_handling` sub-setting.",
                                      "enum": [
                                        "simultaneous",
                                        "sequential"
                                      ],
                                      "type": "string"
                                    },
                                    "routing": {
                                      "$ref": "#/components/schemas/CallHandlingRouting"
                                    },
                                    "to": {
                                      "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. Returned only for the `holiday` sub-setting.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "sub_settings_type": {
                                  "description": "The type of sub-setting: \n* `call_forwarding` \n* `call_handling` \n* `holiday`",
                                  "enum": [
                                    "call_forwarding",
                                    "call_handling",
                                    "holiday"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "holiday_id": {
                            "description": "The holiday's ID.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\nOK"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Handling"
        ],
        "description": "Use this API to get information about a Zoom Phone's call handling settings. For more information, read our [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings) documentation.\n\n**Applicable to user, call queue, or auto receptionist call handling at this time.** \n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone enabled",
        "operationId": "getCallHandling",
        "summary": "Get call handling settings"
      }
    },
    "/phone/extension/{extensionId}/call_handling/settings/{settingType}": {
      "delete": {
        "parameters": [
          {
            "description": "The extension ID.",
            "in": "path",
            "name": "extensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of call handling setting: \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`",
            "in": "path",
            "name": "settingType",
            "required": true,
            "schema": {
              "enum": [
                "business_hours",
                "closed_hours",
                "holiday_hours"
              ],
              "type": "string"
            }
          },
          {
            "description": "The call forwarding's ID. Use this parameter if you pass the `call_forwarding_id` value for the `settingType` parameter.",
            "in": "query",
            "name": "call_forwarding_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The holiday's ID. Use this parameter if you pass the `holiday_id` value for the `settingType` parameter.",
            "in": "query",
            "name": "holiday_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Codes** `204`\nCall handling setting successfully deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n**Error Code:** `404`\nCall forwarding does not exist: {callForwardingId}.\nHoliday does not exist."
          }
        },
        "tags": [
          "Call Handling"
        ],
        "description": "Use this API to delete a Zoom Phone's call handling settings. For more information, read our [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings) documentation.\n\n**Applicable to user, call queue, or auto receptionist call handling at this time.** \n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone enabled",
        "operationId": "deleteCallHandling",
        "summary": "Delete a call handling setting"
      },
      "patch": {
        "parameters": [
          {
            "description": "The extension ID.",
            "in": "path",
            "name": "extensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The call handling setting type: \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`",
            "in": "path",
            "name": "settingType",
            "required": true,
            "schema": {
              "enum": [
                "business_hours",
                "closed_hours",
                "holiday_hours"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Codes** `204`\nCall handling settings successfully updated."
          },
          "400": {
            "description": "**HTTP Response Code:** `400`\n**Error Codes:** `300`\nInvalid custom hours from/to time for weekday: {weekday}.\nInvalid holiday from/to time.\n`400`\nYou cannot assign yourself as the operator."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n**Error Code:** `404`\nCall forwarding does not exist: {callForwardingId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Handling"
        ],
        "description": "Use this API to update a Zoom Phone's call handling setting. For more information, read our [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings) documentation.\n\n**Applicable to user, call queue, or auto receptionist call handling at this time.** \n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone enabled",
        "operationId": "updateCallHandling",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "properties": {
                      "allow_callers_check_voicemail": {
                        "description": "Whether to allow the callers to check voicemails over a phone. Required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                        "type": "boolean"
                      },
                      "allow_members_to_reset": {
                        "description": "Allow queue members to set their own Business Hours. This will allow queue members' Business Hours to override the default hours of the Call Queue.\n\nThis is only required for `Call Queue custom_hours` sub-setting.",
                        "type": "boolean"
                      },
                      "audio_while_connecting_id": {
                        "description": "The audio while connecting prompt ID. Option to select the audio played for the inbound callers when they are waiting to be routed to the next available call queue member.\n\nOnly supports empty char - default and `0` - disable at this time.\n\nThis is only required for the `Call Queue call handling` sub setting.",
                        "type": "string"
                      },
                      "call_distribution": {
                        "description": "Use this option to distribute incoming calls.\n\nIf `Sequential` or `Rotating` is selected, calls will ring for a specific time before trying the next available queue member. \n\nThis is only required for the `call_handling` sub-setting.",
                        "properties": {
                          "handle_multiple_calls": {
                            "description": "The maximum number of calls that can be handled simultaneously is less than half of the total amount of available call queue members. Note that the first incoming call may not be answered first.\n\nRequired except for `simultaneous` ring mode.",
                            "type": "boolean"
                          },
                          "ring_duration": {
                            "description": "Ringing duration for each member:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nRequired except for `simultaneous` ring mode.",
                            "enum": [
                              10,
                              15,
                              20,
                              25,
                              30,
                              35,
                              40,
                              45,
                              50,
                              55,
                              60
                            ],
                            "type": "integer"
                          },
                          "ring_mode": {
                            "description": "The call distribution ring mode: \n* `simultaneous` \n* `sequential` \n* `rotating` \n* `longest_idle`.",
                            "enum": [
                              "simultaneous",
                              "sequential",
                              "rotating",
                              "longest_idle"
                            ],
                            "type": "string"
                          },
                          "skip_offline_device_phone_number": {
                            "description": "1. Devices with Zoom app or client not launched and mobile phone with screen locked will be skipped. \n\n2. Phone numbers added to user's call handling settings will be skipped.\n\nRequired except for `simultaneous` ring mode.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "call_forwarding_settings": {
                        "description": "The call forwarding settings. This is only required for the `call_forwarding` sub-setting.",
                        "items": {
                          "properties": {
                            "description": {
                              "description": "The external phone number's description.",
                              "type": "string"
                            },
                            "enable": {
                              "description": "Whether to receive a call.",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The call forwarding's ID.",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "call_not_answer_action": {
                        "description": "The action to take when a call is not answered: \n* `1` — Forward to voicemail. \n* `2` — Forward to the user. \n* `4` — Forward to the common area phone. \n* `6` — Forward to the auto receptionist. \n* `7` — Forward to a call queue. \n* `8` — Forward to a shared line group. \n* `9` — Forward to an external contact. \n* `10` - Forward to a phone number. \n* `11` — Disconnect. \n* `12` — Play a message, then disconnect. \n* `13` - Forward to a message. \n* `14` - Forward to an interactive voice response (IVR). \n\nThis is only required for the `call_handling` sub-setting.",
                        "enum": [
                          1,
                          2,
                          4,
                          6,
                          7,
                          8,
                          9,
                          10,
                          11,
                          12,
                          13,
                          14
                        ],
                        "type": "integer"
                      },
                      "connect_to_operator": {
                        "description": "Whether to allow callers to reach an operator. This is only required when the `call_not_answer_action` setting is set as a `1` (forward to voicemail) value.",
                        "type": "boolean"
                      },
                      "custom_hours_settings": {
                        "description": "The custom hours settings. This is only required for the `custom_hours` sub-setting.",
                        "items": {
                          "properties": {
                            "from": {
                              "description": "The custom hours start time, `HH:mm` format.",
                              "type": "string"
                            },
                            "to": {
                              "description": "The custom hours end time, in `HH:mm` format.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of custom hours: \n* `0` — Disabled. \n* `1` — 24 hours. \n* `2` — Customized hours.",
                              "enum": [
                                0,
                                1,
                                2
                              ],
                              "type": "integer"
                            },
                            "weekday": {
                              "description": "The day of the week: \n* `1` — Sunday \n* `2` — Monday \n* `3` — Tuesday \n* `4` — Wednesday \n* `5` — Thursday \n* `6` — Friday \n* `7` — Saturday",
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "forward_to_extension_id": {
                        "description": "The forwarding extension ID. Required only when call_not_answer_action setting is set to 2 - Forward to the user. 4 - Forward to the common area phone. 6 - Forward to the auto receptionist. 7 - Forward to a call queue. 8 - Forward to a shared line group. or 9 - forward to an external contact.",
                        "type": "string"
                      },
                      "from": {
                        "description": "The holiday's start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. This is only required for the `holiday` sub-setting.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "greeting_prompt_id": {
                        "description": "The greeting audio prompt ID. \n\nOnly supports empty char - default and `0` - disable at this time.\n\nThis is only required for the `Call Queue` and `Auto Receptionist` `call handling` sub setting.",
                        "type": "string"
                      },
                      "holiday_id": {
                        "description": "The holiday's ID. This is only required for the `holiday` sub-setting.",
                        "type": "string"
                      },
                      "max_call_in_queue": {
                        "description": "The maximum number of calls in queue\nSpecify the maximum number of callers to place in the queue. When this number is exceeded, callers will be routed based on the overflow option. Up to 60.\n\nThis is only required for the `Call Queue call_handling` sub-setting.",
                        "type": "integer"
                      },
                      "max_wait_time": {
                        "description": "The max wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \nSpecify how long a caller will wait in the queue. Once the wait time is exceeded, the caller will be rerouted based on the overflow option for `Call Queue`:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300` \n* `600` \n* `900` \n* `1200` \n* `1500` \n* `1800`  \n\nThis is only required for the `call_handling` sub-setting.",
                        "enum": [
                          10,
                          15,
                          20,
                          25,
                          30,
                          35,
                          40,
                          45,
                          50,
                          55,
                          60,
                          120,
                          180,
                          240,
                          300,
                          600,
                          900,
                          1200,
                          1500,
                          1800
                        ],
                        "type": "integer"
                      },
                      "music_on_hold_id": {
                        "description": "The music on hold prompt ID. This option to choose music for inbound callers when they're placed on hold by a call queue member.\n\nOnly supports empty char - default and `0` - disable at this time.\n\nThis is only required for the `Call Queue call handling` sub setting.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the holiday. This is only required for the `holiday` sub-setting.",
                        "type": "string"
                      },
                      "operator_extension_id": {
                        "description": "The extension ID of the operator to whom the call is being forwarded. Required only when `call_not_answer_action` is set to `1` (forward to voicemail) and `connect_to_operator` is set to `true`.",
                        "type": "string"
                      },
                      "receive_call": {
                        "description": "Receive calls while on a call. When enabled, call queue members can still receive new incoming calls notification even on the call. \n\nThis is only required for the `Call Queue call handling` sub setting.",
                        "type": "boolean"
                      },
                      "require_press_1_before_connecting": {
                        "description": "When a call is forwarded to a personal phone number, whether the user must press \"1\" before the call connects. Enable this option to ensure missed calls do not reach to your personal voicemail. This is only required for the `call_forwarding` sub-setting.\n\nPress 1 is always enabled and is required for `callQueue` type extension calls.",
                        "type": "boolean"
                      },
                      "ring_mode": {
                        "description": "The call handling ring mode: \n* `simultaneous` \n* `sequential` ",
                        "enum": [
                          "simultaneous",
                          "sequential"
                        ],
                        "type": "string"
                      },
                      "to": {
                        "description": "The holiday's end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. This is only required for the `holiday` sub-setting.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of custom hours: \n* `1` — 24 hours, 7 days a week. \n* `2` — Custom hours. \n\nThis is only required for the `custom_hours` sub-setting.",
                        "enum": [
                          1,
                          2
                        ],
                        "type": "integer"
                      },
                      "voicemail_greeting_id": {
                        "description": "The voicemail greeting prompt ID. Required when `call_not_answer_action` is set to `1` (forward to voicemail).\n\nThis is only required for the `Call Queue` and `Auto Receptionist` `call handling` sub setting.",
                        "type": "string"
                      },
                      "wrap_up_time": {
                        "description": "The wrap up time in seconds \nSpecify the duration before the next queue call is routed to a member for `Call Queue`:\n* `0` \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300`\n\nThis is only required for the `call_handling` sub-setting.",
                        "enum": [
                          10,
                          15,
                          20,
                          25,
                          30,
                          35,
                          40,
                          45,
                          50,
                          55,
                          60,
                          120,
                          180,
                          240,
                          300
                        ],
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "sub_settings_type": {
                    "description": "The type of sub-setting: \n* `call_forwarding` \n* `holiday` \n* `custom_hours` \n* `call_handling`",
                    "enum": [
                      "call_forwarding",
                      "holiday",
                      "custom_hours",
                      "call_handling"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a call handling setting"
      },
      "post": {
        "parameters": [
          {
            "description": "The extension ID.",
            "in": "path",
            "name": "extensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The call handling setting type: \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`",
            "in": "path",
            "name": "settingType",
            "required": true,
            "schema": {
              "enum": [
                "business_hours",
                "closed_hours",
                "holiday_hours"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_forwarding_id": "UoaP4YmLS7C6JS2R5Vbj4Q"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "call_forwarding_id": {
                      "description": "The call forwarding's ID. The response only returns this value when you create a `call_forwarding` sub-setting.",
                      "type": "string"
                    },
                    "holiday_id": {
                      "description": "The holiday's ID. The response only returns this value when you create a `holiday` sub-setting.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Codes** `201`\nCreated."
          },
          "400": {
            "description": "**HTTP Response Code:** `400`\n**Error Codes:** `400`\nThis operation is not supported.\nRequest failed because the \"Call Forwarding to External Numbers\" feature is not enabled."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n**Error Code:** `404`\nExtension does not exist: {extensionId}\nHoliday does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Handling"
        ],
        "description": "Use this API to create a Zoom Phone call handling setting. Call handling settings let you control how your system routes calls during business, closed, or holiday hours. For more information, read our [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings) documentation.\n\n**Applicable to user, call queue, or auto receptionist call handling at this time.** \n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or a higher account with Zoom Phone enabled",
        "operationId": "addCallHandling",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "properties": {
                      "description": {
                        "description": "The external phone number's description. This is only required for the `call_forwarding` sub-setting.",
                        "type": "string"
                      },
                      "from": {
                        "description": "The holiday's start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. This is only required for the `holiday` sub-setting.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the holiday. This is only required for the `holiday` sub-setting.",
                        "type": "string"
                      },
                      "phone_number": {
                        "description": "The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164). This is only required for the `call_forwarding` sub-setting.",
                        "type": "string"
                      },
                      "to": {
                        "description": "The holiday's end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. This is only required for the `holiday` sub-setting.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "sub_settings_type": {
                    "description": "The type of sub-setting: \n* `call_forwarding` \n* `holiday`",
                    "enum": [
                      "call_forwarding",
                      "holiday"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a call handling setting"
      }
    },
    "/phone/external_contacts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "external_contacts": [
                        {
                          "description": "External Contact 1",
                          "email": "example@example.com",
                          "external_contact_id": "OJGi5xOFQPmrJbKg68-iWg",
                          "id": "1",
                          "name": "External Contact",
                          "phone_numbers": [
                            "+8765432123456",
                            "+9876543212345"
                          ],
                          "routing_path": "PSTN"
                        },
                        {
                          "description": "Test_add_ec_01",
                          "email": "example-2@example.com",
                          "extension_number": "999",
                          "external_contact_id": "y0brV9dgQyCYid1h9ILCOw",
                          "id": "Test_add_ec_01",
                          "name": "Test_add_ec_01",
                          "routing_path": "sip_group_01"
                        }
                      ],
                      "next_page_token": "sdfafdsa12fa_fasfdacc",
                      "page_size": 2
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "external_contacts": {
                      "description": "External contacts information.",
                      "items": {
                        "properties": {
                          "description": {
                            "description": "The external contact's description.",
                            "type": "string"
                          },
                          "email": {
                            "description": "The external contact's email address.",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "The external contact's extension number.",
                            "type": "string"
                          },
                          "external_contact_id": {
                            "description": "The external contact's ID.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The external contact's unique ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The external contact's username or extension display name.",
                            "type": "string"
                          },
                          "phone_numbers": {
                            "description": "The external contact's phone numbers.",
                            "items": {
                              "description": "The external contact's extension number.",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned with a single API call.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nExternal contacts listed successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "External Contacts"
        ],
        "description": "Use this API to list external contacts.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "listExternalContacts",
        "summary": "List external contacts"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\nExternal contact added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\nID already exists: {0}.\n\nInvalid email format.\nThat SIP group does not exist.\nExtension number cannot begin with 0.\nExtension number is not allowed when routing through PSTN.\nExtension number and phone number cannot both be empty values.\nExtension number must be digit values.\nExceeded the maximum amount of extension numbers allowed for the account.\nExtension number \"{0}\" already exists in the Zoom Phone system.\nPhone number \"{0}\" must be in E.164 format.\nPhone number \"{0}\" already exists in the Zoom Phone system.\nPhone number \"{0}\" is already in use by another external contact."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "External Contacts"
        ],
        "description": "Use this API to add an external contact.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "addExternalContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "The external contact's description.",
                    "type": "string"
                  },
                  "email": {
                    "description": "The external contact's email address.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "The external contact's extension number in the original phone system. Make certain that this extension number is **not** duplicated with an existing extension number in the account.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The external contact's custom unique ID. It is recommended that you use a primary key from the original phone system.\n\nIf you do **not** use this parameter, the API automatically generates a contact ID.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The external contact's username or extension display name.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "phone_numbers": {
                    "description": "A comma-separated list of the external contact's phone numbers. This value **must** be in [E.164](https://en.wikipedia.org/wiki/E.164) format. If you do not provide an extension number, you **must** provide this value.",
                    "type": "array",
                    "items": {
                      "description": "The external contact's extension number.",
                      "type": "string"
                    }
                  },
                  "routing_path": {
                    "description": "The external contact's SIP group, to define the call routing path. This is for customers that use SIP trunking.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add an external contact"
      }
    },
    "/phone/external_contacts/{externalContactId}": {
      "delete": {
        "parameters": [
          {
            "description": "The external contact's ID.",
            "in": "path",
            "name": "externalContactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nExternal contact deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed.**\n\nExternal contact does not exist: {externalContactId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "External Contacts"
        ],
        "description": "Use this API to remove an external contact.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "deleteAExternalContact",
        "summary": "Delete an external contact"
      },
      "get": {
        "parameters": [
          {
            "description": "The external contact's ID.",
            "in": "path",
            "name": "externalContactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "description": "External Contact 1",
                      "email": "example@example.com",
                      "external_contact_id": "OJGi5xOFQPmrJbKg68-iWg",
                      "id": "1",
                      "name": "External Contact",
                      "phone_numbers": [
                        "+15550100",
                        "+15550101"
                      ],
                      "routing_path": "PSTN"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "description": {
                      "description": "The external contact's description.",
                      "type": "string"
                    },
                    "email": {
                      "description": "The external contact's email address.",
                      "type": "string"
                    },
                    "extension_number": {
                      "description": "The external contact's extension number.",
                      "type": "string"
                    },
                    "external_contact_id": {
                      "description": "The external contact's ID.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The external contact's unique ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The external contact's username or extension display name.",
                      "type": "string"
                    },
                    "phone_numbers": {
                      "description": "The external contact's phone numbers.",
                      "items": {
                        "description": "The external contact's extension number.",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nExternal contact information retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `300` **Bad Request**\n\n**Error Code:** `400`\n\nExternal contact does not exist: {externalContactId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "External Contacts"
        ],
        "description": "Use this API to get an external contact's information.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n",
        "operationId": "getAExternalContact",
        "summary": "Get external contact details"
      },
      "patch": {
        "parameters": [
          {
            "description": "External contact ID.",
            "in": "path",
            "name": "externalContactId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nExternal contact updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\nID already exists: {0}.\n\nInvalid email format.\nThat SIP group does not exist.\nExtension number cannot begin with 0.\nExtension number is not allowed when routing through PSTN.\nExtension number and phone number cannot both be empty values.\nExtension number must be digit values.\nExceeded the maximum amount of extension numbers allowed for the account.\nExtension number \"{0}\" already exists in the Zoom Phone system.\nPhone number \"{0}\" must be E.164 format.\nPhone number \"{0}\" already exists in the Zoom Phone system.\nPhone number \"{0}\" is already in use by another external contact."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "External Contacts"
        ],
        "description": "Use this API to update an external contact's information.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "updateExternalContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "The external contact's description.",
                    "type": "string"
                  },
                  "email": {
                    "description": "The external contact's email address.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "The external contact's extension number in the original phone system. Make certain that this extension number is **not** duplicated with an existing extension number in the account.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The external contact's custom unique ID. It is recommended that you use a primary key from the original phone system.\n\nIf you do **not** use this parameter, the API automatically generates a contact ID.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The external contact's username or extension display name.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "phone_numbers": {
                    "description": "A comma-separated list of the external contact's phone numbers. This value **must** be in [E.164](https://en.wikipedia.org/wiki/E.164) format. If you do not provide an extension number, you **must** provide this value.",
                    "items": {
                      "description": "The external contact's extension number.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "routing_path": {
                    "description": "The external contact's SIP group, to define the call routing path. This is for customers that use SIP trunking.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update external contact"
      }
    },
    "/phone/locations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "locations": [
                        {
                          "bssid": "00:20:f7:ce:ea:2f,00:20:f7:ce:ea:2e",
                          "elin": {
                            "phone_number": "+15550100",
                            "phone_number_id": "xQORWYB_SzaQUF9tyfEHYQ"
                          },
                          "id": "dddMfX_eRLqrYCHnntfdJA",
                          "identifier": "batch_04",
                          "name": "test_batch_04_1_2",
                          "network_switches": [
                            {
                              "mac_address": "00:20:f7:ce:ea:2e",
                              "port": "21"
                            },
                            {
                              "mac_address": "00:20:f7:ce:ea:2f",
                              "port_prefix": "21a",
                              "port_range_from": "11",
                              "port_range_to": " 13"
                            }
                          ],
                          "private_ip": "198.51.100.1",
                          "public_ip": "192.0.2.1",
                          "sip_group": {
                            "display_name": "sip_group_01",
                            "id": "1hU40Ao8THqZinBNFAjeCQ"
                          },
                          "site": {
                            "id": "SQv52YtkRLC2dwrDdYtGsA",
                            "name": "ApiTA_Site_2020_07_12_00_41_57_141"
                          }
                        }
                      ],
                      "next_page_token": "sdfafdsa12fa_fasfdacc",
                      "page_size": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "locations": {
                      "description": "Information about emergency service locations.",
                      "items": {
                        "properties": {
                          "bssid": {
                            "description": "The emergency service location's BSSID (Basic Service Set Identifier).",
                            "type": "string"
                          },
                          "elin": {
                            "description": "The emergency service location's ELIN (Emergency Location Identification Number).",
                            "properties": {
                              "phone_number": {
                                "description": "The emergency service location's phone number.",
                                "type": "string"
                              },
                              "phone_number_id": {
                                "description": "The emergency service location's phone number ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "The emergency service location's ID.",
                            "type": "string"
                          },
                          "identifier": {
                            "description": "The emergency service location's unique ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The emergency service location's name.",
                            "type": "string"
                          },
                          "network_switches": {
                            "items": {
                              "properties": {
                                "mac_address": {
                                  "description": "The MAC address.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "The port's label.",
                                  "type": "string"
                                },
                                "port_prefix": {
                                  "description": "The port's prefix.",
                                  "type": "string"
                                },
                                "port_range_from": {
                                  "description": "The port's range from value.",
                                  "type": "string"
                                },
                                "port_range_to": {
                                  "description": "The port's range to value.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "parent_location_id": {
                            "description": "The parent location's ID.",
                            "type": "string"
                          },
                          "private_ip": {
                            "description": "The emergency service location's subnet or private IP address.",
                            "type": "string"
                          },
                          "public_ip": {
                            "description": "The emergency service location's public IP address.",
                            "type": "string"
                          },
                          "sip_group": {
                            "description": "The emergency service location's SIP group information.",
                            "properties": {
                              "display_name": {
                                "description": "The SIP group's display name.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The SIP group's ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "site": {
                            "description": "The emergency service location's site information.",
                            "properties": {
                              "id": {
                                "description": "The site's ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The site's name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned with a single API call.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nEmergency service locations listed successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Service Locations"
        ],
        "description": "Use this API to list emergency service locations.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "listLocations",
        "summary": "List emergency service locations"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "8e77d889-baba-43d1-b80c-77c90c135cde",
                      "name": "location name"
                    }
                  }
                },
                "schema": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "The phone's location ID.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The phone's location name.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` \n\nCreated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n\n**Error Code:** `300`\n\nValidation failed.\nA site ID is required.\nParent location does not exist.\nAn emergency address is required.\nAn emergency address is required.\nA location name is required.\nA public IP is required.\nYou can only access up to \"{0}\" level.\nYou can only access up to 5000 locations.\nThe maximum number of \"{0}\" is {1}.\nCannot bind an ELIN if the location does not have an emergency address.\nIP format error.\nDuplicate Switch Info found.\n"
          }
        },
        "tags": [
          "Emergency Service Locations"
        ],
        "description": "Use this API to add an emergency service location.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bssid": {
                    "description": "A comma-separated list of the emergency service location's BSSIDs (Basic Service Set Identifiers).",
                    "type": "string"
                  },
                  "elin_phone_number_id": {
                    "description": "The ELIN (Emergency Location Identification Number). This value must be a phone number ID or phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.",
                    "type": "string"
                  },
                  "emergency_address_id": {
                    "description": "The emergency location address ID.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The emergency service location's name.",
                    "type": "string"
                  },
                  "parent_location_id": {
                    "description": "The parent location's ID to assign to the emergency service location.",
                    "type": "string"
                  },
                  "private_ip": {
                    "description": "A comma-separated list of the emergency service location's subnet or private IP addresses.",
                    "type": "string"
                  },
                  "public_ip": {
                    "description": "A comma-separated list of the emergency service location's public IP addresses. This parameter is required for top locations.",
                    "type": "string"
                  },
                  "sip_group_id": {
                    "description": "The SIP group ID to assign to the emergency service location. This value is not required for non-top locations.",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "The site ID.",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "emergency_address_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add an emergency service location"
      }
    },
    "/phone/locations/{locationId}": {
      "delete": {
        "parameters": [
          {
            "description": "The emergency service location's ID.",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nLocation deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed.**\n\nLocation does not exist: {0}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Service Locations"
        ],
        "description": "Use this API to remove an emergency location.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "deleteLocation",
        "summary": "Delete an emergency location"
      },
      "get": {
        "parameters": [
          {
            "description": "The emergency service location's ID.",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "bssid": "00:20:f7:ce:ea:2f,00:20:f7:ce:ea:2e",
                      "elin": {
                        "phone_number": "+15550100",
                        "phone_number_id": "xQORWYB_SzaQUF9tyfEHYQ"
                      },
                      "emergency_address": {
                        "address_line1": "55 ALMADEN BLVD",
                        "city": "SAN JOSE",
                        "country": "US",
                        "id": "Qza2T_KATwCeUfTkzGsOmQ",
                        "state_code": "CA",
                        "zip": "95113"
                      },
                      "id": "dUK5vga4QVWyXBJiYgM3cQ",
                      "name": "test_batch_04_1_2",
                      "network_switches": [
                        {
                          "mac_address": "00:20:f7:ce:ea:2e",
                          "port_prefix": "21a",
                          "port_range_from": "11",
                          "port_range_to": "22"
                        }
                      ],
                      "private_ip": "198.51.100.1",
                      "public_ip": "192.0.2.1",
                      "sip_group": {
                        "display_name": "sip_group_01",
                        "id": "1hU40Ao8THqZinBNFAjeCQ"
                      },
                      "site": {
                        "id": "SQv52YtkRLC2dwrDdYtGsA",
                        "name": "ApiTA_Site_2020_07_12_00_41_57_141"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "bssid": {
                      "description": "The emergency service location's BSSIDs (Basic Service Set Identifiers).",
                      "type": "string"
                    },
                    "elin": {
                      "description": "The ELIN (Emergency Location Identification Number).",
                      "properties": {
                        "phone_number": {
                          "description": "The emergency location's phone number.",
                          "type": "string"
                        },
                        "phone_number_id": {
                          "description": "The emergency location's phone number ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "emergency_address": {
                      "description": "The emergency location's address information.",
                      "properties": {
                        "address_line1": {
                          "description": "The emergency location address line 1.",
                          "type": "string"
                        },
                        "address_line2": {
                          "description": "The emergency location address line 2.",
                          "type": "string"
                        },
                        "city": {
                          "description": "The emergency location address's city.",
                          "type": "string"
                        },
                        "country": {
                          "description": "The emergency location address's country.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The emergency location address ID.",
                          "type": "string"
                        },
                        "state_code": {
                          "description": "The emergency location address's state code.",
                          "type": "string"
                        },
                        "zip": {
                          "description": "The emergency address's zip code.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "The emergency location's ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The emergency location's name.",
                      "type": "string"
                    },
                    "network_switches": {
                      "items": {
                        "properties": {
                          "mac_address": {
                            "description": "The emergency location's assigned MAC address.",
                            "type": "string"
                          },
                          "port": {
                            "description": "The port label.",
                            "type": "string"
                          },
                          "port_prefix": {
                            "description": "The port prefix.",
                            "type": "string"
                          },
                          "port_range_from": {
                            "description": "The port starting range number.",
                            "type": "string"
                          },
                          "port_range_to": {
                            "description": "The port ending range number.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "parent_location_id": {
                      "description": "The emergency location's parent location ID.",
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "The emergency location's subnet or private IP address.",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "The emergency location's public IP address.",
                      "type": "string"
                    },
                    "sip_group": {
                      "description": "The emergency location's SIP group information.",
                      "properties": {
                        "display_name": {
                          "description": "The SIP group's display name.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The SIP group ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "site": {
                      "description": "The emergency location's site information.",
                      "properties": {
                        "id": {
                          "description": "The site ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The site name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nEmergency service location retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nLocation does not exist: {0}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Service Locations"
        ],
        "description": "Use this API to return an emergency service location's information.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "getLocation",
        "summary": "Get emergency service location details"
      },
      "patch": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nLocation updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation failed.**\n\nLocation does not exist: {0}.\nEmergency address is required.\nBSSID format error.\nA public IP is required.\nYou can only access up to \"{0}\" level.\nYou can only access up to 5000 locations.\nThe maximum number of \"{0}\" is {1}.\nCannot bind an ELIN if the location does not have an emergency address.\nIP format error.\nDuplicate Switch Info found.\nSwitch ports in the same switch MAC address limited to be less than {0}.\nSwitch port format error.\nSwitch port prefix cannot end by a digit.\nSwitch port range is required.\nSwitch port range require a non-negative integer.\nSwitch port range remove the \"0\" ahead.\"From\" must be less than or equal to \"To\" (From ≤ To).\nThis port is an overlap to a port in \"{0}\" of \"{1}\".\nThis port is an overlap to a port in \"{0}\"."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Emergency Service Locations"
        ],
        "description": "Use this API to update an emergency location's information.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions",
        "operationId": "updateLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bssid": {
                    "description": "A comma-separated list of the emergency service location's BSSIDs (Basic Service Set Identifiers).",
                    "type": "string"
                  },
                  "elin_phone_number_id": {
                    "description": "The ELIN (Emergency Location Identification Number). This value must be a phone number ID or phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.",
                    "type": "string"
                  },
                  "emergency_address_id": {
                    "description": "The emergency location's address ID.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The emergency location's name.",
                    "type": "string"
                  },
                  "network_switches": {
                    "items": {
                      "properties": {
                        "mac_address": {
                          "description": "The emergency location's assigned MAC address.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The emergency location's port label. You **cannot** pass this parameter with the `port_prefix` and `port_range` parameter.",
                          "type": "string"
                        },
                        "port_prefix": {
                          "description": "The emergency location's port prefix. The prefix value **cannot** end with a digit.\n\nThis parameter passes with the `port_range_from` and `port_range_to` parameters.",
                          "type": "string"
                        },
                        "port_range_from": {
                          "description": "The emergency location's port starting range number. This can be a non-negative integer value.\n\nThis value **must** be less than or equal to the `port_range_to` value.",
                          "type": "string"
                        },
                        "port_range_to": {
                          "description": "The emergency location's port ending range number. This can be a non-negative integer value.\n\nThis value **cannot** be less than the `port_range_from` value.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "private_ip": {
                    "description": "A comma-separated list of the emergency service location's subnet or private IP addresses.",
                    "type": "string"
                  },
                  "public_ip": {
                    "description": "A comma-separated list of the emergency service location's public IP addresses. This parameter is **required** for top locations.",
                    "type": "string"
                  },
                  "sip_group_id": {
                    "description": "The SIP group ID to assign to the emergency service location. This value is not required for non-top locations.",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update emergency service location"
      }
    },
    "/phone/metrics/call_logs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/paths/~1phone~1recordings/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality. \n\nThe value of this field can be one of the following:\n\n* `good`: Retrieve call logs of the call(s) with good quality of voice.\n\n* `bad`: Retrieve call logs of the call(s) with good quality of voice.\n\n* `all`: Retrieve all call logs without filtering by voice quality. \n\n\n\n",
            "in": "query",
            "name": "quality_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records returned within a single call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 300,
              "type": "integer"
            }
          },
          {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_logs": [
                        {
                          "call_id": "600097",
                          "callee": {
                            "codec": "opus",
                            "device_type": "Windows_Client 5.2.42619.0804",
                            "extension_number": "1003",
                            "headset": "Logitech USB Headset H340",
                            "isp": "other",
                            "microphone": "Logitech USB Headset H340",
                            "phone_number": "+15550101",
                            "site_id": "8f71O86ghjIFAdQ"
                          },
                          "caller": {
                            "codec": "opus",
                            "device_type": "Windows_Client 5.2.42619.0804",
                            "extension_number": "1021",
                            "headset": "Logitech USB Headset H340",
                            "isp": "other",
                            "microphone": "Logitech USB Headset H340",
                            "phone_number": "+15550100",
                            "site_id": "8f71O6rWT8KFUGQmJIFAdQ"
                          },
                          "date_time": "2020-09-11T05:38:53Z",
                          "direction": "internal",
                          "duration": 75,
                          "mos": "1.0"
                        },
                        {
                          "call_id": "687000062",
                          "callee": {
                            "codec": "opus",
                            "device_type": "Windows_Client 5.2.42619.0804",
                            "extension_number": "1003",
                            "headset": "Logitech USB Headset H340",
                            "isp": "other",
                            "microphone": "Logitech USB Headset H340",
                            "phone_number": "+15550101",
                            "site_id": "8f87cgmJIFAdQ"
                          },
                          "caller": {
                            "codec": "opus",
                            "device_type": "Windows_Client 5.2.42619.0804",
                            "extension_number": "1021",
                            "headset": "Logitech USB Headset H340",
                            "isp": "other",
                            "microphone": "Logitech USB Headset H340",
                            "phone_number": "+15550100",
                            "site_id": "8f9586mJIFAdQ"
                          },
                          "date_time": "2020-09-11T05:35:41Z",
                          "direction": "internal",
                          "duration": 71,
                          "mos": "1.0"
                        },
                        {
                          "call_id": "68798685701826",
                          "callee": {
                            "extension_number": "10006",
                            "site_id": "DS8YB6B6TYSN8BKo0P-5ug"
                          },
                          "caller": {
                            "codec": "opus",
                            "device_type": "Windows_Client 5.2.42619.0804",
                            "extension_number": "1021",
                            "headset": "Logitech USB Headset H340",
                            "isp": "other",
                            "microphone": "Logitech USB Headset H340",
                            "phone_number": "+15550100",
                            "site_id": "8f71O6rWT8KFUGQmJIFAdQ"
                          },
                          "date_time": "2020-09-11T05:30:49Z",
                          "direction": "internal",
                          "duration": 67,
                          "mos": "1.0"
                        }
                      ],
                      "from": "2020-03-11",
                      "next_page_token": "Dhgnfxcnxzerz",
                      "page_size": 10,
                      "to": "2020-09-11",
                      "total_records": 3
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "call_logs": {
                      "description": "Call logs.",
                      "items": {
                        "properties": {
                          "call_id": {
                            "description": "Unique identifier of the phone call.",
                            "type": "string"
                          },
                          "callee": {
                            "description": "Callee object contains information of the callee.",
                            "properties": {
                              "codec": {
                                "description": "Audio codec.",
                                "type": "string"
                              },
                              "device_private_ip": {
                                "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "type": "string"
                              },
                              "device_public_ip": {
                                "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "type": "string"
                              },
                              "device_type": {
                                "description": "Device type.",
                                "type": "string"
                              },
                              "extension_number": {
                                "description": "Full extension number of the callee.",
                                "type": "string"
                              },
                              "headset": {
                                "description": "Headset used for the call by the callee.",
                                "type": "string"
                              },
                              "isp": {
                                "description": "ISP.",
                                "type": "string"
                              },
                              "microphone": {
                                "description": "Microphone used for the call by the callee.",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number of the callee in E164 format.",
                                "type": "string"
                              },
                              "site_id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "caller": {
                            "description": "Caller object contains information of the caller.",
                            "properties": {
                              "codec": {
                                "description": "Audio codec.",
                                "type": "string"
                              },
                              "device_private_ip": {
                                "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "type": "string"
                              },
                              "device_public_ip": {
                                "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "type": "string"
                              },
                              "device_type": {
                                "description": "Device type.",
                                "type": "string"
                              },
                              "extension_number": {
                                "description": "Full extension number of the caller.",
                                "type": "string"
                              },
                              "headset": {
                                "description": "Headset used for the call by the caller.",
                                "type": "string"
                              },
                              "isp": {
                                "description": "ISP.",
                                "type": "string"
                              },
                              "microphone": {
                                "description": "Microphone used for the call by the caller.",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number of the caller in E164 format.",
                                "type": "string"
                              },
                              "site_id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "date_time": {
                            "description": "Date and time at which the call started.",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction of the call. The value of this field can be either `internal` or `outbound`.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the call in seconds.",
                            "type": "integer"
                          },
                          "mos": {
                            "description": "Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "description": "Start time and date of the report.",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single call.",
                      "type": "integer"
                    },
                    "to": {
                      "description": "End time and date of the report.",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "The total number of records available across all pages.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Dashboard"
        ],
        "description": "Call logs provide a record of all incoming and outgoing calls over Zoom Phone in an account. \n\nUse this API to list monthly call logs metrics. You can use query parameters to filter the response by date, site and MOS(Mean Opinion Score) of the call. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`, `phone:write:admin`\n\n**Rate Limit Label:** `Heavy`",
        "operationId": "listCallLogsMetrics",
        "summary": "List call logs"
      }
    },
    "/phone/metrics/call_logs/{callId}/qos": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the call.",
            "in": "path",
            "name": "callId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_id": "6738888828",
                      "callee_qos": {
                        "receiving": [
                          {
                            "date_time": "2019-09-05T02:22:35Z",
                            "qos": {
                              "avg_loss": "1.8%",
                              "bitrate": "26.25kbps",
                              "jitter": "1.0ms",
                              "max_loss": "",
                              "mos": "3.9",
                              "network_delay": "248"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:23:40Z",
                            "qos": {
                              "avg_loss": "1.1%",
                              "bitrate": "26.14kbps",
                              "jitter": "1.0ms",
                              "max_loss": "",
                              "mos": "3.9",
                              "network_delay": "252"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:24:40Z",
                            "qos": {
                              "avg_loss": "1.3%",
                              "bitrate": "26.66kbps",
                              "jitter": "1.0ms",
                              "max_loss": "",
                              "mos": "3.9",
                              "network_delay": "248"
                            }
                          }
                        ],
                        "sending": [
                          {
                            "date_time": "2019-09-05T02:22:33Z",
                            "qos": {
                              "avg_loss": "0.03%",
                              "bitrate": "18.23kbps",
                              "jitter": "0ms",
                              "max_loss": "0.55%",
                              "mos": "4.5",
                              "network_delay": "0"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:23:34Z",
                            "qos": {
                              "avg_loss": "0%",
                              "bitrate": "18.28kbps",
                              "jitter": "2.52ms",
                              "max_loss": "0%",
                              "mos": "4.5",
                              "network_delay": "0"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:24:34Z",
                            "qos": {
                              "avg_loss": "0%",
                              "bitrate": "19.16kbps",
                              "jitter": "0.48ms",
                              "max_loss": "0%",
                              "mos": "4.5",
                              "network_delay": "0"
                            }
                          }
                        ]
                      },
                      "caller_qos": {
                        "receiving": [
                          {
                            "date_time": "2019-09-05T02:22:35Z",
                            "qos": {
                              "avg_loss": "1.8%",
                              "bitrate": "26.25kbps",
                              "jitter": "1.0ms",
                              "max_loss": "",
                              "mos": "3.9",
                              "network_delay": "248"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:23:40Z",
                            "qos": {
                              "avg_loss": "1.1%",
                              "bitrate": "26.14kbps",
                              "jitter": "1.0ms",
                              "max_loss": "",
                              "mos": "3.9",
                              "network_delay": "252"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:24:40Z",
                            "qos": {
                              "avg_loss": "1.3%",
                              "bitrate": "26.66kbps",
                              "jitter": "1.0ms",
                              "max_loss": "",
                              "mos": "3.9",
                              "network_delay": "248"
                            }
                          }
                        ],
                        "sending": [
                          {
                            "date_time": "2019-09-05T02:22:27Z",
                            "qos": {
                              "avg_loss": "0.03%",
                              "bitrate": "28.4kbps",
                              "jitter": "0ms",
                              "max_loss": "0.4%",
                              "mos": "4.0",
                              "network_delay": "252"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:23:27Z",
                            "qos": {
                              "avg_loss": "0.03%",
                              "bitrate": "27.15kbps",
                              "jitter": "0ms",
                              "max_loss": "0.4%",
                              "mos": "4.0",
                              "network_delay": "251"
                            }
                          },
                          {
                            "date_time": "2019-09-05T02:24:27Z",
                            "qos": {
                              "avg_loss": "0%",
                              "bitrate": "37.25kbps",
                              "jitter": "0.55ms",
                              "max_loss": "0%",
                              "mos": "4.0",
                              "network_delay": "249"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "call_id": {
                      "description": "Unique identifier of the phone call.",
                      "type": "string"
                    },
                    "callee_qos": {
                      "properties": {
                        "device_private_ip": {
                          "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "device_public_ip": {
                          "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "receiving": {
                          "description": "The QoS received by the callee.",
                          "items": {
                            "properties": {
                              "date_time": {
                                "description": "The date and time at which the QoS was received.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "qos": {
                                "properties": {
                                  "avg_loss": {
                                    "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "bitrate": {
                                    "description": "The number of bits per second, in kbps, that can be transmitted along a digital network.",
                                    "type": "string"
                                  },
                                  "jitter": {
                                    "description": "The variation in the delay of received packets, in milliseconds.",
                                    "type": "string"
                                  },
                                  "max_loss": {
                                    "description": "The max amount of packet loss. For example, the max percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "mos": {
                                    "description": "The MOS (Mean Opinion Score).\n\nMOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "type": "string"
                                  },
                                  "network_delay": {
                                    "description": "The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one point to another.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "sending": {
                          "description": "The QoS sent by the callee.",
                          "items": {
                            "properties": {
                              "date_time": {
                                "description": "The date and time at which the QoS was delivered.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "qos": {
                                "properties": {
                                  "avg_loss": {
                                    "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "bitrate": {
                                    "description": "The number of bits per second, in kbps, that can be transmitted along a digital network.",
                                    "type": "string"
                                  },
                                  "jitter": {
                                    "description": "The variation in the delay of received packets, in milliseconds.",
                                    "type": "string"
                                  },
                                  "max_loss": {
                                    "description": "The max amount of packet loss. For example, the max percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "mos": {
                                    "description": "The MOS (Mean Opinion Score).\n\nMOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "type": "string"
                                  },
                                  "network_delay": {
                                    "description": "The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one point to another.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "caller_qos": {
                      "description": "Quality of Service object that represents the call quality data of the caller.",
                      "properties": {
                        "device_private_ip": {
                          "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "device_public_ip": {
                          "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "receiving": {
                          "description": "The caller's received QoS (quality of service).",
                          "items": {
                            "properties": {
                              "date_time": {
                                "description": "The date and time at which the QoS was received.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "qos": {
                                "properties": {
                                  "avg_loss": {
                                    "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "bitrate": {
                                    "description": "The number of bits per second, in kbps, that can be transmitted along a digital network.",
                                    "type": "string"
                                  },
                                  "jitter": {
                                    "description": "The variation in the delay of received packets, in milliseconds.",
                                    "type": "string"
                                  },
                                  "max_loss": {
                                    "description": "The max amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "mos": {
                                    "description": "The MOS (Mean Opinion Score).\n\nMOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "type": "string"
                                  },
                                  "network_delay": {
                                    "description": "The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one point to another.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "sending": {
                          "description": "QoS sent by the caller.",
                          "items": {
                            "properties": {
                              "date_time": {
                                "description": "Date and time at which the QoS was delivered.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "qos": {
                                "properties": {
                                  "avg_loss": {
                                    "description": "The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "bitrate": {
                                    "description": "The number of bits per second in kbps that can be transmitted along a digital network.",
                                    "type": "string"
                                  },
                                  "jitter": {
                                    "description": "The variation in the delay of received packets. The value of this field is expressed in milliseconds.",
                                    "type": "string"
                                  },
                                  "max_loss": {
                                    "description": "The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.",
                                    "type": "string"
                                  },
                                  "mos": {
                                    "description": "Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "type": "string"
                                  },
                                  "network_delay": {
                                    "description": "The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Dashboard"
        ],
        "description": "Get call quality of service(QoS) data for a call made or received by a Zoom phone user in the account. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n**Scopes:** `phone:read:admin`, `phone:write:admin`\n\n**Rate Limit Label:** `Light`",
        "operationId": "getCallQoS",
        "summary": "Get call QoS"
      }
    },
    "/phone/metrics/call_logs/{call_id}": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the phone call. The value of this field can be retrieved from [List Call Logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listCallLogsMetrics) API.",
            "in": "path",
            "name": "call_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_id": "687100000600397",
                      "callee": {
                        "codec": "opus",
                        "device_type": "Windows_Client 5.2.42619.0804",
                        "display_name": "Shrijana",
                        "extension_number": "1003",
                        "extension_type": "user",
                        "headset": "Logitech USB Headset H340",
                        "id": "DnE46573vvzjgojw",
                        "isp": "other",
                        "microphone": "Logitech USB Headset H340",
                        "phone_number": "+15550101",
                        "route": [
                          {
                            "display_name": "asfdfsdg3_214",
                            "extension_number": "10006",
                            "extension_type": "callQueue",
                            "id": "8M756763533A"
                          }
                        ],
                        "site_id": "8f71O66543IFAdQ"
                      },
                      "caller": {
                        "codec": "opus",
                        "device_type": "Windows_Client 5.2.42619.0804",
                        "display_name": "Abcde",
                        "extension_number": "1021",
                        "extension_type": "user",
                        "headset": "Logitech USB Headset H340",
                        "id": "Y40bbbbgGh0V1Ul_Q",
                        "isp": "other",
                        "microphone": "Logitech USB Headset H340",
                        "phone_number": "+15550100",
                        "site_id": "8f71986768JIFAdQ"
                      },
                      "date_time": "2020-09-11T05:38:53Z",
                      "direction": "internal",
                      "duration": 75,
                      "mos": "1.0"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "call_id": {
                      "description": "Unique identifier of the phone call.",
                      "type": "string"
                    },
                    "callee": {
                      "description": "Callee object contains information of the callee.",
                      "properties": {
                        "codec": {
                          "description": "Audio codec.",
                          "type": "string"
                        },
                        "device_private_ip": {
                          "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "device_public_ip": {
                          "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "device_type": {
                          "description": "Device type.",
                          "type": "string"
                        },
                        "extension_number": {
                          "description": "Full extension number of the callee.",
                          "type": "string"
                        },
                        "headset": {
                          "description": "Headset used for the call by the callee.",
                          "type": "string"
                        },
                        "isp": {
                          "description": "ISP.",
                          "type": "string"
                        },
                        "microphone": {
                          "description": "Microphone used for the call by the callee.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number of the callee in E164 format.",
                          "type": "string"
                        },
                        "site_id": {
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "caller": {
                      "description": "Caller object contains information of the caller.",
                      "properties": {
                        "codec": {
                          "description": "Audio codec.",
                          "type": "string"
                        },
                        "device_private_ip": {
                          "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "device_public_ip": {
                          "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "type": "string"
                        },
                        "device_type": {
                          "description": "Device type.",
                          "type": "string"
                        },
                        "extension_number": {
                          "description": "Full extension number of the caller.",
                          "type": "string"
                        },
                        "headset": {
                          "description": "Headset used for the call by the caller.",
                          "type": "string"
                        },
                        "isp": {
                          "description": "ISP.",
                          "type": "string"
                        },
                        "microphone": {
                          "description": "Microphone used for the call by the caller.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number of the caller in E164 format.",
                          "type": "string"
                        },
                        "site_id": {
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "date_time": {
                      "description": "Date and time at which the call started.",
                      "type": "string"
                    },
                    "direction": {
                      "description": "Direction of the call. The value of this field can be either `internal` or `outbound`.",
                      "type": "string"
                    },
                    "duration": {
                      "description": "Duration of the call in seconds.",
                      "type": "integer"
                    },
                    "mos": {
                      "description": "Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Dashboard"
        ],
        "description": "Call logs provide a record of all incoming and outgoing calls over Zoom Phone in an account. \n\nUse this API to list call log details of a specific call. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`, `phone:write:admin`\n\n**Rate Limit Label:** `Light`\n",
        "operationId": "getCallLogMetricsDetails",
        "summary": "Get call details from call log"
      }
    },
    "/phone/metrics/location_tracking": {
      "get": {
        "parameters": [
          {
            "description": "The type of response data. Supports '6' only at this time.\n`1`: Nomadic Emergency Services.\n`2`: Users Permission for Location Sharing.\n`3`: Default Emergency Address.\n`4`: Detectable Personal Location.\n`5`: Real-time Location for Users.\n`6`: Real-time Location for IP Phones.",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          },
          {
            "description": "The site's ID.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The location's type, 'company' being the default value.",
            "in": "query",
            "name": "location_type",
            "schema": {
              "enum": [
                "company",
                "personal",
                "unknown"
              ],
              "type": "string"
            }
          },
          {
            "description": "Device name.",
            "in": "query",
            "name": "device_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "MAC address or serial number of the location.",
            "in": "query",
            "name": "mac_address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "location_tracking": [
                        {
                          "assignees": [
                            {
                              "extension_number": 123,
                              "id": "i242djsgrg",
                              "name": "John"
                            }
                          ],
                          "city": "San Jose",
                          "country": "US",
                          "device": {
                            "bssid": "00:20:f7:ce:ea:2f,00:20:f7:ce:ea:2e",
                            "id": "1234324",
                            "mac_address": "20-3a-07-24-05-34",
                            "name": "test_batch_04_1_2",
                            "private_ip": "198.51.100.1",
                            "public_ip": "192.0.2.1"
                          },
                          "emergency_address": "200 N SPRING ST, LOS ANGELES, CA 90012",
                          "name": "Milpitas,California,United States",
                          "network_switch": {
                            "mac_address": "00:20:f7:ce:ea:2e",
                            "port": "21a22"
                          },
                          "site": {
                            "id": "8MhK7ea4Q4ihIQ4TD_g0kw",
                            "name": "RRRR"
                          },
                          "type": "company",
                          "zip": "95113"
                        }
                      ],
                      "next_page_token": "",
                      "page_size": 30,
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "location_tracking": {
                      "items": {
                        "properties": {
                          "assignees": {
                            "items": {
                              "properties": {
                                "extension_number": {
                                  "description": "Extension number of the Zoom Phone used by the user.",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "User ID of the user to whom the device has been assigned.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the user.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "city": {
                            "description": "City of the location.",
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the location.",
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string"
                          },
                          "device": {
                            "properties": {
                              "bssid": {
                                "description": "The device's BSSIDs (Basic Service Set Identifiers).",
                                "type": "string"
                              },
                              "id": {
                                "description": "Device ID.",
                                "type": "string"
                              },
                              "mac_address": {
                                "description": "MAC address or serial number of the device.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Device name.",
                                "type": "string"
                              },
                              "private_ip": {
                                "description": "The device's subnet or private IP address.",
                                "type": "string"
                              },
                              "public_ip": {
                                "description": "The device's public IP address.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "emergency_address": {
                            "description": "The emergency location's address.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The location's name.",
                            "type": "string"
                          },
                          "network_switch": {
                            "properties": {
                              "mac_address": {
                                "description": "MAC address or serial number of network switch.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port of network switch.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the site.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Site name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The location's type.",
                            "enum": [
                              "company",
                              "personal",
                              "unknown"
                            ],
                            "type": "string"
                          },
                          "zip": {
                            "description": "Zip Code of the location.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The total number of records returned from a single API call.",
                      "maximum": 100,
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records found for this query.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` <br>Locations returned."
          }
        },
        "tags": [
          "Dashboard"
        ],
        "description": "Use this API to list tracked locations. \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n**Scope:** `phone:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listTrackedLocations",
        "summary": "List tracked locations"
      }
    },
    "/phone/monitoring_groups": {
      "get": {
        "parameters": [
          {
            "description": "Monitoring group's type.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          },
          {
            "description": "Unique identifier of the monitoring group's site.",
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The size of the page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "monitoring_groups": {
                        "id": "Ct6mcZYMSuWYug46puWOQg",
                        "monitor_members_count": 2,
                        "monitored_members_count": 2,
                        "monitoring_privileges": [
                          "listen",
                          "whisper",
                          "barge",
                          "take_over"
                        ],
                        "name": "test",
                        "prompt": true,
                        "site": {
                          "id": "8f71O6rWT8KFUGQmJIFAdQ",
                          "name": "Main Site"
                        },
                        "type": 1
                      },
                      "next_page_token": "abcD3944YsoYPB12",
                      "page_size": 1,
                      "total_records": 6
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "monitoring_groups": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Monitoring group ID.",
                            "type": "string"
                          },
                          "monitor_members_count": {
                            "description": "Number of monitors.",
                            "type": "integer"
                          },
                          "monitored_members_count": {
                            "description": "Number of monitored users.",
                            "type": "integer"
                          },
                          "monitoring_privileges": {
                            "description": "Set of monitoring group's privileges.",
                            "items": {
                              "enum": [
                                "listen",
                                "whisper",
                                "barge",
                                "take_over"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Monitoring instance name.",
                            "type": "string"
                          },
                          "prompt": {
                            "description": "Whether Play a disclaimer prompt to the call participants",
                            "type": "boolean"
                          },
                          "site": {
                            "description": "The site of monitoring group",
                            "properties": {
                              "id": {
                                "description": "Site ID",
                                "type": "string"
                              },
                              "name": {
                                "description": "Site name",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Monitoring type.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The current page number of returned records.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The size of the page.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total number of records available across all pages.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \nAccount monitoring groups list returned. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nThe next page token is invalid or expired."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to return an account's [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711) list.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "listMonitoringGroup",
        "summary": "Get a list of monitoring groups on an account"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "u6qW2a9zSMKJUoHT0CH1rg",
                      "name": "test"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Monitoring group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Monitoring group's name.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`\n\nMonitoring created."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nName is required.\nType is required\nSite ID is required.\nThe privilege does not exist.\nType should be `1`, `2`, or `3`."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to create a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "createMonitoringGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "monitoring_privileges": {
                    "description": "Set of monitoring group's privileges.",
                    "items": {
                      "enum": [
                        "listen",
                        "whisper",
                        "barge",
                        "take_over"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Monitoring group's name.",
                    "type": "string"
                  },
                  "prompt": {
                    "description": "Whether Play a disclaimer prompt to the call participants",
                    "type": "boolean"
                  },
                  "site_id": {
                    "description": "Unique identifier of the monitoring group's site.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Monitoring group's type.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create a monitoring group"
      }
    },
    "/phone/monitoring_groups/{monitoringGroupId}": {
      "delete": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMonitoring group deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `404` \nThe group does not exist."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to delete a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "deleteMonitoringGroup",
        "summary": "Delete a monitoring group"
      },
      "get": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "Ct6mcZYMSuWYug46puWOQg",
                      "monitor_members_count": 2,
                      "monitored_members_count": 2,
                      "monitoring_privileges": [
                        "listen",
                        "whisper",
                        "barge",
                        "take_over"
                      ],
                      "name": "test",
                      "prompt": true,
                      "site": {
                        "id": "8f71O6rWT8KFUGQmJIFAdQ",
                        "name": "Main Site"
                      },
                      "type": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Monitoring group ID.",
                      "type": "string"
                    },
                    "monitor_members_count": {
                      "description": "Number of monitors.",
                      "type": "integer"
                    },
                    "monitored_members_count": {
                      "description": "Number of monitored users.",
                      "type": "integer"
                    },
                    "monitoring_privileges": {
                      "description": "Set of monitoring group's privileges.",
                      "items": {
                        "enum": [
                          "listen",
                          "whisper",
                          "barge",
                          "take_over"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "Monitoring group's name.",
                      "type": "string"
                    },
                    "prompt": {
                      "description": "Whether Play a disclaimer prompt to the call participants",
                      "type": "boolean"
                    },
                    "site": {
                      "description": "The site of monitoring group",
                      "properties": {
                        "id": {
                          "description": "Site ID",
                          "type": "string"
                        },
                        "name": {
                          "description": "Site name",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "Monitoring group's type.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \nMonitoring returned. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `404` \nThe group does not exist."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to return a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711) for the specified ID.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "getMonitoringGroupById",
        "summary": "Get monitoring group by ID"
      },
      "patch": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMonitoring group updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nThe privilege does not exist.\n**Error code**: `404` \nThe group does not exist."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to update a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updateMonitoringGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "monitoring_privileges": {
                    "description": "Set of monitoring group's privileges.",
                    "items": {
                      "enum": [
                        "listen",
                        "whisper",
                        "barge",
                        "take_over"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Monitoring group's name.",
                    "type": "string"
                  },
                  "prompt": {
                    "description": "Whether Play a disclaimer prompt to the call participants",
                    "type": "boolean"
                  },
                  "site_id": {
                    "description": "Unique identifier of the monitoring group's site.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a monitoring group"
      }
    },
    "/phone/monitoring_groups/{monitoringGroupId}/monitor_members": {
      "delete": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Member type",
            "in": "query",
            "name": "member_type",
            "required": true,
            "schema": {
              "enum": [
                "monitor",
                "monitored"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nRemove all monitors or monitored members from a monitoring group."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `404` \nThe group does not exist."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to remove all monitors or monitored members from a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "removeMembers",
        "summary": "Remove all monitors or monitored members from a monitoring group"
      },
      "get": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Member type",
            "in": "query",
            "name": "member_type",
            "required": true,
            "schema": {
              "enum": [
                "monitor",
                "monitored"
              ],
              "type": "string"
            }
          },
          {
            "description": "The size of the page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "members": [
                        {
                          "display_name": "ZOOM_API Test",
                          "extension_id": "Yk31QPDcQu2UnrodzeisPg",
                          "extension_number": 5101,
                          "extension_type": "user"
                        }
                      ],
                      "next_page_token": "abcD3944YsoYPB12",
                      "page_size": 1,
                      "total_records": 2
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "members": {
                      "items": {
                        "properties": {
                          "display_name": {
                            "description": "Member name.",
                            "type": "string"
                          },
                          "extension_id": {
                            "description": "Extension ID.",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "Extension number.",
                            "type": "integer"
                          },
                          "extension_type": {
                            "description": "Extension type",
                            "enum": [
                              "user",
                              "call_queue",
                              "shared_line_group",
                              "common_area_phone"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "The current page number of returned records.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The number of records",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \nMembers in a monitoring group returned. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nMissing 'member_type'.\nThe next page token is invalid or expired."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to return members list of a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "listMembers",
        "summary": "Get members of a monitoring group"
      },
      "post": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Member type",
            "in": "query",
            "name": "member_type",
            "required": true,
            "schema": {
              "enum": [
                "monitor",
                "monitored"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `201` \nAdd members to a monitoring group."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `400` \nThe maximum number of monitors is 100.\nThe maximum number of monitored is 100.\nThe group does not exist.\n**Error code**: `409` \nCannot create group. 'member_type' member(s) already exist(s) in current monitoring group.\nCannot create group. 'member_type' member(s) already exist(s) in other monitoring group."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to add members to a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "addMembers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "description": "Monitor's extension ID",
                  "type": "string"
                },
                "type": "array"
              }
            }
          }
        },
        "summary": "Add members to a monitoring group"
      }
    },
    "/phone/monitoring_groups/{monitoringGroupId}/monitor_members/{memberExtensionId}": {
      "delete": {
        "parameters": [
          {
            "description": "Monitoring group ID.",
            "in": "path",
            "name": "monitoringGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Member's extension ID.",
            "in": "path",
            "name": "memberExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Member type",
            "in": "query",
            "name": "member_type",
            "required": false,
            "schema": {
              "enum": [
                "monitor",
                "monitored"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nRemove a member from a monitoring group."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `404` \nThe group does not exist."
          }
        },
        "tags": [
          "Monitoring Groups"
        ],
        "description": "Use this API to remove a member from a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "removeMember",
        "summary": "Remove a member from a monitoring group"
      }
    },
    "/phone/numbers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Query response by number assignment. The value can be one of the following:\n\n\n`assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. \n`unassigned`: The number is not assigned to anyone.\n\n`all`: Include both assigned and unassigned numbers in the response.\n\n`byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "assigned",
                "unassigned",
                "byoc",
                "all"
              ],
              "type": "string"
            }
          },
          {
            "description": "The type of assignee to whom the number is assigned. The value can be one of the following:\n\n`user`\n `callQueue`\n `autoReceptionist`\n\n`commonAreaPhone`",
            "in": "query",
            "name": "extension_type",
            "schema": {
              "enum": [
                "user",
                "callQueue",
                "autoReceptionist",
                "commonAreaPhone"
              ],
              "type": "string"
            }
          },
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "description": "The type of phone number. The value can be either `toll` or `tollfree`.",
            "in": "query",
            "name": "number_type",
            "schema": {
              "enum": [
                "toll",
                "tollfree"
              ],
              "type": "string"
            }
          },
          {
            "description": "Include or exclude pending numbers in the response. The value can be either `true` or `false`.",
            "in": "query",
            "name": "pending_numbers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "",
                      "page_size": 30,
                      "phone_numbers": [
                        {
                          "assignee": {
                            "extension_number": 12,
                            "id": "cgfdgfghghim",
                            "name": "Peter Jenner",
                            "type": "user"
                          },
                          "capability": [
                            "incoming",
                            "outgoing"
                          ],
                          "display_name": "abc",
                          "id": "execvbfgbgr",
                          "location": "Milpitas,California,United States",
                          "number": "0000111100",
                          "number_type": "tollfree",
                          "site": {
                            "id": "sdfsdfgrg",
                            "name": "SF office"
                          },
                          "source": "internal",
                          "status": "pending"
                        },
                        {
                          "assignee": {
                            "extension_number": 1,
                            "id": "dfgdfghdfhgh",
                            "name": "Receptionist",
                            "type": "autoReceptionist"
                          },
                          "id": "fdgfdgfdh",
                          "location": "San Jose,California,United States",
                          "number": "111111111",
                          "number_type": "toll",
                          "site": {
                            "id": "jhdfsdghfdg",
                            "name": "San Jose office"
                          },
                          "source": "external",
                          "status": "available"
                        }
                      ],
                      "total_records": 2
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer"
                    },
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "assignee": {
                            "properties": {
                              "extension_number": {
                                "description": "Extension number of the Phone.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Unique identifier of the user to whom the number has been assigned.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user to whom the number has been assigned.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Indicates who the phone number belongs to.\n\n`user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.\n `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).\n `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).\n`autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).\n",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonAreaPhone"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "capability": {
                            "description": "The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "carrier": {
                            "description": "Displayed when the `type` request parameter is `byoc`.",
                            "properties": {
                              "code": {
                                "description": "The carrier code.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the carrier to which the phone number is assigned.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "display_name": {
                            "description": "The display name for the phone number.",
                            "type": "string"
                          },
                          "emergency_address": {
                            "description": "Displayed when the `type` request parameter is `byoc`.",
                            "properties": {
                              "address_line1": {
                                "description": "Address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of the house number and street name.",
                                "type": "string"
                              },
                              "address_line2": {
                                "description": "Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of building number, floor number, unit and others",
                                "type": "string"
                              },
                              "city": {
                                "description": "City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "type": "string"
                              },
                              "country": {
                                "description": "Two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "maxLength": 2,
                                "minLength": 2,
                                "type": "string"
                              },
                              "state_code": {
                                "description": "State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "type": "string"
                              },
                              "zip": {
                                "description": "Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "emergency_address_status": {
                            "description": "Displayed when the `type` request parameter is `byoc`. The emergency address status: `1`-carrier update required, `2`-confirmed",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "emergency_address_update_time": {
                            "description": "Displayed when the `type` request parameter is `byoc`. The time of emergency address info update (format: 'yyyy-MM-ddThh:dd:ssZ').",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the Phone Number.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Location (city, state and country) where the Phone number is assigned.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number in E164 format.",
                            "type": "string"
                          },
                          "number_type": {
                            "description": "The type of number. Values can be one of the following:\n\n`toll`, `tollfree`",
                            "enum": [
                              "toll",
                              "tollfree"
                            ],
                            "type": "string"
                          },
                          "sip_group": {
                            "description": "Displayed when the `type` request parameter is `byoc`.",
                            "properties": {
                              "display_name": {
                                "description": "The name of the SIP group.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site where the phone number is assigned.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "source": {
                            "description": "Source of phone number.",
                            "enum": [
                              "internal",
                              "external"
                            ],
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the number.",
                            "enum": [
                              "pending",
                              "available"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nPhone numbers listed successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to list all Zoom Phone numbers in a Zoom account.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "listAccountPhoneNumbers",
        "summary": "List phone numbers"
      }
    },
    "/phone/numbers/{numberId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the Phone Number. This can be retrieved from the List Phone Numbers API.",
            "in": "path",
            "name": "numberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "assignee": {
                        "extension_number": 10000,
                        "name": "Main Auto Receptionist",
                        "type": "autoReceptionist"
                      },
                      "capability": [
                        "incoming",
                        "outgoing"
                      ],
                      "carrier": {
                        "code": 13,
                        "name": "ContactCenter"
                      },
                      "display_name": "abc",
                      "id": "Hfdgdfgdfg1ew",
                      "location": "Milpitas,California,United States",
                      "number": "+140000007",
                      "number_type": "toll",
                      "sip_group": {
                        "display_name": "RRRR",
                        "id": "8MhK7ea4Q4ihIQ4TD_g0kw"
                      },
                      "site": {
                        "id": "CEfdfdfgA",
                        "name": "Main Site"
                      },
                      "source": "internal",
                      "status": "available"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "assignee": {
                      "properties": {
                        "audio_prompt_language": {
                          "description": "",
                          "type": "string"
                        },
                        "display_number": {
                          "description": "Used for meeting service. Define how the number will be formatted and displayed in meeting invitations and emails.",
                          "type": "string"
                        },
                        "extension_number": {
                          "description": "Extension number of the Phone.",
                          "type": "integer"
                        },
                        "greeting": {
                          "description": "Used for meeting service. You can only upload 1 audio file, accepted format is .wav (8k, mono, ULAW or ALAW). If no audio file is uploaded, Zoom will use the \"Telephone welcome message\" set in Account Settings.",
                          "properties": {
                            "id": {
                              "description": "Audio prompt file ID.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Audio prompt file name.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the user to whom the number and the following are assigned: emergency number pool (if the account has multiple sites enabled, the ID is `siteId`, else `accountId`) and company location ",
                          "type": "string"
                        },
                        "label": {
                          "description": "Optional, used for meeting service. This label will be appended to the number in parentheses, and will appear in meeting invitations and the zoom client. Formatting rules:\nMaximum 32 characters\nDo not use digits\nDo not use characters \"(\" \")\" \",\" \";\" or \":\"",
                          "type": "string"
                        },
                        "meeting_id": {
                          "description": "Meeting ID used for meeting service.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the user to whom the number, emergency number pool and company location are assigned.",
                          "type": "string"
                        },
                        "on_hold_music": {
                          "description": "Used for meeting service. You can only upload 1 audio file, accepted format is .wav (8k, mono, ULAW or ALAW). If no audio file is uploaded, Zoom will use the \"Telephone on-hold music\" set in Account Settings.",
                          "properties": {
                            "id": {
                              "description": "Audio prompt file ID.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Audio prompt file name.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "Indicates who the phone number belongs to.\n\n`user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.\n `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).\n `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).\n\n`autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).\n `emergencyNumberPool` `companyLocation` `meetingService`",
                          "enum": [
                            "user",
                            "callQueue",
                            "autoReceptionist",
                            "commonAreaPhone",
                            "emergencyNumberPool",
                            "companyLocation",
                            "meetingService"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "capability": {
                      "description": "The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "carrier": {
                      "properties": {
                        "code": {
                          "description": "Carrier code.",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Carrier name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "display_name": {
                      "description": "The display name for the phone number.",
                      "type": "string"
                    },
                    "emergency_address": {
                      "description": "Displayed when the number is `byoc` number. ",
                      "properties": {
                        "address_line1": {
                          "description": "Address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of the house number and street name.",
                          "type": "string"
                        },
                        "address_line2": {
                          "description": "Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of building number, floor number, unit and others.",
                          "type": "string"
                        },
                        "city": {
                          "description": "City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "type": "string"
                        },
                        "country": {
                          "description": "Two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "state_code": {
                          "description": "State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "type": "string"
                        },
                        "zip": {
                          "description": "Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "emergency_address_status": {
                      "description": "Displayed when the number is `byoc` number. The emergency address status. 1-carrier update required, 2-confirmed",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "emergency_address_update_time": {
                      "description": "Displayed when the number is `byoc` number. The emergency address info update time(format: 'yyyy-MM-ddThh:dd:ssZ').",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique identifier of the Phone Number.",
                      "type": "string"
                    },
                    "location": {
                      "description": "Location (city, state and country) where the Phone number is assigned.",
                      "type": "string"
                    },
                    "number": {
                      "description": "Phone number in E164 format.",
                      "type": "string"
                    },
                    "number_type": {
                      "description": "The type of number. Values can be one of the following:\n\n`toll`, `tollfree`",
                      "enum": [
                        "toll",
                        "tollfree"
                      ],
                      "type": "string"
                    },
                    "sip_group": {
                      "properties": {
                        "display_name": {
                          "description": "Sip group display name.",
                          "type": "string"
                        },
                        "id": {
                          "description": "Sip group id.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "site": {
                      "properties": {
                        "id": {
                          "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the site where the phone number is assigned.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "source": {
                      "description": "Source of phone number.",
                      "enum": [
                        "internal",
                        "external"
                      ],
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the number.",
                      "enum": [
                        "pending",
                        "available"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nPhone number details retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPhone number does not exist, phonenumberId:{phoneNumberId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to get information about an account's Zoom Phone number.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom phone license",
        "operationId": "getPhoneNumberDetails",
        "summary": "Get phone number details"
      },
      "patch": {
        "parameters": [
          {
            "description": "Phone number ID.",
            "in": "path",
            "name": "numberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n\nNo Content"
          },
          "400": {
            "description": "**HTTP Response Code:** `400`\n\n\n**Error Code:** `300`\n\nThe value of capability is invalid. Provide a valid capability and try again.\nYou cannot update it to a non-BYOC trunk group, because some BYOC numbers are using the SIP Group.\nThe phone number is not in binding.\nThe phone number is not BYOC phone number."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\nPhone number does not exist: {numberId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to update a Zoom Phone number's information.\n\n**Scopes:** `phone:write`, `phone:write:admin`, `phone:master`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Paid account",
        "operationId": "updatePhoneNumberDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "capability": {
                    "description": "Phone number capability. Values: `outgoing` or `incoming`. Add one or both.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "display_name": {
                    "description": "Phone number display name.",
                    "type": "string"
                  },
                  "emergency_address_status": {
                    "description": "Confirm byoc phone number's emergency address status. 2-confirmed",
                    "type": "integer"
                  },
                  "sip_group_id": {
                    "description": "Sip group id, only used for byoc phone number update.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update phone number details"
      }
    },
    "/phone/peering/numbers": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "unprocessed_numbers": [
                        {
                          "failure_reason": "Number does not exist.",
                          "phone_number": "15556660100"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "unprocessed_numbers": {
                      "description": "Information about unprocessed phone numbers.",
                      "items": {
                        "properties": {
                          "failure_reason": {
                            "description": "The processing failure reason.",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **Created**\nPhone number successfully deleted. Check the API response for any failures."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `124`\nAccount does not exist: \"{accountId}\".\n\n**Error Code:** `300`\nValidation Failed. Batch adding phone numbers is limited to 200 per request.\n\n**Error Code:** `404`\nUnknown carrier."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Provider Exchange"
        ],
        "description": "Use this API to remove phone numbers that were added to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for use by partners that have completed the MoU to peer with Zoom. To become a peering provider/ carrier, please submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Scopes**: `phone_peering:write:admin`, `phone_peering:master`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "deletePeeringPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "carrier_code": {
                    "description": "The carrier's code. The `clientId` is used to map to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
                    "type": "integer"
                  },
                  "phone_numbers": {
                    "description": "Information about the removed phone numbers.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Remove peering phone numbers"
      },
      "get": {
        "parameters": [
          {
            "description": "The total number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Either the sender's or receiver's phone number, to limit the list of SMS sessions.",
            "in": "query",
            "name": "phone_number",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The carrier's code. The `clientId` is used to map to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
            "in": "query",
            "name": "carrier_code",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_token": "6U86TxL8RZaoEWgM-xlEHw",
                      "numbers": [
                        {
                          "assigned": 0,
                          "billing_reference_id": "1234abcd",
                          "phone_number": "15556660100",
                          "service_info": "Service info.",
                          "sip_trunk_name": "example-carrier-trunk",
                          "status": 1
                        }
                      ],
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "numbers": {
                      "description": "Information about the carrier's phone numbers.",
                      "items": {
                        "properties": {
                          "assigned": {
                            "description": "Whether the phone number is assigned:\n* `0` — Unassigned.\n* `1` — Assigned.",
                            "type": "integer"
                          },
                          "billing_reference_id": {
                            "description": "The carrier's billing reference ID.",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "type": "string"
                          },
                          "service_info": {
                            "description": "The carrier's service information.",
                            "type": "string"
                          },
                          "sip_trunk_name": {
                            "description": "The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).",
                            "type": "string"
                          },
                          "status": {
                            "description": "The phone number's status:\n* `0` — Inactive.\n* `1` — Active.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "phone_number",
                          "status",
                          "assigned",
                          "sip_trunk_name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of records returned for this API call.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\nCarrier peering numbers successfully returned."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Provider Exchange"
        ],
        "description": "Use this API to return phone numbers that were added to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for use by partners that have completed the MoU to peer with Zoom. To become a peering provider/ carrier, please submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Scopes:** `phone_peering:read:admin`, `phone_peering:master`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "listPeeringPhoneNumbers",
        "summary": "List peering phone numbers"
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "unprocessed_numbers": [
                        {
                          "failure_reason": "Invalid status",
                          "phone_number": "15556660100"
                        },
                        {
                          "failure_reason": "Invalid SIP trunk",
                          "phone_number": "15556660101"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "unprocessed_numbers": {
                      "description": "Information about unprocessed phone numbers.",
                      "items": {
                        "properties": {
                          "failure_reason": {
                            "description": "The processing failure reason.",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nPhone number successfully updated. Check the API response for any failures."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `124`\nAccount does not exist: \"{accountId}\".\n\n**Error Code:** `300`\nValidation Failed. Batch adding phone numbers is limited to 200 per request.\n\n**Error Code:** `404`\nUnknown carrier."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Provider Exchange"
        ],
        "description": "Use this API to update phone numbers that were added to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for use by partners that have completed the MoU to peer with Zoom. To become a peering provider/ carrier, please submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Scopes:** `phone_peering:write:admin`, `phone_peering:master`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updatePeeringPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "carrier_code": {
                    "description": "The carrier's code. The `clientId` is used to map to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
                    "type": "integer"
                  },
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "billing_reference_id": {
                          "description": "The carrier's billing reference ID.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "The phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                          "type": "string"
                        },
                        "service_info": {
                          "description": "The carrier's service information.",
                          "type": "string"
                        },
                        "sip_trunk_name": {
                          "description": "SIP trunk used for the number",
                          "type": "string"
                        },
                        "status": {
                          "description": "The phone number's status:\n* `0` — Inactive.\n* `1` — Active.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "phone_number"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update peering phone numbers"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "unprocessed_numbers": [
                        {
                          "failure_reason": "Invalid status",
                          "phone_number": "15556660100"
                        },
                        {
                          "failure_reason": "Invalid SIP trunk",
                          "phone_number": "15556660101"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "unprocessed_numbers": {
                      "description": "Information about unprocessed phone numbers.",
                      "items": {
                        "properties": {
                          "failure_reason": {
                            "description": "The processing failure reason.",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nPeering phone numbers successfully added. Check the API response for any failures."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `124`\nAccount does not exist: \"{accountId}\".\n\n**Error Code:** `300`\nValidation Failed. Batch adding phone numbers is limited to 200 per request.\n\n**Error Code:** `404`\nUnknown carrier."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Provider Exchange"
        ],
        "description": "Use this API to add phone numbers to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for use by partners that have completed the MoU to peer with Zoom. To become a peering provider/ carrier, please submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Scopes:** `phone_peering:write:admin`, `phone_peering:master`</br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "addPeeringPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "carrier_code": {
                    "description": "The carrier's code. The `clientId` is used to map to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
                    "type": "integer"
                  },
                  "phone_numbers": {
                    "description": "Information about the added phone numbers.",
                    "items": {
                      "properties": {
                        "billing_reference_id": {
                          "description": "The carrier's billing reference ID.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "The phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                          "type": "string"
                        },
                        "service_info": {
                          "description": "The carrier's service information.",
                          "type": "string"
                        },
                        "sip_trunk_name": {
                          "description": "The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).",
                          "type": "string"
                        },
                        "status": {
                          "description": "The phone number's status:\n* `0` — Inactive.\n* `1` — Active.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "phone_number",
                        "status",
                        "sip_trunk_name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add peering phone numbers"
      }
    },
    "/phone/ported_numbers/orders": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "w8jQ7vUYK2VIKMeuurezwkFDhlVLPvcw8L2",
                      "page_size": 1,
                      "ported_numbers": [
                        {
                          "numbers": [
                            "+12058945751",
                            "+12058945752"
                          ],
                          "order_id": "2021080201485902918",
                          "replacing_numbers": [
                            {
                              "source_number": "+12058945752",
                              "target_number": "+12058945755"
                            },
                            {
                              "source_number": "+12058945751",
                              "target_number": "+12058945753"
                            }
                          ],
                          "status": "Processing",
                          "submitted_date_time": "2021-08-01T17:48:59Z"
                        }
                      ],
                      "total_records": 2
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer"
                    },
                    "ported_numbers": {
                      "items": {
                        "properties": {
                          "numbers": {
                            "description": "The ported numbers.",
                            "items": {
                              "description": "The external contact's extension number.",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "order_id": {
                            "description": "The ported numbers' order ID.",
                            "type": "string"
                          },
                          "replacing_numbers": {
                            "description": "The ported numbers' replacement numbers.",
                            "items": {
                              "properties": {
                                "source_number": {
                                  "description": "The source number.",
                                  "type": "string"
                                },
                                "target_number": {
                                  "description": "The replaced number.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "status": {
                            "description": "The ported numbers' status.",
                            "enum": [
                              "Not_Submitted",
                              "Waiting",
                              "Processing",
                              "Successfully",
                              "Rejected",
                              "Canceled",
                              "FOC"
                            ],
                            "type": "string"
                          },
                          "submission_date_time": {
                            "description": "The time ported numbers were submitted (format: 'yyyy-MM-ddThh:dd:ssZ').",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nPorted Phone numbers listed successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to list ported numbers in a Zoom account.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "listPortedNumbers",
        "summary": "List ported numbers"
      }
    },
    "/phone/ported_numbers/orders/{orderId}": {
      "get": {
        "parameters": [
          {
            "description": "Order ID of the ported numbers. This can be retrieved from the List Ported Numbers API.",
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "contact_number": "+2058945753",
                      "isp": "Twilio International",
                      "numbers": [
                        "+12058945751",
                        "+12058945752"
                      ],
                      "order_id": "2021080307332974349",
                      "original_billing_info": {
                        "address": {
                          "city": "San Jose",
                          "country": "US",
                          "house_number": "55",
                          "state_code": "CA",
                          "street_name": "ALMADEN BLVD",
                          "zip": "95113"
                        },
                        "authorizing_person": "zz",
                        "billing_telephone_number": "+2058945751",
                        "company": "zm",
                        "customer_requested_date": "2021-08-06"
                      },
                      "printed_name": "Example",
                      "replacing_numbers": [
                        {
                          "source_number": "+12058945752",
                          "target_number": "+12058945755"
                        },
                        {
                          "source_number": "+12058945751",
                          "target_number": "+12058945753"
                        }
                      ],
                      "status": "Processing",
                      "submission_date_time": "2021-08-02T23:33:29Z"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "contact_emails": {
                      "description": "Contact emails of transferring numbers.",
                      "type": "string"
                    },
                    "contact_number": {
                      "description": "Contact numbers for transferring numbers.",
                      "type": "string"
                    },
                    "isp": {
                      "description": "Ported numbers' ISP.",
                      "type": "string"
                    },
                    "numbers": {
                      "description": "Ported numbers.",
                      "items": {
                        "description": "The external contact's extension number.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "order_id": {
                      "description": "Ported numbers' order ID.",
                      "type": "string"
                    },
                    "original_billing_info": {
                      "description": "Ported numbers' original billing info.",
                      "properties": {
                        "account_number": {
                          "type": "string"
                        },
                        "address": {
                          "properties": {
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "house_number": {
                              "type": "string"
                            },
                            "state_code": {
                              "type": "string"
                            },
                            "street_name": {
                              "type": "string"
                            },
                            "zip": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "authorizing_person": {
                          "type": "string"
                        },
                        "billing_telephone_number": {
                          "type": "string"
                        },
                        "company": {
                          "type": "string"
                        },
                        "customer_requested_date": {
                          "type": "string"
                        },
                        "pin": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "printed_name": {
                      "description": "Printed names on transferring numbers.",
                      "type": "string"
                    },
                    "replacing_numbers": {
                      "description": "The ported numbers' replacement numbers.",
                      "items": {
                        "properties": {
                          "source_number": {
                            "description": "The source number.",
                            "type": "string"
                          },
                          "target_number": {
                            "description": "The replaced number.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Ported numbers' status.",
                      "enum": [
                        "Not_Submitted",
                        "Waiting",
                        "Processing",
                        "Successfully",
                        "Rejected",
                        "Canceled",
                        "FOC"
                      ],
                      "type": "string"
                    },
                    "submission_date_time": {
                      "description": "The time ported numbers were submitted (format: 'yyyy-MM-ddThh:dd:ssZ').",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nPorted numbers details retrieved successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPortin order does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to get details on the ported numbers by specifying `order_id`.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom phone license",
        "operationId": "getPortedNumbersDetails",
        "summary": "Get ported number details"
      }
    },
    "/phone/recording_transcript/download/{recordingId}": {
      "get": {
        "parameters": [
          {
            "description": "The phone recording ID",
            "in": "path",
            "name": "recordingId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPhone recording transcript does not exist: {recordingId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Recordings"
        ],
        "description": "Use this API to download the phone recording transcript. \n\n**Prerequisites:**\n\n* A Business or Enterprise account\n* A Zoom Phone license\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_recording:read`, `phone_recording:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n\n",
        "operationId": "phoneDownloadRecordingTranscript",
        "summary": "Download a phone recording transcript"
      }
    },
    "/phone/recordings": {
      "get": {
        "parameters": [
          {
            "description": "The number of records returned within a single API call. The default is **30**, and the maximum is **100**.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. If unspecified, returns data from the past 30 days.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "description": "The owner type. The allowed values are null, `user`, or `callQueue`. The default is null. If null, returns all owner types.\n",
            "in": "query",
            "name": "owner_type",
            "schema": {
              "default": "all",
              "type": "string"
            }
          },
          {
            "description": "The recording type. The allowed values are null, `OnDemand`, or `Automatic`. The default is null. If null, returns all recording types.\n",
            "in": "query",
            "name": "recording_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The site ID. The default is `All sites`.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "default": "All sites",
              "type": "string"
            }
          },
          {
            "description": "Query date type: `start_time` or `end_time`. Defaults to `start_time` if unspecified.",
            "in": "query",
            "name": "query_date_type",
            "schema": {
              "default": "start_time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "from": "2021-12-26",
                      "next_page_token": "",
                      "page_size": 30,
                      "recordings": [
                        {
                          "call_id": "7057301355244126400",
                          "call_log_id": "c455b1d5-7e97-4fd2-930a-3bd6bbb6ae79",
                          "callee_name": "Fiona Doe",
                          "callee_number": "123155",
                          "callee_number_type": 1,
                          "caller_name": "Zoom",
                          "caller_number": "12095556543",
                          "caller_number_type": 2,
                          "date_time": "2022-01-26T00:13:58Z",
                          "direction": "outbound",
                          "download_url": "https://zoom.us/v2/phone/recording/download/H7zF-ldRR3iJyBsWjbLOCQ",
                          "duration": 17,
                          "end_time": "2022-01-26T00:14:16Z",
                          "id": "c47e974fd2",
                          "owner": {
                            "extension_number": 123155,
                            "id": "BY8BM-lKQ3ythLMTcJSViA",
                            "name": "Fiona Doe",
                            "type": "user"
                          },
                          "recording_type": "Automatic",
                          "site": {
                            "id": "uAKXLmxu99K55YWu5nkZVA",
                            "name": "Main Site"
                          }
                        },
                        {
                          "call_id": "7057267278995522273",
                          "call_log_id": "447ae678-f409-4eef-b257-a7034d6f4c5b",
                          "callee_name": "Zoom",
                          "callee_number": "12095556543",
                          "callee_number_type": 2,
                          "caller_name": "Fiona Doe",
                          "caller_number": "123155",
                          "caller_number_type": 1,
                          "date_time": "2022-01-25T22:01:35Z",
                          "direction": "outbound",
                          "download_url": "https://zoom.us/v2/phone/recording/download/rhVP3UtBRVKdFhHKd2VIsQ",
                          "duration": 8,
                          "end_time": "2022-01-25T22:01:44Z",
                          "id": "447ae678f4094eefb257a7034d6f4c5b",
                          "owner": {
                            "extension_number": 123155,
                            "id": "BY8BM-lKQ3ythLMTcJSViA",
                            "name": "Fiona Doe",
                            "type": "user"
                          },
                          "recording_type": "Automatic",
                          "site": {
                            "id": "uAKXLmxu99K55YWu5nkZVA",
                            "name": "Main Site"
                          }
                        },
                        {
                          "call_id": "7055404401355491110",
                          "call_log_id": "b355e02c-10fc-4a9f-82ff-59dd69f6572a",
                          "callee_name": "Moses Code",
                          "callee_number": "12135550014",
                          "callee_number_type": 2,
                          "caller_name": "Fiona Doe",
                          "caller_number": "123155",
                          "caller_number_type": 1,
                          "date_time": "2022-01-20T21:32:40Z",
                          "direction": "outbound",
                          "download_url": "https://zoom.us/v2/phone/recording/download/2x5FISkASX--WIAzkyE_oQ",
                          "duration": 319,
                          "end_time": "2022-01-20T21:38:00Z",
                          "id": "b355e02c10fc4a9f82ff59dd69f6572a",
                          "owner": {
                            "extension_number": 123155,
                            "id": "BY8BM-lKQ3ythLMTcJSViA",
                            "name": "Fiona Doe",
                            "type": "user"
                          },
                          "recording_type": "Automatic",
                          "site": {
                            "id": "uAKXLmxu99K55YWu5nkZVA",
                            "name": "Main Site"
                          }
                        },
                        {
                          "call_id": "7055401691231050980",
                          "call_log_id": "f504b43f-316f-4c91-aa91-ebace3476267",
                          "callee_name": "Arin Moss",
                          "callee_number": "12135550014",
                          "callee_number_type": 2,
                          "caller_name": "Fiona Doe",
                          "caller_number": "123155",
                          "caller_number_type": 1,
                          "date_time": "2022-01-20T21:22:15Z",
                          "direction": "outbound",
                          "download_url": "https://zoom.us/v2/phone/recording/download/duWfIhJvQeTrU2nkZxnGw",
                          "duration": 317,
                          "end_time": "2022-01-20T21:27:34Z",
                          "id": "f504b43f316f4c91aa1ebace3476267",
                          "owner": {
                            "extension_number": 123155,
                            "id": "BY8BM-lKQ3ythLMTcJSViA",
                            "name": "Fiona Doe",
                            "type": "user"
                          },
                          "recording_type": "Automatic",
                          "site": {
                            "id": "uAKXLmxu99K55YWu5nkZVA",
                            "name": "Main Site"
                          }
                        }
                      ],
                      "to": "2022-01-26",
                      "total_records": 4
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The current page number of returned records.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call. The default is **30**, and the maximum is **100**.",
                      "type": "integer"
                    },
                    "recordings": {
                      "items": {
                        "properties": {
                          "call_id": {
                            "description": "The phone call's unique ID.",
                            "type": "string"
                          },
                          "call_log_id": {
                            "description": "The phone call log's unique ID.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "The contact name of the callee.",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "The number associated with the callee. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_name": {
                            "description": "The contact name of the caller.",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "The number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal  number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "date_time": {
                            "description": "The date and time when the recording was received.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "direction": {
                            "description": "The direction of the call. Values: `inbound` or `outbound`.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "type": "string"
                          },
                          "download_url": {
                            "description": "The download URL for the recording.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "The call recording's duration, in seconds.",
                            "type": "integer"
                          },
                          "end_time": {
                            "description": "The recording's end time.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the recording.",
                            "type": "string"
                          },
                          "owner": {
                            "description": "The owner of the recording.",
                            "properties": {
                              "extension_number": {
                                "description": "The extension number associated to the call number.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "The owner's ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the owner.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The owner type: `user` or `call queue`.",
                                "enum": [
                                  "user",
                                  "call queue"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "recording_type": {
                            "description": "The recording type. The allowed values are `OnDemand` or `Automatic`.",
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "The site ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The site name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "transcript_download_url": {
                            "description": "The download URL for the recording transcript.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "Total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code** `200`\n\nOK."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Response Code:** `400`\n\nThe template name you entered already exists. Provide a new name for the template and try again.\n\n\n**Error Code:** `300`\n\nValidation failed. You provided an incorrect value for the template type. Provide a valid value and try again."
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Recordings"
        ],
        "description": "Use this API to list an account's [call recordings](https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings).\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license \n* Account owner or admin privileges \n\n **Scopes:** `phone:read:admin`, `phone:write:admin`,`phone_recording:read:admin` \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getPhoneRecordings",
        "summary": "Get call recordings"
      }
    },
    "/phone/recordings/{recordingId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the recording.",
            "in": "path",
            "name": "recordingId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code**: `204` <br>\nRecording deleted.\n"
          },
          "400": {
            "description": "**HTTP Status Code**: `400` <br>\n**Error Code**: `124` <br>\nInvalid access token."
          },
          "404": {
            "description": "**HTTP Status Code**: `404` <br>\n**Error Code**: `404` <br>\nRecording does not exist: {recordingId}.<br>\n**Error Code**: `2001`<br>\nAccount does not exist."
          }
        },
        "tags": [
          "Recordings"
        ],
        "description": "Use this API to delete a call recording.\n\n**Scopes:** `phone:write`, `phone:write:admin`, `phone_recording:write`, `phone_recording:write:admin`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license",
        "operationId": "deleteCallRecording",
        "summary": "Delete a call recording"
      }
    },
    "/phone/reports/operationlogs": {
      "get": {
        "parameters": [
          {
            "description": "Start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. If unspecified, returns data within the 24 hours.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "description": "Filter the response by the category of the action performed. By default, the value of this field is \"all\" and thus, the response will include log of all operations for the defined period.\n\nTo only include response for a specific category type, provide a value for `category_type` from this [table](http://marketplace.zoom.us/docs/phone-operation-categories ).",
            "in": "query",
            "name": "category_type",
            "schema": {
              "default": "all",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "from": "2020-08-01",
                      "next_page_token": "abcD3944YsoYPB12",
                      "operation_logs": [
                        {
                          "action": "UPDATE",
                          "category_type": "Phone Number",
                          "operation_detail": "Unbind Phone Number +1112222 From Not_Delete_CallQueue_Recording",
                          "operator": "apbchd@mail123a.com",
                          "time": "2020-08-24T06:15:12Z"
                        },
                        {
                          "action": "DELETE",
                          "category_type": "Phone Number",
                          "operation_detail": "Delete Phone Number +123456 From abc.zoom.us",
                          "operator": "apbchd@mail123a.com",
                          "time": "2020-08-24T06:13:30Z"
                        },
                        {
                          "action": "ADD",
                          "category_type": "Device",
                          "operation_detail": "Add Device testDevice",
                          "operator": "apbcdef@mail123a.com",
                          "time": "2020-08-11T03:13:17Z"
                        },
                        {
                          "action": "UPDATE",
                          "category_type": "Phone Number",
                          "operation_detail": "Assign Phone Number +120000123 to Sam Mendes(abcdaccount@someaccount.com)",
                          "operator": "apapbchd@mail123a.com",
                          "time": "2020-08-06T08:29:45Z"
                        }
                      ],
                      "page_size": 15,
                      "to": "2020-08-30",
                      "total_records": 16
                    }
                  }
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationToken"
                    },
                    {
                      "properties": {
                        "operation_logs": {
                          "description": "Array of operation log objects",
                          "items": {
                            "properties": {
                              "action": {
                                "description": "Action that was performed.",
                                "type": "string"
                              },
                              "category_type": {
                                "description": "Category type of the operation.",
                                "type": "string"
                              },
                              "operation_detail": {
                                "description": "Operation detail.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "The user who performed the operation.",
                                "type": "string"
                              },
                              "time": {
                                "description": "The time at which the operation was performed.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nReport returned."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\n\n**Error Code**: `124`\n Account does not exist: {accountId}."
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "The **Phone System operation logs report** allows account owners and admins to view monthly Zoom phone related admin operation details. \n\nUse this API to retrieve the **Phone System Operation Logs Report**. Account owners and admins can also access this information by logging into their Zoom accounts and navigating to [Phone System Operation Logs](https://zoom.us/pbx/page/report/operations#/report/operation-logs).\n\n **Scopes:** `phone:read:admin`, `phone:write:admin` \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n\n **Prerequisites:** \n\n* Account must be enrollled in Pro or a higher plan\n* Account must be enrolled in a [Zoom Phone](https://zoom.us/pricing/zoom-phone) plan\n\n",
        "operationId": "getPSOperationLogs",
        "summary": "Get operation logs report"
      }
    },
    "/phone/rooms": {
      "get": {
        "parameters": [
          {
            "description": "The number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Unique identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of calling plan.",
            "in": "query",
            "name": "calling_type",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "",
                      "page_size": 30,
                      "rooms": [
                        {
                          "calling_plans": [
                            {
                              "name": "US/CA Unlimited Calling Plan",
                              "type": 200
                            }
                          ],
                          "extension_id": "YhH4QZ8bTPG7iymTUdj-bQ",
                          "extension_number": 10000,
                          "id": "z8ghgfh8uQ",
                          "name": "Shri Shri",
                          "phone_numbers": [
                            {
                              "id": "djkfsd13",
                              "number": "+123456789"
                            }
                          ],
                          "site": {
                            "id": "CESEpjWwT-upVH7kt_ixWA",
                            "name": "Main Site"
                          }
                        }
                      ],
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The number of records returned from a single API call.",
                      "maximum": 300,
                      "type": "integer"
                    },
                    "rooms": {
                      "items": {
                        "properties": {
                          "calling_plans": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the calling plan that Zoom Room is enrolled in.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of calling plan that Zoom Room is enrolled in.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "extension_id": {
                            "description": "Extension ID.",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "Extension number assigned to the Zoom Room's Zoom phone number.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Unique identifier of the Zoom Room.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the Zoom Room.",
                            "type": "string"
                          },
                          "phone_numbers": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "ID for phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "Phone number in E164 format.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total records found for this query.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nZoom Rooms retrieved successfully."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to retrieve a list of [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/360025153711) under the account that has the Zoom Phone license assigned.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listZoomRooms",
        "summary": "List Zoom Rooms under Zoom Phone license"
      }
    },
    "/phone/rooms/{roomId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "calling_plans": [
                        {
                          "name": "US/CA Unlimited Calling Plan",
                          "type": 200
                        }
                      ],
                      "emergency_address": {
                        "address_line1": "55 ALMADEN BLVD",
                        "city": "SAN JOSE",
                        "country": "US",
                        "id": "Qza2T_KATwCeUfTkzGsOmQ",
                        "state_code": "CA",
                        "zip": "95113"
                      },
                      "extension_id": "YhH4QZ8bTPG7iymTUdj-bQ",
                      "extension_number": 10000,
                      "id": "z8ghgfh8uQ",
                      "name": "Shri Shri",
                      "phone_numbers": [
                        {
                          "id": "djkfsd13",
                          "number": "+123456789"
                        }
                      ],
                      "policy": {
                        "international_calling": {
                          "enable": true,
                          "locked_by": "site"
                        },
                        "select_outbound_caller_id": {
                          "enable": true,
                          "locked_by": "site"
                        }
                      },
                      "site": {
                        "id": "CESEpjWwT-upVH7kt_ixWA",
                        "name": "Main Site"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "calling_plans": {
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Name of the calling plan that Zoom Room is enrolled in.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of calling plan that Zoom Room is enrolled in.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "emergency_address": {
                      "description": "The emergency location's address information.",
                      "properties": {
                        "address_line1": {
                          "description": "The emergency location address line 1.",
                          "type": "string"
                        },
                        "address_line2": {
                          "description": "The emergency location address line 2.",
                          "type": "string"
                        },
                        "city": {
                          "description": "The emergency location address's city.",
                          "type": "string"
                        },
                        "country": {
                          "description": "The emergency location address's country.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The emergency location address ID.",
                          "type": "string"
                        },
                        "state_code": {
                          "description": "The emergency location address's state code.",
                          "type": "string"
                        },
                        "zip": {
                          "description": "The emergency address zip code.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "extension_id": {
                      "description": "Extension ID.",
                      "type": "string"
                    },
                    "extension_number": {
                      "description": "The extension number of the Zoom Room. ",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Unique identifier of the Zoom Room.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the Zoom Room.",
                      "type": "string"
                    },
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "ID for phone number.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number in E164 format.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "policy": {
                      "properties": {
                        "international_calling": {
                          "properties": {
                            "enable": {
                              "description": "Allow current extension to place international calls outside of the calling plan.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "select_outbound_caller_id": {
                          "properties": {
                            "enable": {
                              "description": "Allow current extension to change outbound caller ID when placing calls.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "site": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the site.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nZoom Room retrieved successfully."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to retrieve a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711) under the account that has the Zoom Phone license assigned.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getZoomRoom",
        "summary": "Get a Zoom Room under Zoom Phone license"
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nZoom Room updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nExtension number error.\n**Error code**: `400` \nPolicy locked: {policy_key}.\n**Error code**: `404` \nRoom does not exist:{roomId}\nSite does not exist."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to update a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711) under the account that has the Zoom Phone license assigned.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateZoomRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "extension_number": {
                    "description": "The extension number of the Zoom Room. ",
                    "type": "integer"
                  },
                  "policy": {
                    "properties": {
                      "international_calling": {
                        "properties": {
                          "enable": {
                            "description": "Allow current extension to place international calls outside of the calling plan.",
                            "type": "boolean"
                          },
                          "reset": {
                            "description": "Using site setting.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "select_outbound_caller_id": {
                        "properties": {
                          "enable": {
                            "description": "Allow current extension to change outbound caller ID when placing calls.",
                            "type": "boolean"
                          },
                          "reset": {
                            "description": "Using site setting.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a Zoom Room under Zoom Phone license"
      }
    },
    "/phone/rooms/{roomId}/calling_plans": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status code:** `201`\n\nCalling plan assigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error Code:** `300` \nPlan invalid.\n\n**Error Code:** `404` \nRoom does not exist:{roomId}.\n\n**Error Code:** `429` \nRoom batch operation is limited to 5 per request."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to assign [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_70c74c57-50d6-406b-a4fa-2f33d4bebdbc). Up to 200 numbers at a time.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignCallingPlanToRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calling_plans": {
                    "items": {
                      "properties": {
                        "type": {
                          "description": "[Type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign calling plans to a Zoom Room"
      }
    },
    "/phone/rooms/{roomId}/calling_plans/{type}": {
      "delete": {
        "parameters": [
          {
            "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to Zoom Room. (e.g: The value of type would be \"200\" for Unlimited US/Canada calling plan.)\n",
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` \n\nCalling plan removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error Code:** `300` \nPlan invalid.\n**Error Code:** `404` \nRoom does not exist:{roomId}."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to unassign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) from a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_140e30ba-5a88-40b9-b799-16883fa0a037).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignCallingPlanFromRoom",
        "summary": "Remove a calling plan from a Zoom Room"
      }
    },
    "/phone/rooms/{roomId}/phone_numbers": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `201` \n\nPhone number assigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error Code:** `404` \nRoom does not exist:{roomId}.\nPhone number does not exist.\n**Error Code:** `409` \nPhone number already in use.\nThis function requires a Zoom Phone Metered, Unlimited, or Pro plan.\n**Error Code:** `429` \nRoom batch operation is limited to 5 per request."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to [assign phone numbers to a Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711). Up to 200 numbers at a time.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignPhoneNumberToZoomRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "id": {
                          "description": "ID for phone number",
                          "type": "string"
                        },
                        "number": {
                          "description": "Phone number in E164 format.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Provide either the ID or phone number in the request body."
        },
        "summary": "Assign phone numbers to a Zoom Room"
      }
    },
    "/phone/rooms/{roomId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Provide roomId of the Zoom Room.",
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide phoneNumberId of the Zoom Room. ",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\nThe phone number has been removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error Code:** `404` \nRoom does not exist:{roomId}.\nPhone number does not exist."
          }
        },
        "tags": [
          "Zoom Rooms"
        ],
        "description": "Use this API to unassign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6) from a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_140e30ba-5a88-40b9-b799-16883fa0a037).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* The Zoom Room must have been previously assigned a Zoom Phone number\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "UnassignPhoneNumberFromZoomRoom",
        "summary": "Remove a phone number from a Zoom Room"
      }
    },
    "/phone/routing_rules": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the site.",
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
        },
        "tags": [
          "Directory Backup Routing Rules"
        ],
        "description": "Use this API to return a list of directory backup routing rules. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN. \n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "listRoutingRule",
        "summary": "List directory backup routing rules"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "name": "test",
                      "routing_rule_id": "Ct6mcZfdsWYug46puWOQg"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "name": {
                      "description": "Routing rule name.",
                      "type": "string"
                    },
                    "routing_rule_id": {
                      "description": "Unique identifier of the routing rule.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **No Content**\n\nDirectory backup routing rule added."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nType does not exist.\nType cannot be null.\nNumber Pattern cannot be null.\nNumber Pattern length can be up to 255 characters.\nSIP Group cannot be null.\nNumber Pattern ({0}) already exists.\nTranslation length can be up to 255 characters.\nRouting rule name cannot be blank.\nRouting rule name length can be up to 255 characters.\n**Error code**: `404` \nSIP Group does not exist.\nSite does not exist."
          }
        },
        "tags": [
          "Directory Backup Routing Rules"
        ],
        "description": "Use this API to create a directory backup routing rule. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN. \n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "addRoutingRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Routing rule name.",
                    "type": "string"
                  },
                  "number_pattern": {
                    "description": "Perl-compatible number_pattern expression.",
                    "type": "string"
                  },
                  "sip_group_id": {
                    "description": "Unique identifier of the SIP group. Cannot be null when 'type' = 'sip_group'.",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the site.`nullable`",
                    "type": "string"
                  },
                  "translation": {
                    "description": "Optional replacement pattern: must be in E.164 format.`nullable`",
                    "type": "string"
                  },
                  "type": {
                    "description": "Routing path type.",
                    "enum": [
                      "other_sites",
                      "pstn",
                      "sip_group"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a directory backup routing rule"
      }
    },
    "/phone/routing_rules/{routingRuleId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the routing rule.",
            "in": "path",
            "name": "routingRuleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDirectory backup routing rule deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n**Error code**: `404` \nRouting rule does not exist."
          }
        },
        "tags": [
          "Directory Backup Routing Rules"
        ],
        "description": "Use this API to delete a directory backup routing rule. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN. \n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "deleteRoutingRule",
        "summary": "Delete a directory backup routing rule"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the routing rule.",
            "in": "path",
            "name": "routingRuleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "name": "test",
                      "number_pattern": "test",
                      "order": 1,
                      "routing_path": {
                        "sip_group": {
                          "id": "V1nhzPsjTxuBr2ttX_snxQ",
                          "name": "test_custom_id"
                        },
                        "type": "sip_group"
                      },
                      "routing_rule_id": "Ct6mcZfdsWYug46puWOQg",
                      "site_id": "SQv52YtkRLC2dwrDdYtGsA",
                      "translation": "test"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "name": {
                      "description": "Routing rule name.",
                      "type": "string"
                    },
                    "number_pattern": {
                      "description": "Perl-compatible number_pattern expression.",
                      "type": "string"
                    },
                    "order": {
                      "description": "Routing rule order to be applied, '1' being the highest.",
                      "type": "integer"
                    },
                    "routing_path": {
                      "properties": {
                        "sip_group": {
                          "description": "It cannot be null when 'type' = 'sip_group'.",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the SIP group.",
                              "type": "string"
                            },
                            "name": {
                              "description": "SIP group name.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "Routing rule type.",
                          "enum": [
                            "other_sites",
                            "pstn",
                            "sip_group"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "routing_rule_id": {
                      "description": "Unique identifier of the routing rule.",
                      "type": "string"
                    },
                    "site_id": {
                      "description": "Unique identifier of the site.",
                      "type": "string"
                    },
                    "translation": {
                      "description": "Optional replacement pattern: must be in E.164 format.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \n\nGet directory backup routing rule."
          }
        },
        "tags": [
          "Directory Backup Routing Rules"
        ],
        "description": "Use this API to get a directory backup routing rule. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN. \n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "getRoutingRule",
        "summary": "Get a directory backup routing rule"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the routing rule.",
            "in": "path",
            "name": "routingRuleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDirectory backup routing rule updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error code**: `300` \nType does not exist.\nSIP Group cannot be null.\nNumber Pattern ({0}) already exists.\nRouting rule name length can be up to 255 characters.\nNumber Pattern length can be up to 255 characters.\nTranslation length can be up to 255 characters.\n**Error code**: `404` \nRouting rule does not exist.\nSIP Group does not exist."
          }
        },
        "tags": [
          "Directory Backup Routing Rules"
        ],
        "description": "Use this API to update the directory backup routing rule. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN. \n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updateRoutingRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Routing rule name.",
                    "type": "string"
                  },
                  "number_pattern": {
                    "description": "Perl-compatible number_pattern expression.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Routing rule order to be applied, '1' being the highest. Order inserting occurs when this field is filled. It will automatically readjust the order of rules between the target order and the current order.",
                    "type": "integer"
                  },
                  "sip_group_id": {
                    "description": "Unique identifier of the SIP Group: must not be null when 'type' = 'sip_group'.",
                    "type": "string"
                  },
                  "translation": {
                    "description": "`nullable` Optional replacement pattern: must be in E.164 format.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Routing path type.",
                    "enum": [
                      "other_sites",
                      "pstn",
                      "sip_group"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update the directory backup routing rule"
      }
    },
    "/phone/setting_templates": {
      "get": {
        "parameters": [
          {
            "description": "Number of records returns within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 300,
              "type": "integer"
            }
          },
          {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the site. This field is required only if multiple sites have been enabled.  of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details. If this is not provided, the response lists the account level setting templates.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "3",
                      "page_size": "30",
                      "templates": [
                        {
                          "description": "string",
                          "id": "12345",
                          "name": "namename",
                          "type": "2"
                        }
                      ],
                      "total_records": "200"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call. The default is **30** and the maximum is **300**.",
                      "type": "integer"
                    },
                    "templates": {
                      "items": {
                        "properties": {
                          "description": {
                            "description": "Template description.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the template.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Template name.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Template type.\n\nThe value of this field can be one of the following:\n\n* `user`\n\n* `group`\n\n* `autReceptionist`\n\n* `commonArea`\n\n* `zr`\n\n* `interop`\n",
                            "enum": [
                              "user",
                              "group",
                              "autReceptionist",
                              "commonArea",
                              "zr",
                              "interop"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nOK"
          },
          "400": {
            "description": "**HTTP Response Code:** `400`\n\n\n**Error Code:** `300`\n\nMultiple Sites option has been disabled. Enable it and try again."
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\n\nSite does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Setting Templates"
        ],
        "description": "Use this API to get a list of all the created phone template settings.\n\n**Scopes:** `phone:read:admin` or `phone:read`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "listSettingTemplates",
        "summary": "List setting templates"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "description": "A description here...",
                      "id": "123456",
                      "name": "Name name",
                      "type": "user"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "description": {
                      "description": "Template description.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Template ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Template name.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of template. Values include: `user`, `group`, `autoReceptionist`, `commonArea`, `zr`, or `interop`.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201`\n\nCreated Successfully."
          },
          "400": {
            "description": "**HTTP Response Code:** `400`\n\nThe template name you entered already exists. Provide a new name for the template and try again.\n\n\n**Error Code:** `300`\n\nValidation failed. You provided an incorrect value for the template type. Provide a valid value and try again."
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          }
        },
        "tags": [
          "Setting Templates"
        ],
        "description": "Use this API to create a Zoom Phone setting template for an account. After creating a phone template, the defined settings will become the default settings for an account.\n\n**Scopes:** `phone:write:admin`, `phone:write`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or enterprise Zoom account \n* A Zoom Phone license",
        "operationId": "addSettingTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "A description of the template.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the template.",
                    "type": "string"
                  },
                  "site_id": {
                    "description": "Unique identifier of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of template. Values include `user`, `group`, `autoReceptionist`, `commonarea`, or `interop`.",
                    "enum": [
                      "user",
                      "group",
                      "autoReceptionist",
                      "commonarea",
                      "interop"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add a setting template"
      }
    },
    "/phone/setting_templates/{templateId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the template.",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the name of the field to use to filter the response. For example, if you provide \"description\" as the value of the field, you will get a response similar to the following: {“description”: “template description”}.",
            "in": "query",
            "name": "custom_query_fields",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "description": "string",
                      "id": "string",
                      "name": "string",
                      "policy": {
                        "ad_hoc_call_recording": {
                          "enable": "boolean",
                          "recording_start_prompt": "boolean",
                          "recording_transcription": "boolean"
                        },
                        "auto_call_recording": {
                          "enable": "boolean",
                          "recording_calls": "string",
                          "recording_start_prompt": "boolean",
                          "recording_transcription": "boolean"
                        },
                        "sms": {
                          "enable": "boolean",
                          "international_sms": "boolean"
                        },
                        "voicemail": {
                          "allow_transcription": "boolean",
                          "enable": "boolean"
                        }
                      },
                      "profile": {
                        "area_code": "string",
                        "country": "string"
                      },
                      "type": "string",
                      "user_settings": {
                        "audio_prompt_language": "string",
                        "block_calls_without_caller_id": "boolean",
                        "call_handling": {
                          "business_hours": {
                            "business_hour_action": "integer",
                            "connect_to_operator": {
                              "enable": "boolean",
                              "id": "string",
                              "type": "string"
                            },
                            "custom_hours": [
                              {
                                "from": "string",
                                "to": "string",
                                "type": "integer",
                                "weekday": "integer"
                              }
                            ],
                            "ring_type": "string",
                            "ringing_duration": "string",
                            "type": "integer"
                          },
                          "close_hours": {
                            "close_hour_action": "integer",
                            "connect_to_operator": {
                              "enable": "boolean",
                              "id": "string",
                              "type": "string"
                            },
                            "max_wait_time": "string"
                          }
                        },
                        "desk_phone": {
                          "pin_code": "string"
                        },
                        "hold_music": "string"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "description": {
                      "description": "The description of the template.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Specify the template ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Specify the name of the template.",
                      "type": "string"
                    },
                    "policy": {
                      "properties": {
                        "ad_hoc_call_recording": {
                          "properties": {
                            "enable": {
                              "description": "Allow current extension to record and save calls in the cloud.",
                              "type": "boolean"
                            },
                            "recording_start_prompt": {
                              "description": "Play a prompt to call participants when the recording has started.",
                              "type": "boolean"
                            },
                            "recording_transcription": {
                              "description": "Allow call recording transcription.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "auto_call_recording": {
                          "properties": {
                            "enable": {
                              "description": "Enable automatic call recording.",
                              "type": "boolean"
                            },
                            "recording_calls": {
                              "description": "Values: inbound, outbound, both.",
                              "type": "string"
                            },
                            "recording_start_prompt": {
                              "description": "Play a prompt to call participants when the recording has started.",
                              "type": "boolean"
                            },
                            "recording_transcription": {
                              "description": "Allow call recording transcription.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "sms": {
                          "properties": {
                            "enable": {
                              "description": "Allow user to send and receive messages.",
                              "type": "boolean"
                            },
                            "international_sms": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "voicemail": {
                          "properties": {
                            "allow_transcription": {
                              "description": "Allow voicemail transcription.",
                              "type": "boolean"
                            },
                            "enable": {
                              "description": "Allow current extension to access, receive, or share voicemail.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "profile": {
                      "properties": {
                        "area_code": {
                          "description": "The area code from which the phone account was created.",
                          "type": "string"
                        },
                        "country": {
                          "description": "Name of the country where the template was created.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.",
                      "enum": [
                        "user",
                        "group",
                        "autoReceptionist",
                        "commonArea",
                        "zr",
                        "interop"
                      ],
                      "type": "string"
                    },
                    "user_settings": {
                      "properties": {
                        "audio_prompt_language": {
                          "description": "Audio prompt language code.\n American English: `en-US`\n\nBritish English: `en-GB`\n\nEspañol americano: `es-US`\n\nFrançais canadien: `fr-CA`\n\nDansk: `da-DK`\n\nDeutsch: `de-DE`\n\nEspañol: `es-ES`\n\nFrançais: `fr-FR`\n\nItaliano: `it-IT`\n\nNederlands: `nl-NL`\n\nPortugues portugal: `pt-PT`\n\nJapanese: `ja-JP`\n\nKorean: `ko-KO`\n\nPortugues brasil: `pt-BR`\n\nChinese: `zh-CN`\n\nTaiwanese: `zh-TW`\n",
                          "type": "string"
                        },
                        "block_calls_without_caller_id": {
                          "description": "Block Calls without Caller ID.",
                          "type": "boolean"
                        },
                        "call_handling": {
                          "properties": {
                            "business_hours": {
                              "properties": {
                                "business_hour_action": {
                                  "description": "When a call is not answered:\n\n0-Forward to voicemail;\n\n1-Play a message, then disconnect; \n\n9-Disconnect; \n\n26-Forward to External Contacts; \n\n50-Forward to another extension",
                                  "enum": [
                                    0,
                                    1,
                                    9,
                                    26,
                                    50
                                  ],
                                  "type": "integer"
                                },
                                "connect_to_operator": {
                                  "description": "Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.",
                                  "properties": {
                                    "enable": {
                                      "description": "Enable connect to operator.",
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "description": "Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Values:\n\n1-user,\n\n2-callQueue, \n\n3-autoReceptionist,\n\n4-commonAreaPhone,\n\n5-zoomRoom, \n\n7-sharedLineGroup",
                                      "enum": [
                                        "user",
                                        "zoomRoom",
                                        "commonAreaPhone",
                                        "autoReceptionist",
                                        "callQueue",
                                        "sharedLineGroup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "custom_hours": {
                                  "items": {
                                    "properties": {
                                      "from": {
                                        "description": "Values:\n \nhh:mm",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "to": {
                                        "description": "Values:\n \nhh:mm",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Values:\n\n1-24 Hours,\n\n2-customized hours",
                                        "enum": [
                                          1,
                                          2
                                        ],
                                        "type": "integer"
                                      },
                                      "weekday": {
                                        "description": "Values: 1-7 sun-sat",
                                        "enum": [
                                          1,
                                          2,
                                          3,
                                          4,
                                          5,
                                          6,
                                          7
                                        ],
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "ring_type": {
                                  "description": "Call Handling Ring Mode:\n\n0-Simultaneous,\n\n1-Sequential",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "type": "string"
                                },
                                "ringing_duration": {
                                  "description": "Ringing Duration for Each Device in seconds. Values:\n\n15,20,25,30,35,40,45,50,55,60",
                                  "enum": [
                                    15,
                                    20,
                                    25,
                                    30,
                                    35,
                                    40,
                                    45,
                                    50,
                                    55,
                                    60
                                  ],
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Values:\n\n1-24 Hours, 7 Days a Week;\n\n2-Custom Hours",
                                  "enum": [
                                    1,
                                    2
                                  ],
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "close_hours": {
                              "properties": {
                                "close_hour_action": {
                                  "description": "Action to take when a call is not answered:\n\n0-Forward to voicemail; \n\n1-Play a message, then disconnect; \n\n9-Disconnect; \n\n26-Forward to External Contacts; \n\n50-Forward to another extension\n",
                                  "enum": [
                                    0,
                                    1,
                                    9,
                                    26,
                                    50
                                  ],
                                  "type": "integer"
                                },
                                "connect_to_operator": {
                                  "description": "Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.",
                                  "properties": {
                                    "enable": {
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "description": "Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Values:\n\n1-user,\n\n2-callQueue, \n\n3-autoReceptionist,\n\n4-commonAreaPhone,\n\n5-zoomRoom, \n\n7-sharedLineGroup",
                                      "enum": [
                                        "user",
                                        "zoomRoom",
                                        "commonAreaPhone",
                                        "autoReceptionist",
                                        "callQueue",
                                        "sharedLineGroup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "max_wait_time": {
                                  "description": "Max Wait Time in seconds. Values:\n\n15,20,25,30,35,40,45,50,55,60",
                                  "enum": [
                                    15,
                                    20,
                                    25,
                                    30,
                                    35,
                                    40,
                                    45,
                                    50,
                                    55,
                                    60
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "desk_phone": {
                          "properties": {
                            "pin_code": {
                              "description": "Pin code.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "hold_music": {
                          "description": "The value of this field can be either `default` or `disable`.\n\n* `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).\n\n* `disable`: This means that the hold music is disabled.",
                          "enum": [
                            "default",
                            "disable"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nOK"
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `404`\n\nSite does not exist. Settings template does not exist: {templateId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Setting Templates"
        ],
        "description": "Use this API to return information about an account's phone template.\n\n**Scopes:** `phone:write:admin` or `phone:write`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "getSettingTemplate",
        "summary": "Get setting template details"
      },
      "patch": {
        "parameters": [
          {
            "description": "The Template ID.",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n\nNo Content. Request was successful."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n**Error Code:** `300`\n\nThe country code you entered is invalid. Provide a valid country code and try again.\n\nThe area code you entered is invalid. Provide a valid area code with a length between 0 to 6 digits and try again.\n\nThe value you entered for the audio prompt language code is invalid.\nPIN code could only include numbers.\n\nInvalid PIN code. PIN code must be {0} digits long.\n\nInvalid PIN code. PIN code must be {0} to {1} digits long.\n\nInvalid PIN code. Your PIN code must not be the same as the extension number.\n\nInvalid PIN code. The PIN code must not contain a group of repeated digits.\n\nPIN code cannot be an ascending or descending group of digits.\nConnect to operator type error.\n\nYou provided an invalid value for call handling ring type. The value of this field must either be “simultaneous” or “sequential”.\n\nYou provided an invalid value for business hours type field. The value of this field must either be 1 or 2.\n\nYou provided an invalid value for the business hours action field.\n\nYou provided an invalid value for the close hours action field.\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\n\nSite does not exist. Settings template does not exist: {templateId}.\nOperator was not found for the following id: {0}.\nExternal contact was not found for the following id: {0}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Setting Templates"
        ],
        "description": "Use this API to update or modify a phone template's settings.\n\n**Scopes:** `phone:write:admin` or `phone:write`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updateSettingTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "The description of the template.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specify the name of the template.",
                    "type": "string"
                  },
                  "policy": {
                    "properties": {
                      "ad_hoc_call_recording": {
                        "properties": {
                          "enable": {
                            "description": "Allow current extension to record and save calls in the cloud.",
                            "type": "boolean"
                          },
                          "recording_start_prompt": {
                            "description": "Play a prompt to call participants when the recording has started.",
                            "type": "boolean"
                          },
                          "recording_transcription": {
                            "description": "Allow call recording transcription.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "auto_call_recording": {
                        "properties": {
                          "enable": {
                            "description": "Automatic call recording.",
                            "type": "boolean"
                          },
                          "recording_calls": {
                            "description": "Values: inbound, outbound, both.",
                            "enum": [
                              "inbound",
                              "outbound",
                              "both"
                            ],
                            "type": "string"
                          },
                          "recording_start_prompt": {
                            "description": "Play a prompt to call participants when the recording has started.",
                            "type": "boolean"
                          },
                          "recording_transcription": {
                            "description": "Allow call recording transcription.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "sms": {
                        "properties": {
                          "enable": {
                            "description": "Allow user to send and receive messages.",
                            "type": "boolean"
                          },
                          "international_sms": {
                            "description": "Whether or not SMS is international.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "voicemail": {
                        "properties": {
                          "allow_transcription": {
                            "description": "Allow voicemail transcription.",
                            "type": "boolean"
                          },
                          "enable": {
                            "description": "Allow current extension to access, receive, or share voicemail.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "profile": {
                    "properties": {
                      "area_code": {
                        "description": "The area code from which the phone account was created.",
                        "type": "string"
                      },
                      "country": {
                        "description": "Name of the country where the template was created.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "user_settings": {
                    "properties": {
                      "audio_prompt_language": {
                        "description": "Audio prompt language code.\n American English: `en-US`\n\nBritish English: `en-GB`\n\nEspañol americano: `es-US`\n\nFrançais canadien: `fr-CA`\n\nDansk: `da-DK`\n\nDeutsch: `de-DE`\n\nEspañol: `es-ES`\n\nFrançais: `fr-FR`\n\nItaliano: `it-IT`\n\nNederlands: `nl-NL`\n\nPortugues portugal: `pt-PT`\n\nJapanese: `ja-JP`\n\nKorean: `ko-KO`\n\nPortugues brasil: `pt-BR`\n\nChinese: `zh-CN`\n\nTaiwanese: `zh-TW`\n",
                        "type": "string"
                      },
                      "block_calls_without_caller_id": {
                        "description": "Block Calls without Caller ID.",
                        "type": "boolean"
                      },
                      "call_handling": {
                        "properties": {
                          "business_hours": {
                            "properties": {
                              "business_hour_action": {
                                "description": "When a call is not answered:\n\n0-Forward to voicemail;\n\n1-Play a message, then disconnect; \n\n9-Disconnect; \n\n26-Forward to External Contacts; \n\n50-Forward to another extension",
                                "enum": [
                                  0,
                                  1,
                                  9,
                                  26,
                                  50
                                ],
                                "type": "integer"
                              },
                              "connect_to_operator": {
                                "description": "Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.",
                                "properties": {
                                  "enable": {
                                    "description": "Enable connect to operator.",
                                    "type": "boolean"
                                  },
                                  "id": {
                                    "description": "Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Values:\n\n1-user,\n\n2-callQueue, \n\n3-autoReceptionist,\n\n4-commonAreaPhone,\n\n5-zoomRoom, \n\n7-sharedLineGroup",
                                    "enum": [
                                      "user",
                                      "zoomRoom",
                                      "commonAreaPhone",
                                      "autoReceptionist",
                                      "callQueue",
                                      "sharedLineGroup"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "custom_hours": {
                                "items": {
                                  "properties": {
                                    "from": {
                                      "description": "Values:\n \nhh:mm",
                                      "format": "time",
                                      "type": "string"
                                    },
                                    "to": {
                                      "description": "Values:\n \nhh:mm",
                                      "format": "time",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Values:\n\n1-24 Hours,\n\n2-customized hours",
                                      "enum": [
                                        1,
                                        2
                                      ],
                                      "type": "integer"
                                    },
                                    "weekday": {
                                      "description": "Values: 1-7 sun-sat",
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ],
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "ring_type": {
                                "description": "Call Handling Ring Mode:\n\n0-Simultaneous,\n\n1-Sequential",
                                "enum": [
                                  0,
                                  1
                                ],
                                "type": "string"
                              },
                              "ringing_duration": {
                                "description": "Ringing Duration for Each Device, in seconds. Values:\n\n15,20,25,30,35,40,45,50,55,60",
                                "enum": [
                                  15,
                                  20,
                                  25,
                                  30,
                                  35,
                                  40,
                                  45,
                                  50,
                                  55,
                                  60
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "Values:\n\n1-24 Hours, 7 Days a Week;\n\n2-Custom Hours",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "close_hours": {
                            "properties": {
                              "close_hour_action": {
                                "description": "Action to take when a call is not answered:\n\n0-Forward to voicemail; \n\n1-Play a message, then disconnect; \n\n9-Disconnect; \n\n26-Forward to External Contacts; \n\n50-Forward to another extension\n",
                                "enum": [
                                  0,
                                  1,
                                  9,
                                  26,
                                  50
                                ],
                                "type": "integer"
                              },
                              "connect_to_operator": {
                                "description": "Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.",
                                "properties": {
                                  "enable": {
                                    "description": "Enable connect to operator.",
                                    "type": "boolean"
                                  },
                                  "id": {
                                    "description": "Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Values:\n\n1-user,\n\n2-callQueue, \n\n3-autoReceptionist,\n\n4-commonAreaPhone,\n\n5-zoomRoom, \n\n7-sharedLineGroup",
                                    "enum": [
                                      "user",
                                      "zoomRoom",
                                      "commonAreaPhone",
                                      "autoReceptionist",
                                      "callQueue",
                                      "sharedLineGroup"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "max_wait_time": {
                                "description": "Maximum wait time, in seconds. Values:\n\n15,20,25,30,35,40,45,50,55,60",
                                "enum": [
                                  15,
                                  20,
                                  25,
                                  30,
                                  35,
                                  40,
                                  45,
                                  50,
                                  55,
                                  60
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "desk_phone": {
                        "properties": {
                          "pin_code": {
                            "description": "Pin code.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hold_music": {
                        "description": "The value of this field can be either `default` or `disable`.\n\n* `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).\n\n* `disable`: This means that the hold music is disabled.",
                        "enum": [
                          "default",
                          "disable"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a setting template"
      }
    },
    "/phone/settings/{accountId}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "byoc": {
                        "enable": true
                      },
                      "country": {
                        "code": "US",
                        "name": "United States"
                      },
                      "multiple_sites": {
                        "enabled": true,
                        "site_code": true
                      },
                      "show_device_ip_for_call_log": {
                        "enable": true
                      }
                    }
                  }
                },
                "schema": {
                  "description": "Zoom Account Setting",
                  "properties": {
                    "byoc": {
                      "description": "BYOC setting",
                      "properties": {
                        "enable": {
                          "description": "BYOC function switch.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "description": "",
                      "properties": {
                        "code": {
                          "description": "Country code.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Country name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "multiple_sites": {
                      "description": "",
                      "properties": {
                        "enabled": {
                          "description": "Multiple sites switch.",
                          "type": "boolean"
                        },
                        "site_code": {
                          "description": "Site code switch.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "show_device_ip_for_call_log": {
                      "properties": {
                        "enable": {
                          "description": "If the value of this field is `true`, then to allow `/phone/call_logs` and `/phone/call_logs/{callLogId}` APIs show `device_public_ip` and `device_private_ip` in response.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \nAccount setting returned. "
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to return an account's settings.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "phoneSetting",
        "summary": "Get phone account settings"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the sub account.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**Response HTTP code**: `204` **No Content.**\n\nUpdated successfully.\n\n"
          },
          "300": {
            "description": "**Error Code**: `300`\n\nThe short extension length is not in the range. The range is [2, 10] if the account's `15-Digit Max Length Extensions` feature is enabled; if not, [2, 5]. Configure this before you set the site code to `true`."
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "412": {
            "description": "**Error Code**: `412`\n\nDisable multiple sites after deleting other sites."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Account owners can use this API to update Zoom Phone [account settings](https://support.zoom.us/hc/en-us/articles/360025846692).\n\n**Scopes:** `phone:write:admin`\n\n**Prerequisites:** \n* A Business or Enterprise account",
        "operationId": "updatePhoneSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "byoc": {
                    "description": "Only [master account owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) can use this MA API to enable BYOC(Bring your own carrier) option for a sub account.\n\n**Scope**: `phone:master` \n\n\n**Prerequisites**: \n\n* Business or enterprise Account.\n",
                    "properties": {
                      "enable": {
                        "description": "Set the value of this field to `true` to allow a sub account to add BYOC numbers from the Zoom web admin portal.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "multiple_sites": {
                    "properties": {
                      "enabled": {
                        "description": "Set the value to `true` for [site management](https://support.zoom.us/hc/en-us/articles/360020809672). Once enabled, your current site will default to your Main Site.",
                        "type": "boolean"
                      },
                      "site_code": {
                        "properties": {
                          "enable": {
                            "description": "Enable multiples sites before you can set this value `true`.",
                            "type": "boolean"
                          },
                          "short_extension_length": {
                            "description": "Configure this field before you set the site code to `true`. The range is [2, 10] if the account's `15-Digit Max Length Extensions` feature is enabled; if not, [2, 5].",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "show_device_ip_for_call_log": {
                    "properties": {
                      "enable": {
                        "description": "Set the value of this field to `true` to allow `/phone/call_logs` and `/phone/call_logs/{callLogId}` APIs show `device_public_ip` and `device_private_ip` in response.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update phone account settings"
      }
    },
    "/phone/shared_line_groups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "hkdsfghdj3hef",
                      "page_size": 30,
                      "shared_line_groups": [
                        {
                          "display_name": "Test Shared Line Group",
                          "extension_number": 123,
                          "id": "sdgfhdser83velit",
                          "phone_numbers": [
                            {
                              "id": "min4glt",
                              "number": "46835635784",
                              "status": "available"
                            }
                          ],
                          "site": {
                            "id": "dgfgfgh433",
                            "name": "San Jose Site"
                          },
                          "status": "active"
                        }
                      ],
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The number of records returned within a single API call.",
                      "maximum": 300,
                      "type": "integer"
                    },
                    "shared_line_groups": {
                      "items": {
                        "properties": {
                          "display_name": {
                            "description": "Display Name of the Shared Line Group.",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "Extension number assigned to the Shared Line Group.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Unique identifier of the Shared Line Group.",
                            "type": "string"
                          },
                          "phone_numbers": {
                            "description": "Phone Numbers Assigned to the Shared Line Group.",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Unique identifier of the phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "Phone number in E164 format.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Status of the number.",
                                  "enum": [
                                    "pending",
                                    "available"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/getASite).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the Site.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Status of the Shared Line Group.",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "Total records found in the response for this request.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK** \n\nShared Line Groups returned."
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to list all the Shared Line Groups.\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges  \n\n\n**Scopes:** `phone:read:admin`, `phone:write:admin`\n\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listSharedLineGroups",
        "summary": "List shared line groups"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `200` **OK** \n\nShared Line Group created successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** \n\n**Error Code:** `300` **Validation Failed** \n\n* Multiple Site has not been enabled for this account.\n\n* Site does not exist. \n\n\n**Error Code:** `400` \n\nExtension number {extensionNumber} is already used.\n\n\n**Error Code:** `409` \n\nInvalid short number length. \n\nNumber {extensionNumber} is a reserved extension number.\n\n\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Shared Line Group"
        ],
        "description": "A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to create a shared line group.\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "createASharedLineGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Provide a description for the shared line group.",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Provide a name to help identify the shared line group.",
                    "maxLength": 200,
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Extension number to be assigned to the shared line group. If a [site code has been assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number ",
                    "type": "integer"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the shared line group. You will only be able to add members that belong to this site to the shared line group.\n\nThis field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.",
                    "type": "string"
                  }
                },
                "required": [
                  "display_name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create a shared line group"
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the shared line group that you would like to delete.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content** \n\nShared Line Group Deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** \n\n**Error Code:** `300` **Validation Failed.**\n\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n\n"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. Use this API to delete a Shared Line Group. \n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteASharedLineGroup",
        "summary": "Delete a shared line group"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the Shared Line Group.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "display_name": "Bay Area Shared Line Group",
                      "extension_number": 123,
                      "id": "jsehdfrrg4",
                      "members": {
                        "common_area_phones": [
                          {
                            "id": "eu34gcogfft5nsectetur",
                            "name": "Lobby Phone"
                          }
                        ],
                        "users": [
                          {
                            "id": "gdfsx57ytcfgg",
                            "name": "ipsum reprehenderit"
                          },
                          {
                            "id": "nisi3t5hgvsed",
                            "name": "dolore sed"
                          }
                        ]
                      },
                      "phone_numbers": [
                        {
                          "id": "dsfdg3r",
                          "number": "1365435426"
                        },
                        {
                          "id": "hfgdcfhjj",
                          "number": "5673856375"
                        }
                      ],
                      "primary_number": "5673856375",
                      "site": {
                        "id": "dhfdhsf4",
                        "name": "Engineering Site"
                      },
                      "status": "active",
                      "timezone": "America/Los_Angeles"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "display_name": {
                      "description": "Display Name of the Shared Line Group.",
                      "type": "string"
                    },
                    "extension_number": {
                      "description": "Extension number assigned to the Shared Line Group.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Unique identifier of the Shared Line Group.",
                      "type": "string"
                    },
                    "members": {
                      "description": "View current [members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_3ffbbb77-a009-4c09-91e4-81fc264b61d6) of the shared line group.",
                      "properties": {
                        "common_area_phones": {
                          "description": "[Common Area Phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) that are members of the shared line group.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). ",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). ",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "users": {
                          "description": "Users who are members of the Shared Line Group.",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the user.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "phone_numbers": {
                      "description": "Object representing information about phone number(s) assigned to the group.",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the phone number.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number in E164 format.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "primary_number": {
                      "description": "If you have multiple direct phone numbers assigned to the shared line group, this is the primary number selected for desk phones. The primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used.",
                      "type": "string"
                    },
                    "site": {
                      "description": "Site assigned to the Shared Line Group.",
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/getASite).",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the Site.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the Shared Line Group.",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "type": "string"
                    },
                    "timezone": {
                      "description": "Timezone used for the Business Hours.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to list all the Shared Line Groups.\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n**Scopes:** `phone:read:admin` or `phone:write:admin`\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getASharedLineGroup",
        "summary": "Get a shared line group"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the shared line group that is to be updated.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content** \n\nShared Line Group Updated Successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** \n\n**Error Code:** `300` **Validation Failed** \n\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n* Timezone not found in the system.\n\n\n**Error Code:** `409` \n\n* Invalid short number length.\n\n* Number {extensionNumber} is a reserved extension number.\n\n\n**Error Code:** `400` \n\nExtension number {extensionNumber} is already used.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** \n\n* No phone numbers have been assigned to this Shared Line Group.\n\n* Primary phone number was not found in the list of numbers assigned to this Shared Line Group.\n\n"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to update information of a Shared Line Group. \n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateASharedLineGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "display_name": {
                    "description": "Display Name of the Shared Line Group.",
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "Extension number assigned to the Shared Line Group.",
                    "type": "integer"
                  },
                  "primary_number": {
                    "description": "If you have multiple direct phone numbers assigned to the shared line group, select a number from those numbers as the primary number. The primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used. A pending number cannot be used as a Primary Number.",
                    "properties": {
                      "id": {
                        "description": "Phone Number ID. Unique identifier of the Phone Number.",
                        "type": "string"
                      },
                      "number": {
                        "description": "Phone Number that you would like to assign as the primary number for this Shared Line Group.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "description": "Status of the Shared Line Group.",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "type": "string"
                  },
                  "timezone": {
                    "description": "Timezone to be used for the Business Hours. A value should be provided from the IDs listed [here](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update a shared line group"
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}/members": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the Shared Line Group that you would like to delete.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nMembers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed**\n\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "Members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) have access to the group's phone number and voicemail. Use this API to unassign **all** existing members from a Shared Line Group.\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n**Scopes:** `phone:write:admin`\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteMembersOfSLG",
        "summary": "Unassign members from a shared line group"
      },
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the shared line group.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `201` **Created** \nMembers added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request** \n\nMembers of a shared line group should come from same site.\n\nA shared line group can only contain {0} members at most.\n\n\n**Error Code:** `300` **Validation Failed**\n\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found** \n\nDevice does not exist in the system.\n\n**Error Code:** `1001`\n\nUser not found: {userId}.\n\n\n"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to [add members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_7cb42370-48f6-4a8f-84f4-c6eee4d9f0ca) to a Shared Line Group. Note that a member can only be added to one shared line group. \n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addMembersToSharedLineGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "Members can comprise of users on the account as well as common area phones. You can add a maximum of 10 members at once.",
                    "properties": {
                      "common_area_phone_ids": {
                        "description": "Unique identifier(s) of the Common Area Phone. ",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "users": {
                        "description": "Zoom Phone users on the account.",
                        "items": {
                          "properties": {
                            "email": {
                              "description": "Email address of the user.",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifier of the user.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add members to a shared line group"
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}/members/{memberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the shared line group from which you would like to remove a member.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the member who is to be removed.",
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nMembers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed**\n\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "Members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) have access to the group's phone number and voicemail. Use this API to unassign **a specific member** from a Shared Line Group.\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n**Scopes:** `phone:write:admin`\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteAMemberSLG",
        "summary": "Unassign a member from a shared line group"
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}/phone_numbers": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the Shared Line Group.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone Numbers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPhone number does not exist\n\n\n**Error Code:** `300` **Validation Failed.**\n\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124`\nPhone number does not belong to this account"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "Use this API to unassign all the phone numbers that have been assigned to the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n**Scopes:** `phone:write:admin`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deletePhoneNumbersSLG",
        "summary": "Unassign all phone numbers",
        "x-private": false
      },
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the Shared Line Group.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nPhone number(s) assigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPhone number does not exist\n\n\n**Error Code:** `300` **Validation Failed.**\n\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124`\nPhone number does not belong to this account"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "Use this API to assign phone numbers to a shared line groups. These direct phone numbers will be shared among members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n**Scopes:** `phone:write:admin`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignPhoneNumbersSLG",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "description": "Phone number(s) to be assigned to the Shared Line Group.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "Unique identifier of the phone number.",
                          "type": "string"
                        },
                        "number": {
                          "description": "Phone number.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign phone numbers"
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the shared line group from which you would like to unassign a phone number.",
            "in": "path",
            "name": "sharedLineGroupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the phone number which is to be unassigned. This can be retrieved from Get a Shared Line Group API.",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone Numbers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `400`\n\nPhone number does not exist\n\n\n**Error Code:** `300` **Validation Failed.**\n\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124`\nPhone number does not belong to this account"
          }
        },
        "tags": [
          "Shared Line Group"
        ],
        "description": "Use this API to unassign a specific phone number that was assigned to the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n**Scopes:** `phone:write:admin`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteAPhoneNumberSLG",
        "summary": "Unassign a phone number"
      }
    },
    "/phone/sip_groups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "sdfafdsa12fa_fasfdacc",
                      "page_size": 1,
                      "sip_groups": [
                        {
                          "description": "SIP Group 1",
                          "display_name": "sip_group_01",
                          "id": "dddMfX_eRLqrYCHnntfdJA",
                          "send_sip_group_name": false,
                          "sip_trunk": {
                            "id": "VWQU-veBQnm08EtBkUGnbw",
                            "name": "SIPAPI01"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned with a single API call.",
                      "type": "integer"
                    },
                    "sip_groups": {
                      "description": "SIP group information.",
                      "items": {
                        "properties": {
                          "description": {
                            "description": "The SIP group's description.",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "The SIP group's display name.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The SIP group's ID.",
                            "type": "string"
                          },
                          "send_sip_group_name": {
                            "description": "Whether the SIP group's name is sent in the SIP header.",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "boolean"
                          },
                          "sip_trunk": {
                            "description": "The SIP trunk group.",
                            "properties": {
                              "id": {
                                "description": "The SIP trunk group's ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The SIP trunk group's name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nSIP groups successfully listed."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to list SIP (Session Initiation Protocol) groups.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions",
        "operationId": "listSipGroups",
        "summary": "List SIP groups"
      }
    },
    "/phone/sip_trunk/trunks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "byoc_sip_trunk": [
                        {
                          "carrier": "my_carrierr",
                          "carrier_account": "dsgf63tt",
                          "id": "con3t6gdt",
                          "name": "Test 12",
                          "region": "US",
                          "sbc_label": "abc-test"
                        }
                      ],
                      "next_page_token": " ",
                      "page_size": "30"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "byoc_sip_trunk": {
                      "items": {
                        "properties": {
                          "carrier": {
                            "description": "Name of the carrier.",
                            "type": "string"
                          },
                          "carrier_account": {
                            "description": "The account associated to the carrier.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The unique SIP Trunk ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The display name of the SIP Trunk.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The region of the carrier.",
                            "type": "string"
                          },
                          "sbc_label": {
                            "description": "The Session Border Controller (SBC) routing label.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page_token": {
                      "description": "Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is **15 minutes**.",
                      "type": "string"
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The number of records returned within a single API call. The default is **30**, and the maximum is **100**.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Codes**: `200`\n\nOK."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Settings"
        ],
        "description": "Use this API to return a list of an account's assigned [BYOC (Bring Your Own Carrier) SIP (Session Initiation Protocol) trunks](https://zoom.us/docs/doc/Zoom-Bring%20Your%20Own%20Carrier.pdf).\n\n**Scopes:** `phone:write:admin` or `phone:master`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account",
        "operationId": "listBYOCSIPTrunk",
        "summary": "List BYOC SIP trunks"
      }
    },
    "/phone/sites": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "",
                      "page_size": 30,
                      "sites": [
                        {
                          "country": {
                            "code": "KR",
                            "country_code": null,
                            "name": "Korea (Republic of)"
                          },
                          "id": "kH8nyUGS3-aY7IKwvmWIw",
                          "level": "normal",
                          "main_auto_receptionist": {
                            "extension_id": "umnGw8fQLeHUF1hRnHsTQ",
                            "extension_number": 135001,
                            "id": "Eev3V2RSSqSvENxxXOTOA",
                            "name": "Minnie"
                          },
                          "name": "Branch",
                          "site_code": 135
                        },
                        {
                          "country": {
                            "code": "US",
                            "country_code": null,
                            "name": "United States"
                          },
                          "id": "GNO-CItXQaGhq3qfPD1kg",
                          "level": "main",
                          "main_auto_receptionist": {
                            "extension_id": "gWNzsGmQoSTlcKOspAS3g",
                            "extension_number": 100002,
                            "id": "DOIpOsNkTgaUTsuWtZRrw",
                            "name": "Main Auto Receptionist"
                          },
                          "name": "Main Site",
                          "site_code": 1
                        },
                        {
                          "country": {
                            "code": "US",
                            "country_code": null,
                            "name": "United States"
                          },
                          "id": "uAKXLmxuT8K55YWu5nkZVA",
                          "level": "normal",
                          "main_auto_receptionist": {
                            "extension_id": "0W6a5TkTK-bnil9seOu-A",
                            "extension_number": 123001,
                            "id": "B9u7OBuPRA6wmIQipVwjg",
                            "name": "Benan"
                          },
                          "name": "San Jose Site",
                          "site_code": 123
                        },
                        {
                          "country": {
                            "code": "KR",
                            "country_code": null,
                            "name": "Korea (Republic of)"
                          },
                          "id": "Dl72XapSc2ClAq1wFZU7A",
                          "level": "normal",
                          "main_auto_receptionist": {
                            "extension_id": "kRIT7TeTOaHOIy8gJA6_w",
                            "extension_number": 220001,
                            "id": "5oqSCqdQHeIxUnIiRurWQ",
                            "name": "Test auto receptionist"
                          },
                          "name": "Test site",
                          "site_code": 22
                        }
                      ],
                      "total_records": 4
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call.",
                      "type": "integer"
                    },
                    "sites": {
                      "description": "List of site(s).",
                      "items": {
                        "properties": {
                          "country": {
                            "description": "Site country",
                            "properties": {
                              "code": {
                                "description": "Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the country.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "Site ID. Unique identifier of the site.",
                            "type": "string"
                          },
                          "main_auto_receptionist": {
                            "description": "Auto Receptionist for each site.",
                            "properties": {
                              "extension_id": {
                                "description": "Extension ID",
                                "type": "string"
                              },
                              "extension_number": {
                                "description": "Extension number",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the auto receptionist.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "name": {
                            "description": "Name of the site.",
                            "type": "string"
                          },
                          "site_code": {
                            "description": "Site Code",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total_records": {
                      "description": "Total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Site"
        ],
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to list all the [sites](https://support.zoom.us/hc/en-us/articles/360020809672) that have been created for an account.<br>\n**Prerequisites:**<br>\n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n* Pro or a higher account with Zoom Phone enabled.\n\n\n**Scope:** `phone:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listPhoneSites",
        "summary": "List phone sites"
      },
      "post": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "ingjgjfhi",
                      "name": "San Jose Site"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Site ID: Unique identifier of a site.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the site.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSite created successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nInvalid site code length.<br>\nCountry information is invalid.<br>\nThis address could not be validated / geocoded."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Site"
        ],
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to create a [Site](https://support.zoom.us/hc/en-us/articles/360020809672).<br>\n**Prerequisites:**<br>\n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n* Pro or a higher account with Zoom Phone enabled.\n\n**Scope:** `phone:write:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "createPhoneSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "auto_receptionist_name": {
                    "description": "Display name of the [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-) for the site.",
                    "type": "string"
                  },
                  "default_emergency_address": {
                    "properties": {
                      "address_line1": {
                        "description": "Address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of the house number and street name.",
                        "type": "string"
                      },
                      "address_line2": {
                        "description": "Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of building number, floor number, unit and others",
                        "type": "string"
                      },
                      "city": {
                        "description": "City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "type": "string"
                      },
                      "country": {
                        "description": "Two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "maxLength": 2,
                        "minLength": 2,
                        "type": "string"
                      },
                      "state_code": {
                        "description": "State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "type": "string"
                      },
                      "zip": {
                        "description": "Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "type": "string"
                      }
                    },
                    "required": [
                      "country",
                      "address_line1",
                      "city",
                      "zip",
                      "state_code"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "description": "Name of the site.",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  },
                  "short_extension": {
                    "description": "Short extension of the phone site.",
                    "properties": {
                      "length": {
                        "default": 3,
                        "description": "Specify the length of short extension numbers for the site.\n\nSince there is a default 6-digit limit on extensions, the short extension can be 2 to 5 digits and the length of site code added to the length of short extension can not exceed a value of `6` (i.e., length of `site_code`+ length of `short_extension` should always be less than or equal to 6).",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "site_code": {
                    "description": "Identifier for a site. If site code is enabled, this field is required.\n\n",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "auto_receptionist_name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create a phone site"
      }
    },
    "/phone/sites/{siteId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the site.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Site ID of another site where the assets of the current site (users, numbers and phones) can be transferred to.",
            "in": "query",
            "name": "transfer_site_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`<br>\nSite deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nUnable to transfer to the same site.<br>\nMain company number can not change {phoneNumber}.<br>\nSite does not exist."
          },
          "409": {
            "description": "**HTTP Status Code:** `409` **Conflict**<br><br>\n**Error Code:** `409`<br>\nConflict target extension number, try later."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Site"
        ],
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to delete a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) in a Zoom account. To delete a site, in the query parameter, you must provide the Site ID of another site where the assets of current site (users, numbers and phones) can be transferred to.  You cannot use this API to delete the main site.\n\n**Prerequisites:** \n* Account must have a Pro or a higher plan with Zoom Phone license. \n* [Multiple Sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) must be enabled.\n\n**Scope:** `phone:write:admin` \n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "deletePhoneSite",
        "summary": "Delete a phone site"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the site.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "CEfghfghhWA",
                      "main_auto_receptionist": {
                        "extension_id": "E6Khfghgfr8A",
                        "extension_number": 10801,
                        "id": "NMyfgfhghhsVg",
                        "name": "Main Auto Receptionist"
                      },
                      "name": "Main Site",
                      "site_code": 10
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "country": {
                      "description": "Site country",
                      "properties": {
                        "code": {
                          "description": "Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the country.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "Site ID. Unique identifier of the site.",
                      "type": "string"
                    },
                    "main_auto_receptionist": {
                      "description": "[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site.",
                      "properties": {
                        "extension_id": {
                          "description": "Extension ID",
                          "type": "string"
                        },
                        "extension_number": {
                          "description": "Extension number",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Unique identifier of the Auto Receptionist.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the auto receptionist.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "description": "Name of the site.",
                      "type": "string"
                    },
                    "short_extension": {
                      "description": "Short extension of the phone site.",
                      "properties": {
                        "length": {
                          "default": 3,
                          "description": "The length of short extension number for the site.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "site_code": {
                      "description": "[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSite information retrieved successfully."
          },
          "400": {
            "description": "**Error Code:** `400`<br>\nSite does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Site"
        ],
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to get information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).\n\n**Prerequisites:** <br>\n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n\n**Scope:** `phone:read:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getASite",
        "summary": "Get phone site details"
      },
      "patch": {
        "parameters": [
          {
            "description": "Unique identifier of the site.",
            "in": "path",
            "name": "siteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**<br>\nSite details updated successfully."
          },
          "400": {
            "description": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Site does not exist.<br><br>\n**Error Code:** `400`<br>\nSite Code is disabled.<br>\nInvalid site code length."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Site"
        ],
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to update information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).\n\n**Prerequisites:** <br>\n* Account must have a Pro or a higher plan with Zoom Phone license.\n\n **Scope:** `phone:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId": "updateSiteDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name of the site.",
                    "type": "string"
                  },
                  "site_code": {
                    "description": "[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update phone site details"
      }
    },
    "/phone/sms/sessions": {
      "get": {
        "parameters": [
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1phone~1recordings/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "description": "Either the sender's or receiver's phone number, to limit the list of SMS sessions.",
            "in": "query",
            "name": "phone_number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "123rty456uio",
                      "page_size": 30,
                      "sms_sessions": [
                        {
                          "last_access_time": "2021-04-01T10:00:00Z",
                          "participants": [
                            {
                              "display_name": "name",
                              "phone_number": "+1234567890"
                            }
                          ],
                          "session_id": "mcfl89er03po"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The size of each page.",
                      "type": "integer"
                    },
                    "sms_sessions": {
                      "items": {
                        "properties": {
                          "last_access_time": {
                            "description": "The last send or receive time in UTC.",
                            "format": "date",
                            "type": "string"
                          },
                          "participants": {
                            "description": "The SMS members.",
                            "items": {
                              "properties": {
                                "display_name": {
                                  "description": "The participant name.",
                                  "type": "string"
                                },
                                "owner": {
                                  "properties": {
                                    "id": {
                                      "description": "The owner ID.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "commonAreaPhone",
                                        "sharedLineGroup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "phone_number": {
                                  "description": "The participant phone number.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "session_id": {
                            "description": "The SMS session ID.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n\n**Error Code:** `7012`\n\nError retrieving SMS"
          }
        },
        "tags": [
          "SMS"
        ],
        "description": "Get details about SMS sessions for an account.\n\n**Scopes:** `phone_sms:read:admin`, `phone_sms:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n",
        "operationId": "accountSmsSession",
        "summary": "Get account's SMS sessions",
        "x-private": false
      }
    },
    "/phone/sms/sessions/{sessionId}": {
      "get": {
        "parameters": [
          {
            "description": "SMS session ID.",
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1phone~1recordings/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "description": "Order of SMS to return based on creation time. `1`: ascending `2`: descending",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "123rty456uio",
                      "page_size": 30,
                      "sms_histories": [
                        {
                          "attachments": [
                            {
                              "download_url": "https://www.example.com/file_name.gif",
                              "id": "ttllslww",
                              "name": "file_name",
                              "size": 1254,
                              "type": "GIF"
                            }
                          ],
                          "date_time": "2021-04-01T10:00:00Z",
                          "message": "hello world",
                          "message_id": "334k4kds",
                          "message_type": 2,
                          "sender": {
                            "display_name": "name",
                            "phone_number": "+1234567890"
                          },
                          "to_members": [
                            {
                              "phone_number": "+1115557890"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The size of the page.",
                      "type": "integer"
                    },
                    "sms_histories": {
                      "items": {
                        "properties": {
                          "attachments": {
                            "items": {
                              "properties": {
                                "download_url": {
                                  "description": "The download link for the media file.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The media file ID.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The file name.",
                                  "type": "string"
                                },
                                "size": {
                                  "description": "The file size.",
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO",
                                  "enum": [
                                    "OTHER",
                                    "PNG",
                                    "GIF",
                                    "JPG",
                                    "AUDIO",
                                    "VIDEO"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "date_time": {
                            "description": "The UTC time the message was created.",
                            "format": "date",
                            "type": "string"
                          },
                          "direction": {
                            "description": "In or Out",
                            "type": "string"
                          },
                          "message": {
                            "description": "The SMS text contents.",
                            "type": "string"
                          },
                          "message_id": {
                            "description": "The message ID.",
                            "type": "string"
                          },
                          "message_type": {
                            "description": "The message type:\n\n1 - SMS\n\n2 - MMS\n\n3 - GROUP_SMS\n\n4 - GROUP_MMS\n\n5 - SMS_INTER\n\n6 - MSG_ON_NET",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "sender": {
                            "properties": {
                              "display_name": {
                                "description": "Sender's name.",
                                "type": "string"
                              },
                              "owner": {
                                "properties": {
                                  "id": {
                                    "description": "The owner ID.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                                    "enum": [
                                      "user",
                                      "callQueue",
                                      "autoReceptionist",
                                      "commonAreaPhone",
                                      "sharedLineGroup"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "phone_number": {
                                "description": "Sender's phone number.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "phone_number"
                            ],
                            "type": "object"
                          },
                          "to_members": {
                            "items": {
                              "properties": {
                                "display_name": {
                                  "description": "The participant name.",
                                  "type": "string"
                                },
                                "owner": {
                                  "properties": {
                                    "id": {
                                      "description": "The owner ID.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "commonAreaPhone",
                                        "sharedLineGroup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "phone_number": {
                                  "description": "Receiver's phone number.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "phone_number"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\nNot found\n\n**Error Code:** `1001`\n\nSession does not exist: {sessionId}.\n\n**Error Code:** `7013`\n\nError retrieving SMS history."
          }
        },
        "tags": [
          "SMS"
        ],
        "description": "Get details about an SMS session.\n\n**Scopes:** `phone_sms:read`, `phone_sms:read:admin`, `phone_sms:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n",
        "operationId": "smsSessionDetails",
        "summary": "Get SMS session details",
        "x-private": false
      }
    },
    "/phone/sms/sessions/{sessionId}/messages/{messageId}": {
      "get": {
        "parameters": [
          {
            "description": "The SMS session ID.",
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SMS message ID.",
            "in": "path",
            "name": "messageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "attachments": [
                        {
                          "download_url": "https://www.example.com/file_name.gif",
                          "id": "ttllslww",
                          "name": "file_name",
                          "size": 1254,
                          "type": "GIF"
                        }
                      ],
                      "date_time": "2021-04-01T10:00:00Z",
                      "message": "hello world",
                      "message_id": "334k4kds",
                      "message_type": 2,
                      "sender": {
                        "display_name": "name",
                        "phone_number": "+1234567890"
                      },
                      "to_members": [
                        {
                          "phone_number": "+1115557890"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "attachments": {
                      "items": {
                        "properties": {
                          "download_url": {
                            "description": "The download link for the media file.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The media file ID.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The file name.",
                            "type": "string"
                          },
                          "size": {
                            "description": "The file size.",
                            "type": "integer"
                          },
                          "type": {
                            "description": "The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO",
                            "enum": [
                              "OTHER",
                              "PNG",
                              "GIF",
                              "JPG",
                              "AUDIO",
                              "VIDEO"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "date_time": {
                      "description": "The UTC time the message was created.",
                      "format": "date",
                      "type": "string"
                    },
                    "direction": {
                      "description": "In or Out",
                      "type": "string"
                    },
                    "message": {
                      "description": "The SMS text contents.",
                      "type": "string"
                    },
                    "message_id": {
                      "description": "The message ID.",
                      "type": "string"
                    },
                    "message_type": {
                      "description": "The message type:\n\n1 - SMS\n\n2 - MMS\n\n3 - GROUP_SMS\n\n4 - GROUP_MMS\n\n5 - SMS_INTER\n\n6 - MSG_ON_NET",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "sender": {
                      "properties": {
                        "display_name": {
                          "description": "Sender's name.",
                          "type": "string"
                        },
                        "owner": {
                          "properties": {
                            "id": {
                              "description": "The owner ID.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                              "enum": [
                                "user",
                                "callQueue",
                                "autoReceptionist",
                                "commonAreaPhone",
                                "sharedLineGroup"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "phone_number": {
                          "description": "Sender's phone number.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "phone_number"
                      ],
                      "type": "object"
                    },
                    "to_members": {
                      "items": {
                        "properties": {
                          "display_name": {
                            "description": "The participant name.",
                            "type": "string"
                          },
                          "owner": {
                            "properties": {
                              "id": {
                                "description": "The owner ID.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonAreaPhone",
                                  "sharedLineGroup"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "phone_number": {
                            "description": "Receiver's phone number.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "phone_number"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          }
        },
        "tags": [
          "SMS"
        ],
        "description": "Get details about a specific message in an SMS session.\n\n**Scopes:** `phone_sms:read`, `phone_sms:read:admin`, `phone_sms:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n",
        "operationId": "smsByMessageId",
        "summary": "Get SMS by message ID",
        "x-private": false
      }
    },
    "/phone/users": {
      "get": {
        "parameters": [
          {
            "description": "The number of records returned from a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Unique identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "",
                      "page_size": 30,
                      "total_records": 1,
                      "users": [
                        {
                          "calling_plans": [
                            {
                              "name": "US/CA Unlimited Calling Plan",
                              "type": 200
                            }
                          ],
                          "email": "example@example.com",
                          "extension_id": "YhH4QZ8bTPG7iymTUdj-bQ",
                          "extension_number": 10000,
                          "id": "z8ghgfh8uQ",
                          "name": "Shri Shri",
                          "phone_user_id": "EMhghghg5w",
                          "site": {
                            "id": "CESEpjWwT-upVH7kt_ixWA",
                            "name": "Main Site"
                          },
                          "status": "activate"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_size": {
                      "default": 30,
                      "description": "The number of records returned from a single API call.",
                      "maximum": 300,
                      "type": "integer"
                    },
                    "total_records": {
                      "description": "The total records found for this query.",
                      "type": "integer"
                    },
                    "users": {
                      "items": {
                        "properties": {
                          "calling_plans": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the calling plan that user is enrolled in.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of calling plan that user is enrolled in.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "email": {
                            "description": "Email address of the user.",
                            "format": "email",
                            "type": "string"
                          },
                          "extension_id": {
                            "description": "Extension ID.",
                            "type": "string"
                          },
                          "extension_number": {
                            "description": "Extension number assigned to the user's Zoom phone number.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Unique identifier of the user (userId).",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the user.",
                            "type": "string"
                          },
                          "phone_user_id": {
                            "description": "Zoom Phone Identifier of the user.",
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Displays the status of the user's Zoom Phone license. The value can be either of the following:\n\n`activate`: Active Zoom phone user.\n\n`deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nPhone users retrieved successfully."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to return a list of all of an account's users who are assigned a Zoom Phone license.\n\n**Scopes:** `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license",
        "operationId": "listPhoneUsers",
        "summary": "List phone users"
      }
    },
    "/phone/users/{userId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "calling_plans": [
                        {
                          "type": 200
                        }
                      ],
                      "cost_center": "testCostCenter",
                      "department": "testDepartment",
                      "email": "example@example.com",
                      "emergency_address": {
                        "address_line1": "100 Awesome St",
                        "address_line2": "Unit 5",
                        "city": "San Jose",
                        "country": "US",
                        "id": "sbcjijvnewcmkceoin",
                        "state_code": "CA",
                        "zip": "95113"
                      },
                      "extension_id": "YhH4QZ8bTPG7iymTUdj-bQ",
                      "extension_number": 100100,
                      "id": "fdjbgdfgkl0-ibkdjfg20913",
                      "phone_numbers": [
                        {
                          "id": "vigfkjnrtUernketg09",
                          "number": "+1234567890"
                        }
                      ],
                      "phone_user_id": "vfjbdlgrwi902_igr",
                      "policy": {
                        "ad_hoc_call_recording": {
                          "enable": true,
                          "recording_start_prompt": true,
                          "recording_transcription": true
                        },
                        "auto_call_recording": {
                          "allow_stop_resume_recording": true,
                          "disconnect_on_recording_failure": true,
                          "enable": true,
                          "locked": true,
                          "locked_by": "site",
                          "recording_calls": "both",
                          "recording_explicit_consent": true,
                          "recording_start_prompt": true,
                          "recording_transcription": true
                        },
                        "call_overflow": {
                          "call_overflow_type": 1,
                          "enable": true
                        },
                        "call_park": {
                          "call_not_picked_up_action": 50,
                          "enable": true,
                          "expiration_period": 3,
                          "forward_to": {
                            "display_name": "Test_add_01",
                            "extension_id": "OJGi5xOFQPmrJbKg68-iWg",
                            "extension_number": "17000017002",
                            "extension_type": "user",
                            "id": "1"
                          }
                        },
                        "call_transferring": {
                          "enable": false
                        },
                        "delegation": true,
                        "elevate_to_meeting": true,
                        "emergency_address_management": {
                          "enable": true,
                          "prompt_default_address": true
                        },
                        "emergency_calls_to_psap": false,
                        "forwarding_to_external_numbers": false,
                        "hand_off_to_room": {
                          "enable": true,
                          "locked": true,
                          "locked_by": "site"
                        },
                        "international_calling": false,
                        "mobile_switch_to_carrier": {
                          "enable": true,
                          "locked": true,
                          "locked_by": "site"
                        },
                        "select_outbound_caller_id": {
                          "enable": true,
                          "locked": true,
                          "locked_by": "site"
                        },
                        "sms": {
                          "enable": true,
                          "international_sms": true,
                          "international_sms_countries": [
                            "US",
                            "CA"
                          ]
                        },
                        "voicemail": {
                          "allow_delete": true,
                          "allow_download": true,
                          "allow_transcription": false,
                          "allow_videomail": true,
                          "enable": true
                        },
                        "voicemail_access_members": [
                          {
                            "access_user_id": "VUg0tbh2RjqF8nPeEhL",
                            "allow_delete": true,
                            "allow_download": true
                          }
                        ],
                        "zoom_phone_on_mobile": {
                          "allow_calling_sms_mms": true,
                          "enable": true,
                          "locked": false
                        }
                      },
                      "site_id": "aXb1039sdjhhgdbgj4",
                      "status": "activate"
                    }
                  }
                },
                "schema": {
                  "description": "Zoom User Profile",
                  "properties": {
                    "calling_plans": {
                      "description": "Calling Plan of the user",
                      "items": {
                        "properties": {
                          "type": {
                            "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan. ",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "cost_center": {
                      "description": "Cost center name.",
                      "type": "string"
                    },
                    "department": {
                      "description": "Department name.",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address of the user.",
                      "type": "string"
                    },
                    "emergency_address": {
                      "properties": {
                        "address_line1": {
                          "description": "Address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of the house number and street name.",
                          "type": "string"
                        },
                        "address_line2": {
                          "description": "Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of building number, floor number, unit and others",
                          "type": "string"
                        },
                        "city": {
                          "description": "City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "type": "string"
                        },
                        "country": {
                          "description": "Two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "id": {
                          "description": "The emergency address ID.",
                          "type": "string"
                        },
                        "state_code": {
                          "description": "State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "type": "string"
                        },
                        "zip": {
                          "description": "Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "extension_id": {
                      "description": "Extension ID.",
                      "type": "string"
                    },
                    "extension_number": {
                      "description": "Extension number",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Zoom User Id.",
                      "type": "string"
                    },
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Phone Number Id",
                            "type": "string"
                          },
                          "number": {
                            "description": "Phone number",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "phone_user_id": {
                      "description": "Zoom Phone User Id.",
                      "type": "string"
                    },
                    "policy": {
                      "description": "A list of the user's policies. Policies are exceptions to the user's calling plan restrictions.",
                      "properties": {
                        "ad_hoc_call_recording": {
                          "description": "A list of ad hoc call recording settings.",
                          "properties": {
                            "enable": {
                              "description": "Whether the current extension can record and save calls to the cloud.",
                              "type": "boolean"
                            },
                            "recording_start_prompt": {
                              "description": "Whether a prompt plays to call participants when the recording has started.",
                              "type": "boolean"
                            },
                            "recording_transcription": {
                              "description": "Whether call recording transcription is enabled.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "auto_call_recording": {
                          "description": "A list of the user's automatic call recording settings.",
                          "properties": {
                            "allow_stop_resume_recording": {
                              "description": "Whether the stop of and resuming of automatic call recording is enabled.",
                              "type": "boolean"
                            },
                            "disconnect_on_recording_failure": {
                              "description": "Whether a call disconnects when there is an issue with automatic call recording and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                              "type": "boolean"
                            },
                            "enable": {
                              "description": "Whether automatic call recording is enabled.",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allow users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            },
                            "recording_calls": {
                              "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                              "enum": [
                                "inbound",
                                "outbound",
                                "both"
                              ],
                              "type": "string"
                            },
                            "recording_explicit_consent": {
                              "description": "Whether press 1 to provide recording consent is enabled.",
                              "type": "boolean"
                            },
                            "recording_start_prompt": {
                              "description": "Whether a prompt plays to call participants when the recording has started.",
                              "type": "boolean"
                            },
                            "recording_transcription": {
                              "description": "Whether call recording transcription is enabled.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "call_overflow": {
                          "properties": {
                            "call_overflow_type": {
                              "description": "1-Can forward to internal extensions and to external contacts.\n2-Can forward only to internal extensions.\n3-Can forward only to internal extensions that require inbound Automatic Call Recording.",
                              "enum": [
                                1,
                                2,
                                3
                              ],
                              "type": "integer"
                            },
                            "enable": {
                              "description": "Whether to allow users to forward their calls to other numbers.",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "call_park": {
                          "properties": {
                            "call_not_picked_up_action": {
                              "description": "The action when a parked call is not picked up. 100-Ring back to parker, 0-Forward to voicemail of the parker, 9-Disconnect, 50-Forward to another extension.",
                              "type": "integer"
                            },
                            "enable": {
                              "description": "Whether to allow calls placed on hold to be resumed from another location using a retrieval code.",
                              "type": "boolean"
                            },
                            "expiration_period": {
                              "description": "A time limit for parked calls, unit minutes. After the expiration period ends, the retrieval code is no longer valid and a new code will be generated.",
                              "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                15,
                                20,
                                25,
                                30,
                                35,
                                40,
                                45,
                                50,
                                55,
                                60
                              ],
                              "type": "integer"
                            },
                            "forward_to": {
                              "description": "The extension's forwarding information.",
                              "properties": {
                                "display_name": {
                                  "description": "The extension's name.",
                                  "type": "string"
                                },
                                "extension_id": {
                                  "description": "The extension ID.",
                                  "type": "string"
                                },
                                "extension_number": {
                                  "description": "The extension number.",
                                  "type": "integer"
                                },
                                "extension_type": {
                                  "description": "The type of extension: \n* `user` \n* `zoomRoom` \n* `commonAreaPhone`\n* `ciscoRoom/polycomRoom` \n* `autoReceptionist` \n* `sharedLineGroup` \n* `callQueue`",
                                  "enum": [
                                    "user",
                                    "zoomRoom",
                                    "commonAreaPhone",
                                    "ciscoRoom/polycomRoom",
                                    "autoReceptionist",
                                    "callQueue",
                                    "sharedLineGroup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The ID of the extension `user`, `zoomRoom`, `commonAreaPhone`, `ciscoRoom/polycomRoom`, `autoReceptionist`, `callQueue` or `sharedLineGroup`.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "call_transferring": {
                          "properties": {
                            "call_transferring_type": {
                              "description": "1-Can blind, warm or voicemail transfer to internal extensions and warm or blind transfer to external numbers.\n2-Can blind, warm or voicemail transfer only to internal extensions\n3-Can blind or warm transfer only to internal extensions that require inbound Automatic Call Recording and can voicemail transfer to all internal extensions.",
                              "enum": [
                                1,
                                2,
                                3
                              ],
                              "type": "integer"
                            },
                            "enable": {
                              "description": "Whether to allow user to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink.",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "delegation": {
                          "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).",
                          "type": "boolean"
                        },
                        "elevate_to_meeting": {
                          "description": "Whether the user can elevate their phone calls to a meeting.",
                          "type": "boolean"
                        },
                        "emergency_address_management": {
                          "properties": {
                            "enable": {
                              "description": "Whether to allow the current extension to manage its own emergency addresses.",
                              "type": "boolean"
                            },
                            "prompt_default_address": {
                              "description": "Whether to prompt the user to set or confirm a default address.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "emergency_calls_to_psap": {
                          "description": "When disabled, emergency calls placed by the user will not be delivered to the Public Safety Answering Point(PSAP), but still will be delivered to the Internal Safety Response Team based on the settings.",
                          "type": "boolean"
                        },
                        "forwarding_to_external_numbers": {
                          "description": "Whether call forwarding to external numbers is enabled.",
                          "type": "boolean"
                        },
                        "hand_off_to_room": {
                          "properties": {
                            "enable": {
                              "description": "Whether to allow users to send a call to a Zoom Room.",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "international_calling": {
                          "description": "Whether the current extension can make international calls outside of their calling plan.",
                          "type": "boolean"
                        },
                        "mobile_switch_to_carrier": {
                          "properties": {
                            "enable": {
                              "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "select_outbound_caller_id": {
                          "properties": {
                            "enable": {
                              "description": "Whether to allow the current extension to change the outbound caller ID when placing calls.",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "sms": {
                          "properties": {
                            "enable": {
                              "description": "Whether the user can send and receive messages.",
                              "type": "boolean"
                            },
                            "international_sms": {
                              "description": "Whether the user can send and receive international messages.",
                              "type": "boolean"
                            },
                            "international_sms_countries": {
                              "description": "The country which can send and receive international messages. The [country iso code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "voicemail": {
                          "properties": {
                            "allow_delete": {
                              "description": "Allow user to delete his own voicemail.",
                              "type": "boolean"
                            },
                            "allow_download": {
                              "description": "Allow user to download his own voicemail.",
                              "type": "boolean"
                            },
                            "allow_transcription": {
                              "description": "Whether voicemail transcription is enabled.",
                              "type": "boolean"
                            },
                            "allow_videomail": {
                              "description": "Whether to allow users to access, share, download or delete the videomail",
                              "type": "boolean"
                            },
                            "enable": {
                              "description": "Whether the current extension can access, receive, or share voicemail.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "voicemail_access_members": {
                          "description": "Shared voicemail access member list.",
                          "items": {
                            "$ref": "#/paths/~1phone~1users~1{userId}/patch/requestBody/content/application~1json/schema/properties/policy/properties/voicemail_access_members/items"
                          },
                          "type": "array",
                          "uniqueItems": true
                        },
                        "zoom_phone_on_mobile": {
                          "properties": {
                            "allow_calling_sms_mms": {
                              "description": "Whether to allow Calling and SMS/MMS functions on Mobile.",
                              "type": "boolean"
                            },
                            "enable": {
                              "description": "Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS and Android).",
                              "type": "boolean"
                            },
                            "locked": {
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "type": "boolean"
                            },
                            "locked_by": {
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "site_admin": {
                      "description": "Indicates whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.",
                      "type": "boolean"
                    },
                    "site_id": {
                      "description": "Unique identifier of a [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the user.\n\n`activate`: An active user. \n\n`deactivate`: User has been deactivated from the ZoomPhone system.",
                      "enum": [
                        "activate",
                        "deactivate"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \nUser profile object returned. "
          },
          "300": {
            "description": "**Error code:** `300` \n User does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404`\n\n**Error code**: `1001` \nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to return a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) profile. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "phoneUser",
        "summary": "Get user's profile"
      },
      "patch": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n\nProfile updated."
          },
          "300": {
            "description": "**Error Code**: `300`\n\nUser does not belong to this account."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>The extension number \"{extensionNumber}\" is already in use.\nThe account/site's voicemail policy is disabled.\nCannot modify both SMS and International SMS at the same time.\nThe admin has blocked SMS.\nInternational calling feature requires a Zoom Phone Metered, Unlimited, or Pro plan.\nForwarding to external numbers feature requires a Zoom Phone Metered, Unlimited, or Pro plan.\nDelegation feature requires a Zoom Phone Metered, Unlimited, or Pro plan.\nInvalid call overflow type.\nInvalid call transferring type.\nInvalid call park time out.\nInvalid call not picked up action.\nTemplate type error or the template does not exist: {template_id}.\nThe templated site is not the same as the user's site."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to update a user's [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) profile. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updateUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "emergency_address_id": {
                    "description": "The emergency address ID.",
                    "type": "string"
                  },
                  "extension_number": {
                    "description": "The extension number of the user. The number must be complete (i.e. site number + short extension).",
                    "type": "string"
                  },
                  "policy": {
                    "description": "A list of the user's policies.",
                    "properties": {
                      "ad_hoc_call_recording": {
                        "description": "A list of ad hoc call recording settings.",
                        "properties": {
                          "enable": {
                            "description": "Whether the current extension can record and save calls to the cloud.",
                            "type": "boolean"
                          },
                          "recording_start_prompt": {
                            "description": "Whether a prompt plays to call participants when the recording has started.",
                            "type": "boolean"
                          },
                          "recording_transcription": {
                            "description": "Whether call recording transcription is enabled.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "auto_call_recording": {
                        "description": "A list of the user's automatic call recording settings.",
                        "properties": {
                          "allow_stop_resume_recording": {
                            "description": "Whether the stop of and resuming of automatic call recording is enabled.",
                            "type": "boolean"
                          },
                          "disconnect_on_recording_failure": {
                            "description": "Whether a call disconnects when there is an issue with automatic call recording and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                            "type": "boolean"
                          },
                          "enable": {
                            "description": "Whether automatic call recording is enabled.",
                            "type": "boolean"
                          },
                          "recording_calls": {
                            "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                            "enum": [
                              "inbound",
                              "outbound",
                              "both"
                            ],
                            "type": "string"
                          },
                          "recording_explicit_consent": {
                            "description": "Whether press 1 to provide recording consent is enabled.",
                            "type": "boolean"
                          },
                          "recording_start_prompt": {
                            "description": "Whether a prompt plays to call participants when the recording has started.",
                            "type": "boolean"
                          },
                          "recording_transcription": {
                            "description": "Whether call recording transcription is enabled.",
                            "type": "boolean"
                          },
                          "reset": {
                            "description": "Whether the user's automatic call recording reset option will use the phone site's settings.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "call_overflow": {
                        "properties": {
                          "call_overflow_type": {
                            "description": "1-Can forward to internal extensions and to external contacts.\n2-Can forward only to internal extensions.\n3-Can forward only to internal extensions that require inbound Automatic Call Recording.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "enable": {
                            "description": "Whether to allow users to forward their calls to other numbers.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "call_park": {
                        "properties": {
                          "call_not_picked_up_action": {
                            "description": "The action when a parked call is not picked up. 100-Ring back to parker, 0-Forward to voicemail of the parker, 9-Disconnect, 50-Forward to another extension.",
                            "type": "integer"
                          },
                          "enable": {
                            "description": "Whether to allow calls placed on hold to be resumed from another location using a retrieval code.",
                            "type": "boolean"
                          },
                          "expiration_period": {
                            "description": "A time limit for parked calls, unit minutes. After the expiration period ends, the retrieval code is no longer valid and a new code will be generated.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              15,
                              20,
                              25,
                              30,
                              35,
                              40,
                              45,
                              50,
                              55,
                              60
                            ],
                            "type": "integer"
                          },
                          "forward_to_extension_id": {
                            "description": "The extension id.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "call_transferring": {
                        "properties": {
                          "call_transferring_type": {
                            "description": "1-Can blind, warm or voicemail transfer to internal extensions and warm or blind transfer to external numbers.\n2-Can blind, warm or voicemail transfer only to internal extensions\n3-Can blind or warm transfer only to internal extensions that require inbound Automatic Call Recording and can voicemail transfer to all internal extensions.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "enable": {
                            "description": "Whether to allow user to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "delegation": {
                        "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).",
                        "type": "boolean"
                      },
                      "elevate_to_meeting": {
                        "description": "Whether the user can elevate their phone calls to a meeting.",
                        "type": "boolean"
                      },
                      "emergency_address_management": {
                        "properties": {
                          "enable": {
                            "description": "Whether to allow the current extension to manage its own emergency addresses.",
                            "type": "boolean"
                          },
                          "prompt_default_address": {
                            "description": "Whether to prompt the user to set or confirm a default address.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "emergency_calls_to_psap": {
                        "description": "When disabled, emergency calls placed by the user will not be delivered to the Public Safety Answering Point(PSAP), but still will be delivered to the Internal Safety Response Team based on the settings.",
                        "type": "boolean"
                      },
                      "forwarding_to_external_numbers": {
                        "description": "Whether to allow call forwarding to external numbers.",
                        "type": "boolean"
                      },
                      "hand_off_to_room": {
                        "properties": {
                          "enable": {
                            "description": "Whether to allow users to send a call to a Zoom Room.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "international_calling": {
                        "description": "Whether the current extension can make international calls outside of their calling plan.",
                        "type": "boolean"
                      },
                      "mobile_switch_to_carrier": {
                        "properties": {
                          "enable": {
                            "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "select_outbound_caller_id": {
                        "properties": {
                          "enable": {
                            "description": "Whether to allow the current extension to change the outbound caller ID when placing calls.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "sms": {
                        "properties": {
                          "enable": {
                            "description": "Whether the user can send and receive messages.",
                            "type": "boolean"
                          },
                          "international_sms": {
                            "description": "Whether the user can send and receive international messages.",
                            "type": "boolean"
                          },
                          "international_sms_countries": {
                            "description": "The country which can send and receive international messages. The [country iso code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "voicemail": {
                        "properties": {
                          "allow_delete": {
                            "description": "Allow user to delete his own voicemail.",
                            "type": "boolean"
                          },
                          "allow_download": {
                            "description": "Allow user to download his own voicemail.",
                            "type": "boolean"
                          },
                          "allow_transcription": {
                            "description": "Whether to allow voicemail transcription.",
                            "type": "boolean"
                          },
                          "allow_videomail": {
                            "description": "Whether to allow users to access, share, download or delete the videomail.",
                            "type": "boolean"
                          },
                          "enable": {
                            "description": "Whether the current extension can access, receive, or share voicemail.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "voicemail_access_members": {
                        "description": "Shared voicemail access member list.",
                        "items": {
                          "properties": {
                            "access_user_id": {
                              "description": "The Zoom user ID to share the voicemail access permissions with.",
                              "type": "string"
                            },
                            "allow_delete": {
                              "description": "Specifies whether the user has delete permissions. The default is **false**.",
                              "type": "boolean"
                            },
                            "allow_download": {
                              "description": "Specifies whether the user has download permissions. The default is **false**.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array",
                        "uniqueItems": "true"
                      },
                      "zoom_phone_on_mobile": {
                        "properties": {
                          "allow_calling_sms_mms": {
                            "description": "Whether to allow Calling and SMS/MMS functions on Mobile.",
                            "type": "boolean"
                          },
                          "enable": {
                            "description": "Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS and Android).",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "site_id": {
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672) where the user should be moved or assigned. ",
                    "type": "string"
                  },
                  "template_id": {
                    "description": "The settings template ID. If the `site_id` field is set, look for the template site with the value of the `site_id` field. The template ID has precedence and the policy will be ignored even if the `policy` field is set.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update user's profile"
      }
    },
    "/phone/users/{userId}/audios": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "audios": [
                        {
                          "audio_id": "DP-6B4CeTjyo-FYfsFXdXQ",
                          "name": "Teeeee.mp3"
                        },
                        {
                          "audio_id": "K3xnsN2kSpSODzIRmDj0Rg",
                          "name": "TestAdd01.mp3"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "audios": {
                      "description": "Audio item list",
                      "items": {
                        "properties": {
                          "audio_id": {
                            "description": "Unique identifier of the audio item",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the audio item",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed the audio items."
          }
        },
        "tags": [
          "Audio Library"
        ],
        "description": "Use this API to get audio items.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** ` phone:read`,`phone:read:admin`\n\n**Rate Limit Label:** `Light`",
        "operationId": "ListAudioItems",
        "summary": "List audio items"
      }
    },
    "/phone/users/{userId}/audios/batch": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "audios": [
                        {
                          "audio_id": "DP-6B4CeTjyo-FYfsFXdXQ",
                          "name": "Teeeee.mp3"
                        },
                        {
                          "audio_id": "K3xnsN2kSpSODzIRmDj0Rg",
                          "name": "TestAdd01.mp3"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "audios": {
                      "description": "Audio item list",
                      "items": {
                        "properties": {
                          "audio_id": {
                            "description": "Unique identifier of the audio item",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the audio item",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nAudio items successfully added."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` **Bad Request**\n\n**Error Code:** `300` **Validation Failed**\n\nThe number of audio is invalid.\n\nThe type of audio is invalid, audio name: {name}.\n\nThe size of audio exceeds limit, audio name: {name}.\n"
          }
        },
        "tags": [
          "Audio Library"
        ],
        "description": "Use this API to add audio items. You can only upload voice files at this time.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** ` phone:write`,`phone:write:admin`\n\n**Rate Limit Label:** `Heavy`\n\n\n**Size and quantity limits for audio attachments:**\n* Up to 5 attachments\n* Each file size should be no more than 1MB",
        "operationId": "AddAudioItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "attachments": {
                    "items": {
                      "properties": {
                        "audio_type": {
                          "description": "Format of attachments. Supported formats: audio/mpeg, audio/wav",
                          "example": "audio/mpeg, audio/wav",
                          "type": "string"
                        },
                        "base64_encoding": {
                          "description": "ASCII string to send [Base64 encoded](https://en.wikipedia.org/wiki/Base64) attachments as text.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Audio file name",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add audio items"
      }
    },
    "/phone/users/{userId}/call_logs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "all",
                "missed"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Filter API responses to include call logs of only the phone number defined in this field.",
            "in": "query",
            "name": "phone_number",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.",
            "in": "query",
            "name": "time_type",
            "schema": {
              "default": "startTime",
              "enum": [
                "startTime",
                "endTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_logs": [
                        {
                          "call_end_time": "2022-01-24T23:58:10Z",
                          "call_id": "7006926284340112376",
                          "call_type": "voip",
                          "callee_country_code": "1",
                          "callee_country_iso_code": "US",
                          "callee_did_number": "+12135551234",
                          "callee_name": "Jan Dev",
                          "callee_number": "101",
                          "callee_number_type": 1,
                          "caller_country_code": "1",
                          "caller_country_iso_code": "US",
                          "caller_name": "Zoom",
                          "caller_number": "+12095552345",
                          "caller_number_type": 2,
                          "date_time": "2022-01-24T23:58:10Z",
                          "direction": "inbound",
                          "duration": 0,
                          "has_recording": false,
                          "id": "11f2bacb-37d8-4ae4-8d88-be657421266f",
                          "result": "No Answer",
                          "site": {
                            "id": "GNO-CItXQaLhqH3qfPD1kg",
                            "name": "Main Site"
                          },
                          "voice_mail_id": "637f6ec5c824f8481c9940f2cafa449"
                        }
                      ],
                      "from": "2022-01-24",
                      "next_page_token": "",
                      "page_size": 30,
                      "to": "2022-01-25",
                      "total_records": 1
                    }
                  }
                },
                "schema": {
                  "description": "Phone user call logs.",
                  "properties": {
                    "call_logs": {
                      "description": "Call Log",
                      "items": {
                        "properties": {
                          "accepted_by": {
                            "description": "Indicates who accepted the call.",
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "answer_start_time": {
                            "description": "The call's answer time, in GMT `date-time` format. The API only displays this response if the `direction` value is `inbound`.",
                            "type": "string"
                          },
                          "call_end_time": {
                            "description": "The call end time, in GMT `date-time` format.",
                            "type": "string"
                          },
                          "call_id": {
                            "description": "Unique identifier of the phone call.",
                            "type": "string"
                          },
                          "callee_country_code": {
                            "description": "Country calling code.",
                            "type": "string"
                          },
                          "callee_country_iso_code": {
                            "description": "ISO alpha2 country code.",
                            "type": "string"
                          },
                          "callee_did_number": {
                            "description": "Callee's DID (direct inward dial) number in e164 format.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Contact name of callee",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "Number of callee",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type:\n* `1` — Internal number.\n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_country_code": {
                            "description": "Country calling code.",
                            "type": "string"
                          },
                          "caller_country_iso_code": {
                            "description": "ISO alpha2 country code.",
                            "type": "string"
                          },
                          "caller_did_number": {
                            "description": "Caller's DID (direct inward dial) number in e164 format.",
                            "type": "string"
                          },
                          "caller_name": {
                            "description": "Contact name of caller",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "Number of caller",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "charge": {
                            "description": "Billing charge for the call.",
                            "type": "string"
                          },
                          "client_code": {
                            "description": "Client code.",
                            "type": "string"
                          },
                          "date_time": {
                            "description": "Start time of the call",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction of the call. \"inbound\" | \"outbound\"",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the call in seconds.",
                            "type": "integer"
                          },
                          "forwarded_by": {
                            "description": "Indicates where the call was forwarded from.",
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "extension_type": {
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonAreaPhone",
                                  "sharedLineGroup"
                                ],
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "forwarded_to": {
                            "description": "Indicates who the call was forwarded to.",
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "has_recording": {
                            "description": "Whether the call has a recording or not.",
                            "type": "boolean"
                          },
                          "has_voicemail": {
                            "description": "Whether the call has voicemail or not.",
                            "type": "boolean"
                          },
                          "id": {
                            "description": "Call Log ID",
                            "type": "string"
                          },
                          "outgoing_by": {
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "path": {
                            "description": "Path of the call log.",
                            "type": "string"
                          },
                          "rate": {
                            "description": "Billing rate for the call.",
                            "type": "string"
                          },
                          "recording_type": {
                            "description": "Recording type. \n\n* `1` - On-demand recording.\n\n* `2` - Automatic recording.",
                            "type": "string"
                          },
                          "result": {
                            "description": "Result of the call. \"call_connected\" | \"recorded\" | \"no_answer\"",
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site where the phone number is assigned.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "user_id": {
                            "description": "User ID or user email.",
                            "type": "string"
                          },
                          "waiting_time": {
                            "description": "Waiting time for the call, in seconds.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "from": {
                      "description": "Start time and date of the log.",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_count": {
                      "description": "Total number of pages. This field is deprecated.",
                      "type": "integer"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call for each page.",
                      "type": "integer"
                    },
                    "to": {
                      "description": "End time and date of the log.",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status code:** `200`\nUser's call logs returned."
          },
          "300": {
            "description": "**Error Code:** `300`\n\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status code:** `404`\n**Error Code:** `300`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Logs"
        ],
        "description": "Use this API to get a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) call logs. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_call_log:read`, `phone_call_log:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "phoneUserCallLogs",
        "summary": "Get user's call logs"
      }
    },
    "/phone/users/{userId}/call_logs/sync": {
      "get": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Options for synchronizing call log:<br>\nFSync - Full sync<br>\nISync - Increase sync<br>\nBSync - Backward sync",
            "in": "query",
            "name": "sync_type",
            "schema": {
              "enum": [
                "FSync",
                "ISync",
                "BSync"
              ],
              "type": "string"
            }
          },
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "count",
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The time range for returned records. Used for locating where the next retrieval will begin.",
            "in": "query",
            "name": "sync_token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_logs": [
                        {
                          "accepted_by": {
                            "extension_number": "1002",
                            "name": "Display name"
                          },
                          "call_end_time": "2022-01-24T23:58:10Z",
                          "call_id": "7006926284340112376",
                          "call_type": "voip",
                          "callee_country_code": "1",
                          "callee_country_iso_code": "US",
                          "callee_did_number": "+12135551234",
                          "callee_name": "Jan Dev",
                          "callee_number": "101",
                          "callee_number_type": 1,
                          "caller_country_code": "1",
                          "caller_country_iso_code": "US",
                          "caller_name": "Zoom",
                          "caller_number": "+12095552345",
                          "caller_number_type": 2,
                          "charge": "$0.0255",
                          "date_time": "2022-01-24T23:58:10Z",
                          "direction": "inbound",
                          "duration": 0,
                          "forwarded_by": {
                            "extension_number": "1009",
                            "extension_type": "callQueue",
                            "name": "Display name",
                            "number_type": 1,
                            "phone_number": "+12055432724"
                          },
                          "has_recording": false,
                          "id": "11f2bacb-37d8-4ae4-8d88-be657421266f",
                          "rate": "$0.0255",
                          "result": "No Answer",
                          "site": {
                            "id": "GNO-CItXQaLhqH3qfPD1kg",
                            "name": "Main Site"
                          },
                          "voice_mail_id": "637f6ec5c824f8481c9940f2cafa449"
                        }
                      ],
                      "sync_token": "abcd1234"
                    }
                  }
                },
                "schema": {
                  "description": "Sync user call logs",
                  "properties": {
                    "call_logs": {
                      "description": "Call log.",
                      "items": {
                        "properties": {
                          "accepted_by": {
                            "description": "Indicates who accepted the call.",
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "answer_start_time": {
                            "description": "The time call was answered in GMT `date-time` format. The API only displays this response if the `direction` value is `inbound`.",
                            "type": "string"
                          },
                          "call_end_time": {
                            "description": "The call end time in GMT `date-time` format.",
                            "type": "string"
                          },
                          "call_id": {
                            "description": "Unique identifier of the phone call.",
                            "type": "string"
                          },
                          "callee_country_code": {
                            "description": "Country calling code.",
                            "type": "string"
                          },
                          "callee_country_iso_code": {
                            "description": "ISO alpha2 country code.",
                            "type": "string"
                          },
                          "callee_did_number": {
                            "description": "Callee's DID (direct inward dial) number in e164 format.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Contact name of the callee.",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "The number associated with the callee. Can be an e164 number or an extension.",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee number type:\n* `1` — Internal number.\n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_country_code": {
                            "description": "Country calling code.",
                            "type": "string"
                          },
                          "caller_country_iso_code": {
                            "description": "ISO alpha2 country code.",
                            "type": "string"
                          },
                          "caller_did_number": {
                            "description": "Caller's DID (direct inward dial) number in e164 format.",
                            "type": "string"
                          },
                          "caller_name": {
                            "description": "Contact name of the caller.",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "The number associated with the caller. Can be an e164 number or an extension.",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "charge": {
                            "description": "Billing charge for the call.",
                            "type": "string"
                          },
                          "client_code": {
                            "description": "Client code.",
                            "type": "string"
                          },
                          "date_time": {
                            "description": "Start time of the call.",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction of the call: `inbound`or `outbound`.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the call in seconds.",
                            "type": "integer"
                          },
                          "forwarded_by": {
                            "description": "Indicates where the call was forwarded from.",
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "extension_type": {
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonAreaPhone",
                                  "sharedLineGroup"
                                ],
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "forwarded_to": {
                            "description": "Indicates who the call was forwarded to.",
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "has_recording": {
                            "description": "Whether the call has a recording or not.",
                            "type": "boolean"
                          },
                          "has_voicemail": {
                            "description": "Whether the call has voicemail or not.",
                            "type": "boolean"
                          },
                          "id": {
                            "description": "Call log ID.",
                            "type": "string"
                          },
                          "outgoing_by": {
                            "properties": {
                              "extension_number": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "number_type": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "path": {
                            "description": "Path of the call log.",
                            "type": "string"
                          },
                          "rate": {
                            "description": "Billing rate for the call.",
                            "type": "string"
                          },
                          "recording_type": {
                            "description": "Recording type. \n\n* `1` - On-demand recording.\n\n* `2` - Automatic recording.",
                            "type": "string"
                          },
                          "result": {
                            "description": "Result of the call: `call_connected`, `recorded`, `no_answer.",
                            "type": "string"
                          },
                          "site": {
                            "properties": {
                              "id": {
                                "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, your sites can be created based on different office locations.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the site where the phone number is assigned.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "user_id": {
                            "description": "User ID or email.",
                            "type": "string"
                          },
                          "waiting_time": {
                            "description": "Waiting time for the call, in seconds.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "sync_token": {
                      "description": "The time range for returned records. Used for locating where the next retrieval will begin.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status code:** `200`\nUser call logs returned."
          },
          "300": {
            "description": "**Error Code:** `300`\n\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status code:** `404`\n**Error Code:** `300`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Call Logs"
        ],
        "description": "Use this API to sync a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) call logs. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_call_log:read`, `phone_call_log:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "syncUserCallLogs",
        "summary": "Sync user's call logs"
      }
    },
    "/phone/users/{userId}/call_logs/{callLogId}": {
      "delete": {
        "parameters": [
          {
            "description": "The user ID or email address of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the call log. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or [user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).",
            "in": "path",
            "name": "callLogId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code**: `204` \n\nLog deleted.\n"
          },
          "401": {
            "description": "**HTTP Status Code**: `404` \n\n**Error Code**: `124` \n\nAccount does not exist: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code**: `404` \n\nCall log information was not found for the following callLogId: {callLogId}.\n\n\n"
          }
        },
        "tags": [
          "Call Logs"
        ],
        "description": "Use this API to delete a user's [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:write`, `phone:write:admin`, `phone_call_log:write`, `phone_call_log:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license",
        "operationId": "deleteCallLog",
        "summary": "Delete a user's call log"
      }
    },
    "/phone/users/{userId}/call_logs/{id}/voice_mail": {
      "get": {
        "parameters": [
          {
            "description": "The user ID or email address of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the call log. You can use `callLogId` or `callId` as path parameters.\n\nYou can find the value for this field with in **[Get account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs)** API or **[Get user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs)** API.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_id": "876634343743",
                      "call_log_id": "46541323465",
                      "callee_name": "Jane Doe",
                      "callee_number": "34567889",
                      "callee_number_type": "2",
                      "caller_name": "John Doe",
                      "caller_number": "12345678",
                      "caller_number_type": "1",
                      "date_time": "2019-05-19T20:00:00Z",
                      "download_url": "exampleurl.io",
                      "duration": "18:07",
                      "id": "Excepteur",
                      "status": "read",
                      "transcription": {
                        "content": "some transcript content",
                        "status": 2
                      }
                    }
                  }
                },
                "schema": {
                  "description": "Voicemail information.",
                  "properties": {
                    "call_id": {
                      "description": "Phone call ID.",
                      "type": "string"
                    },
                    "call_log_id": {
                      "description": "Call log ID.",
                      "type": "string"
                    },
                    "callee_name": {
                      "description": "Name of the callee.",
                      "type": "string"
                    },
                    "callee_number": {
                      "description": "The number associated with the callee. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                      "type": "string"
                    },
                    "callee_number_type": {
                      "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "caller_name": {
                      "description": "Name of the caller.",
                      "type": "string"
                    },
                    "caller_number": {
                      "description": "The number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                      "type": "string"
                    },
                    "caller_number_type": {
                      "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "date_time": {
                      "description": "The date the voicemail was created.",
                      "type": "string"
                    },
                    "download_url": {
                      "description": "URL to download the voicemail.",
                      "type": "string"
                    },
                    "duration": {
                      "description": "Duration of the voicemail, formatted as hh:mm:ss `00:06:30` for six minutes and thirty seconds for example.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Voicemail ID.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Voicemail status: either 'read' or 'unread'.",
                      "enum": [
                        "read",
                        "unread"
                      ],
                      "type": "string"
                    },
                    "transcription": {
                      "description": "Voicemail transcript",
                      "properties": {
                        "content": {
                          "description": "Content of the voicemail transcript",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the voicemail transcript:\n* `0` — Transcript is not available.\n* `1` — Transcript is processing.\n* `2` — Transcript processed successfully.\n* `4` — Transcript is disabled.\n* `5` — Transcript is enabled.\n* `9` — Transcript web error.\n* `11` — Transcript download error.\n* `12` — Transcript upload error.\n* `13` — Transcript web database error.\n* `14` — Transcript BYOS (Bring Your Own Storage) upload error.\n* `409` — Transcript duplicate processing request error.\n* `415` — Transcript unsupported media error.\n* `422` — Transcript cannot be processed.\n* `500` — Transcript server error.\n* `601` — Transcript AISense after retry error.\n* `602` — Transcript AISense upload file error.\n* `603` — Transcript AISense download file error.\n* `999` — Transcript AISense error.\n",
                          "enum": [
                            0,
                            1,
                            2,
                            4,
                            5,
                            9,
                            11,
                            12,
                            13,
                            14,
                            409,
                            415,
                            422,
                            500,
                            601,
                            602,
                            603,
                            999
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Voicemail information."
          },
          "300": {
            "description": "**Error Code:** 300\n\nUser does not belong to the account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** 1001\n\nUser does not exist: {userId}."
          }
        },
        "tags": [
          "Voicemails"
        ],
        "description": "Use this API to return detailed information on a voicemail associated with a call log ID. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_voicemail:read`, `phone_voicemail:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license",
        "operationId": "getVoicemailDetailsByCallIdOrCallLogId",
        "summary": "Get user voicemail details from a call log"
      }
    },
    "/phone/users/{userId}/calling_plans": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status code:** `200`\n\nCalling plan assigned successfully."
          },
          "300": {
            "description": "**Error Code:** `300` \n\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status code:** `404`\n\n**Error Code:** `1001` \n\nUser does not exist:{userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to assign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "assignCallingPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calling_plans": {
                    "items": {
                      "properties": {
                        "type": {
                          "description": "[Type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Assign calling plan to a user"
      }
    },
    "/phone/users/{userId}/calling_plans/{type}": {
      "delete": {
        "parameters": [
          {
            "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be \"200\" for Unlimited US/Canada calling plan.)\n",
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` \n\nCalling plan unassigned successfully."
          },
          "300": {
            "description": "**Error Code:** `300` \n\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** `1001` \n\nUser does not exist:{userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to unassign a a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user's [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "unassignCallingPlan",
        "summary": "Unassign user's calling plan"
      }
    },
    "/phone/users/{userId}/phone_numbers": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "phone_numbers": [
                        {
                          "id": "djkfsd13",
                          "number": "+123456789"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "phone_numbers": {
                      "description": "Assigned phone number",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "ID of the phone number",
                            "type": "string"
                          },
                          "number": {
                            "description": "The phone number that is assigned to the user.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200` \n\nPhone number assigned successfully. \n"
          },
          "300": {
            "description": "**Error Code:** `300`\n\nUser does not belong to this account.\n\nValidation Failed. Phone number has already been assigned.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\nUser does not have a calling plan."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** `1001` \nThis user does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to assign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers) to a user who has already enabled Zoom Phone.\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "assignPhoneNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "id": {
                          "description": "ID for phone number",
                          "type": "string"
                        },
                        "number": {
                          "description": "Phone number in E164 format.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Provide either an id or a number in the request body."
        },
        "summary": "Assign phone number to user"
      }
    },
    "/phone/users/{userId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "parameters": [
          {
            "description": "Provide either userId or email address of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide either phone number or phoneNumberId of the user. ",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully."
          },
          "300": {
            "description": "**Error Code:** `300`\n\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** `1001`\n\nUser does not exist."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Phone Numbers"
        ],
        "description": "Use this API to unassign Zoom Phone user's [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6).\n\nAfter assigning a phone number, you can remove it if you do not want it to be assigned to anyone.\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* The user must have been previously assigned a Zoom Phone number",
        "operationId": "UnassignPhoneNumber",
        "summary": "Unassign phone number"
      }
    },
    "/phone/users/{userId}/recordings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/paths/~1phone~1voice_mails/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "from": "2021-10-01",
                      "next_page_token": "",
                      "page_size": 30,
                      "recordings": [
                        {
                          "call_id": "7018292422152374490",
                          "call_log_id": "6ea6dfec-6400-4a4f-ae19-d13696ad5900",
                          "callee_name": "JP Zoom",
                          "callee_number": "103",
                          "callee_number_type": 1,
                          "caller_name": "Zoom",
                          "caller_number": "12095556543",
                          "caller_number_type": 2,
                          "date_time": "2021-10-12T21:19:46Z",
                          "direction": "inbound",
                          "download_url": "https://zoom.us/v2/phone/recording/download/oMnutM7T7izdwOaFr8OIw",
                          "duration": 10,
                          "end_time": "2021-10-12T21:20:06Z",
                          "id": "6ea6dtec64004a4fae19d13696ad5900",
                          "owner": {},
                          "recording_type": "OnDemand",
                          "site": {
                            "id": "GpO-CItXQaGhqH3qfPD1kg"
                          }
                        },
                        {
                          "call_id": "7018263415627998500",
                          "call_log_id": "b4a641eb-a128-42a5-8aab-7e7f54d9b447",
                          "callee_name": "Zoom",
                          "callee_number": "19996531109",
                          "callee_number_type": 2,
                          "caller_name": "J Phone",
                          "caller_number": "103",
                          "caller_number_type": 1,
                          "date_time": "2021-10-12T20:44:15Z",
                          "direction": "outbound",
                          "download_url": "https://zoom.us/v2/phone/recording/download/wJGaR-_vRuQX8v_VOumyA",
                          "duration": 25,
                          "end_time": "2021-10-12T20:44:52Z",
                          "id": "b4a941eba12842a58aab7e7f51d9b447",
                          "owner": {},
                          "recording_type": "OnDemand",
                          "site": {
                            "id": "GNO-CItXQaohqH3qfPD1kg"
                          }
                        }
                      ],
                      "to": "2021-11-01",
                      "total_records": 2
                    }
                  }
                },
                "schema": {
                  "description": "Phone User Recordings",
                  "properties": {
                    "from": {
                      "description": "Start time and date of the query.",
                      "format": "date",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_count": {
                      "description": "Total number of pages. This field is deprecated.",
                      "type": "integer"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call for each page.",
                      "type": "integer"
                    },
                    "recordings": {
                      "description": "Recordings",
                      "items": {
                        "properties": {
                          "call_id": {
                            "description": "The phone call's unique ID.",
                            "type": "string"
                          },
                          "call_log_id": {
                            "description": "The phone call log's unique ID.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Contact name of callee",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "The number associated with the callee. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_name": {
                            "description": "Contact name of caller",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "The number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "date_time": {
                            "description": "Date and time at which the record is received",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction of the call. \"inbound\" | \"outbound\"",
                            "type": "string"
                          },
                          "download_url": {
                            "description": "Download url for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this url. \n\n\nExample request:\n\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```\n",
                            "type": "string"
                          },
                          "duration": {
                            "description": "The call recording's duration, in seconds.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "ID of recording",
                            "type": "string"
                          },
                          "transcript_download_url": {
                            "description": "Download url for the recording transcript. For security purposes, you must provide an OAuth access token in the auth header to download the recording transcript file using this url. \n\n\nExample request:\n\n```\ncurl --request GET \\\n  --url {transcript_download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```\n",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "to": {
                      "description": "End time and date of the query.",
                      "format": "date",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "The total number of records returned.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nUser object returned."
          },
          "300": {
            "description": "**Error code:** `300`\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error code:** `1001`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Recordings"
        ],
        "description": "Use this API to get a user's [Zoom Phone recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_recording:read`, `phone_recording:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "phoneUserRecordings",
        "summary": "Get user's recordings"
      }
    },
    "/phone/users/{userId}/settings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "area_code": "123",
                      "audio_prompt_language": "en_US",
                      "country": {
                        "code": "US",
                        "country_code": "1",
                        "name": "United States"
                      },
                      "delegation": {
                        "assistants": [
                          {
                            "display_name": "Tara Smith",
                            "extension_id": "MHNcW4CrS-6muS_IgziYxg",
                            "extension_number": 1000001101,
                            "extension_type": "user",
                            "id": "rYgfsrduSXWCxr94poMN5g"
                          }
                        ],
                        "privacy": false,
                        "privileges": [
                          1,
                          2,
                          3
                        ]
                      },
                      "desk_phone": {
                        "devices": [
                          {
                            "device_type": "Polycom soundstation5000",
                            "display_name": "Device 223",
                            "id": "abcd12345",
                            "policy": {
                              "call_control": {
                                "status": "unsupported"
                              },
                              "hot_desking": {
                                "status": "on"
                              }
                            },
                            "status": "offline"
                          }
                        ],
                        "keys_positions": {
                          "primary_number": "+123456789"
                        },
                        "phone_screen_lock": false,
                        "pin_code": "2251"
                      },
                      "extension_number": 103,
                      "music_on_hold_id": "0",
                      "outbound_caller": {
                        "number": "+123456789"
                      },
                      "status": "active",
                      "voice_mail": [
                        {
                          "access_user_id": "tNxDXW0NTu2AvlzW4_wYhQ",
                          "delete": true,
                          "download": true
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "description": "Phone User Setting",
                  "properties": {
                    "area_code": {
                      "description": "Area Code of User",
                      "type": "string"
                    },
                    "audio_prompt_language": {
                      "description": "Audio prompt language code.<br> American English: `en-US`<br>\nBritish English: `en-GB`<br>\nEspañol americano: `es-US`<br>\nFrançais canadien: `fr-CA`<br>\nDansk: `da-DK`<br>\nDeutsch: `de-DE`<br>\nEspañol: `es-ES`<br>\nFrançais: `fr-FR`<br>\nItaliano: `it-IT`<br>\nNederlands: `nl-NL`<br>\nPortugues portugal: `pt-PT`<br>\nJapanese: `ja-JP`<br>\nKorean: `ko-KO`<br>\nPortugues brasil: `pt-BR`<br>\nChinese: `zh-CN`<br>\nTaiwanese: `zh-TW`<br>",
                      "type": "string"
                    },
                    "company_number": {
                      "description": "The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users as their caller ID when making calls.",
                      "type": "string"
                    },
                    "country": {
                      "description": "The site's country.",
                      "properties": {
                        "code": {
                          "description": "Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "type": "string"
                        },
                        "country_code": {
                          "description": "The country's calling code.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The site's country name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "delegation": {
                      "description": "User delegation",
                      "properties": {
                        "assistants": {
                          "description": "Delegation assistants",
                          "items": {
                            "properties": {
                              "display_name": {
                                "description": "Display name.",
                                "type": "string"
                              },
                              "extension_id": {
                                "description": "The extension ID.",
                                "type": "string"
                              },
                              "extension_number": {
                                "description": "The extension number.",
                                "type": "string"
                              },
                              "extension_type": {
                                "description": "The extension type: `user` or `commonAreaPhone`.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The user or the common area phone ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "privacy": {
                          "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                          "type": "boolean"
                        },
                        "privileges": {
                          "description": "Delegation Privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "desk_phone": {
                      "description": "Contains information on phones or devices provisioned for the user.",
                      "properties": {
                        "devices": {
                          "description": "Desk phones information.",
                          "items": {
                            "properties": {
                              "device_type": {
                                "description": "Device type including the manufacturer and the model name.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "Display name of the device.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Device ID.",
                                "type": "string"
                              },
                              "policy": {
                                "description": "Device policy.",
                                "properties": {
                                  "call_control": {
                                    "properties": {
                                      "status": {
                                        "description": "Allow call control feature to the current device: configure the desk phone devices to enable call control, which allows users to perform desk phone's call control actions from the Zoom desktop client, including making and accepting calls. \nOptions include: \n* `unsupported` \n* `on` \n* `off`",
                                        "enum": [
                                          "unsupported",
                                          "on",
                                          "off"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "hot_desking": {
                                    "properties": {
                                      "status": {
                                        "description": "Allow hot desking feature to the current device: letting the guest user sign in to the desk phone. You can't use the desk phone until the guest user signs out. \nOptions include:\n* `unsupported` \n* `on` \n* `off`",
                                        "enum": [
                                          "unsupported",
                                          "on",
                                          "off"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "status": {
                                "description": "Status of the device: `online` or `offline`.",
                                "enum": [
                                  "online",
                                  "offline"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "keys_positions": {
                          "properties": {
                            "primary_number": {
                              "description": "Primary number of the user.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "phone_screen_lock": {
                          "description": "After enabling this option, you can lock your desk phone screen. PIN Code is required to unlock your phone. This feature is not supported on some devices. See [Supported Device Types](https://support.zoom.us/hc/en-us/articles/360029698771) for more information.",
                          "type": "boolean"
                        },
                        "pin_code": {
                          "description": "PIN Code to be used to access voicemail, hot desking, and unlocking desk phones.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "extension_number": {
                      "description": "The owner's extension number.",
                      "type": "integer"
                    },
                    "music_on_hold_id": {
                      "description": "The music on hold ID",
                      "type": "string"
                    },
                    "outbound_caller": {
                      "description": "Outbound Caller Info",
                      "properties": {
                        "number": {
                          "description": "Outbound calling number",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "outbound_caller_ids": {
                      "items": {
                        "properties": {
                          "is_default": {
                            "description": "Whether the outbound caller ID is the default or not. If `true`, the outbound caller ID is the default caller ID.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Outbound caller name.",
                            "type": "string"
                          },
                          "number": {
                            "description": "Outbound caller number.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Status of the user.",
                      "enum": [
                        "Active",
                        "Inactive"
                      ],
                      "type": "string",
                      "x-enum-descriptions": [
                        "Active status",
                        "Inactive status"
                      ]
                    },
                    "voice_mail": {
                      "description": "[Shared voicemail access](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) assigned to user.",
                      "items": {
                        "properties": {
                          "access_user_id": {
                            "description": "The user that is allowed to access voicemail messages for the extension.",
                            "type": "string"
                          },
                          "delete": {
                            "description": "Specifies whether the user has delete permissions. The default is **false**.",
                            "type": "boolean"
                          },
                          "download": {
                            "description": "Specifies whether the user has download permissions. The default is **false**.",
                            "type": "boolean"
                          },
                          "shared_id": {
                            "description": "Unique identifier of the shared voicemail that the user can access.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nUser Setting object returned."
          },
          "300": {
            "description": "**Error Code:** `300`\n\nUser does not belong to this account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** `1001`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to get the Zoom Phone [profile settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings) of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "phoneUserSettings",
        "summary": "Get user profile settings"
      },
      "patch": {
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n\nUser Setting updated."
          },
          "300": {
            "description": "**Error Code**: `300`\n\nUser does not belong to this account.\nOutbound caller ID has been locked.\nInvalid outbound caller ID.\nUser's outbound caller IDs cannot be empty."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to update the Zoom Phone [profile settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings) of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:write`, `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "updateUserSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "area_code": {
                    "description": "The user's area code.",
                    "type": "string"
                  },
                  "audio_prompt_language": {
                    "description": "Audio prompt language code.<br> American English: `en-US`<br>\nBritish English: `en-GB`<br>\nEspañol americano: `es-US`<br>\nFrançais canadien: `fr-CA`<br>\nDansk: `da-DK`<br>\nDeutsch: `de-DE`<br>\nEspañol: `es-ES`<br>\nFrançais: `fr-FR`<br>\nItaliano: `it-IT`<br>\nNederlands: `nl-NL`<br>\nPortugues portugal: `pt-PT`<br>\nJapanese: `ja-JP`<br>\nKorean: `ko-KO`<br>\nPortugues brasil: `pt-BR`<br>\nChinese: `zh-CN`<br>\nTaiwanese: `zh-TW`<br>",
                    "type": "string"
                  },
                  "country_iso_code": {
                    "description": "The [country iso code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)",
                    "type": "string"
                  },
                  "music_on_hold_id": {
                    "description": "The music on hold prompt ID",
                    "type": "string"
                  },
                  "outbound_caller_id": {
                    "description": "The user's outbound caller ID phone number, in E164 format.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update user profile settings"
      }
    },
    "/phone/users/{userId}/settings/{settingType}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Corresponds to the setting item you wish to remove. Allowed values: `voice_mail`, `delegation`",
            "in": "path",
            "name": "settingType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required only for voicemail setting type.",
            "in": "query",
            "name": "shared_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Delete a delegation assistant, used for delegation setting type.",
            "in": "query",
            "name": "assistant_extension_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n\nNo Content\n"
          },
          "400": {
            "description": "**HTTP Status Codes** `404`\n\nVoicemail option has been disabled.\n\n\n**Error Code:** `300`\n\nInvalid user sub-setting type.\n"
          },
          "404": {
            "description": "**HTTP Status Codes** `404`\n\nShared voicemail does not exist:{shared_id}.\nUser delegation assistant does not exist: {assistant_extension_id}.\n**Error Code:** `1001`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to remove the setting type of a user for a shared voicemail access and delegation. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nTo view these settings in your Zoom web portal, navigate to the **Admin >> Phone System Management >> Users & Rooms** interface. Click the **Users** tab and select **User Settings**. Scroll down to **Voicemail & Call Recordings**.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account",
        "operationId": "deleteUserSetting",
        "summary": "Delete user setting"
      },
      "patch": {
        "parameters": [
          {
            "description": "Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`, `delegation`",
            "in": "path",
            "name": "settingType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204`\n\nNo Content\n"
          },
          "400": {
            "description": "**HTTP Response Code:** `400`\n\nVoicemail option has been disabled.\n\n\n**Error Code:** `300`\n\nInvalid user setting Type: {settingType}.\nDelegation privileges error.\nDelegation privacy error.\nDelegation assistants do not exist."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\nShared voicemail does not exist: {shared_id}.\n\n**Error Code:** `1001`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to update the user setting according to the setting type, specifically for a shared voicemail access and delegation. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nPhone users can access [shared voicemail inboxes](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) in the Zoom desktop client, web portal, or provisioned desk phone.\n\nTo view these settings in the Zoom web portal, navigate to the **Admin >> Phone System Management >> Users & Rooms** interface. Click the **Users** tab and select **User Settings**. Scroll down to **Voicemail & Call Recordings**.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account",
        "operationId": "updateUserSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delegation": {
                    "description": "User delegation",
                    "properties": {
                      "privacy": {
                        "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                        "type": "boolean"
                      },
                      "privileges": {
                        "description": "Delegation Privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.",
                        "enum": [
                          1,
                          2,
                          3
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "voice_mail": {
                    "description": "Update the voicemail setting.",
                    "properties": {
                      "access_user_id": {
                        "description": "Specify the user ID of the user whose voicemail permissions need to be updated.",
                        "type": "string"
                      },
                      "delete": {
                        "description": "Specify whether the user has delete permissions. The default is **false**.",
                        "type": "boolean"
                      },
                      "download": {
                        "description": "Specify whether the user has download permissions. The default is **false**.",
                        "type": "boolean"
                      },
                      "shared_id": {
                        "description": "\nSpecify the ID of the voicemail.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update user setting"
      },
      "post": {
        "parameters": [
          {
            "description": "Unique identifier of the user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`, `delegation`",
            "in": "path",
            "name": "settingType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "delegation": {
                        "assistants": [
                          {
                            "display_name": "Tara Smith",
                            "extension_id": "MHNcW4CrS-6muS_IgziYxg",
                            "extension_number": 1000001101,
                            "extension_type": "user",
                            "id": "rYgfsrduSXWCxr94poMN5g"
                          }
                        ],
                        "privacy": false,
                        "privileges": [
                          1,
                          2,
                          3
                        ]
                      },
                      "voice_mail": {
                        "access_user_id": "12",
                        "permission": [
                          {
                            "delete": "false",
                            "download": "false"
                          }
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "delegation": {
                      "description": "User delegation",
                      "properties": {
                        "assistants": {
                          "description": "Delegation assistants",
                          "items": {
                            "properties": {
                              "display_name": {
                                "description": "Display name.",
                                "type": "string"
                              },
                              "extension_id": {
                                "description": "The extension ID.",
                                "type": "string"
                              },
                              "extension_number": {
                                "description": "The extension number.",
                                "type": "string"
                              },
                              "extension_type": {
                                "description": "The extension type: `user` or `commonAreaPhone`.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The user or the common area phone ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "privacy": {
                          "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                          "type": "boolean"
                        },
                        "privileges": {
                          "description": "Delegation Privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "voice_mail": {
                      "properties": {
                        "access_user_id": {
                          "description": "The user that is allowed to access voicemail messages for the extension.",
                          "type": "string"
                        },
                        "delete": {
                          "description": "Specifies whether the user has delete permissions. The default is **false**.",
                          "type": "boolean"
                        },
                        "download": {
                          "description": "Specifies whether the user has download permissions. The default is **false**.",
                          "type": "boolean"
                        },
                        "shared_id": {
                          "description": "Unique identifier of the voicemail that the user can access.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code** `201` \n\nCreated Successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Response Code:** `400`\n\nVoicemail option has been disabled.\n\n\n**Error Code:** `300`\n\nInvalid user sub-setting type.\n\nVoicemail has already been shared to the user.\n\nDelegation assistant is required.\nDelegation assistant is not a user or a common area phone.\nUser delegation assistant does not exist: {delegation_assistant_extension_id}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n\n**Error Code:** `1001`\n\nUser does not exist: {userId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Use this API to add the user setting according to the setting type, specifically for a shared voicemail access and delegation. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nPhone users can access [shared voicemail inboxes](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) in the Zoom desktop client, web portal, or provisioned desk phone.\n\nTo view these settings in the Zoom web portal, navigate to the **Admin >> Phone System Management >> Users & Rooms** interface. Click the **Users** tab and select **User Settings**. Scroll down to **Voicemail & Call Recordings**.\n\n**Scopes:** `phone:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Business or Enterprise account",
        "operationId": "addUserSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delegation_assistant_extension_id": {
                    "description": "The extension ID of the delegation assistant: `user` or `common area phone`.",
                    "type": "string"
                  },
                  "voice_mail": {
                    "description": "Update the voicemail setting.",
                    "properties": {
                      "access_user_id": {
                        "description": "Specify the user ID of a user with whom to share voicemail access permissions. ",
                        "type": "string"
                      },
                      "delete": {
                        "description": "Specifies whether the user has delete permissions. The default is **false**.",
                        "type": "boolean"
                      },
                      "download": {
                        "description": "Specifies whether the user has download permissions. The default is **false**.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add user setting"
      }
    },
    "/phone/users/{userId}/sms/sessions": {
      "get": {
        "parameters": [
          {
            "description": "User ID, user email, or “me” if using OAuth token.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records returned within a single API call.",
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 30,
              "maximum": 100,
              "type": "integer"
            }
          },
          {
            "description": "The current page number of returned records.",
            "in": "query",
            "name": "next_page_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1phone~1recordings/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          },
          {
            "description": "Either the sender's or receiver's phone number, to limit the list of SMS sessions.",
            "in": "query",
            "name": "phone_number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "next_page_token": "123rty456uio",
                      "page_size": 30,
                      "sms_sessions": [
                        {
                          "last_access_time": "2021-04-01T10:00:00Z",
                          "participants": [
                            {
                              "display_name": "name",
                              "phone_number": "+1234567890"
                            }
                          ],
                          "session_id": "mcfl89er03po"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.",
                      "type": "string"
                    },
                    "page_size": {
                      "description": "The size of each page.",
                      "type": "integer"
                    },
                    "sms_sessions": {
                      "items": {
                        "properties": {
                          "last_access_time": {
                            "description": "The last send or receive time in UTC.",
                            "format": "date",
                            "type": "string"
                          },
                          "participants": {
                            "description": "The SMS members.",
                            "items": {
                              "properties": {
                                "display_name": {
                                  "description": "The participant name.",
                                  "type": "string"
                                },
                                "owner": {
                                  "properties": {
                                    "id": {
                                      "description": "The owner ID.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonAreaPhone`\n*`sharedLineGroup`",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "commonAreaPhone",
                                        "sharedLineGroup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "phone_number": {
                                  "description": "The participant phone number.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "session_id": {
                            "description": "The SMS session ID.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n\n**Error Code:** `1001`\n\nUser does not exist: {userId}\n\n**Error Code:** `7012`\n\nError retrieving SMS"
          }
        },
        "tags": [
          "SMS"
        ],
        "description": "Get details about SMS sessions for a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone_sms:read`, `phone_sms:read:admin`, `phone_sms:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* Paid account \n* User-enabled Zoom phone",
        "operationId": "userSmsSession",
        "summary": "Get user's SMS sessions",
        "x-private": false
      }
    },
    "/phone/users/{userId}/voice_mails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "description": "Status of the voice mail",
            "in": "query",
            "name": "status",
            "schema": {
              "default": "all",
              "enum": [
                "all",
                "read",
                "unread"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "$ref": "#/paths/~1phone~1voice_mails/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "from": "2021-12-26",
                      "next_page_token": "",
                      "page_size": 30,
                      "to": "2022-01-26",
                      "total_records": 2,
                      "voice_mails": [
                        {
                          "call_id": "7057267077190051821",
                          "call_log_id": "2bc5edb2-70c5-49c7-859c-d6d633fb931",
                          "callee_name": "Jeb Dev",
                          "callee_number": "123155",
                          "callee_number_type": 1,
                          "caller_name": "Zoom",
                          "caller_number": "12095551234",
                          "caller_number_type": 2,
                          "date_time": "2022-01-25T22:01:31Z",
                          "download_url": "https://zoom.us/v2/phone/voice_mails/download/e9U2F-kTSU6hNuZAlMjwfA",
                          "duration": 20,
                          "id": "d75f97a898cf4f68adf740383a1a06e",
                          "status": "unread"
                        },
                        {
                          "call_id": "7056926282340112376",
                          "call_log_id": "11f2bacb-37d8-4ae4-8d88-be65421266f",
                          "callee_name": "Example Man",
                          "callee_number": "101",
                          "callee_number_type": 1,
                          "caller_name": "Zoom",
                          "caller_number": "14085551109",
                          "caller_number_type": 2,
                          "date_time": "2022-01-24T23:59:27Z",
                          "download_url": "https://zoom.us/v2/phone/voice_mails/download/aMuscxFTMy4IYJNFsO61w",
                          "duration": 34,
                          "id": "6737f6e5c824f8481c9940f2cafa449",
                          "status": "unread"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "description": "Phone user voicemails.",
                  "properties": {
                    "from": {
                      "description": "Start date of the query.",
                      "format": "date",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_count": {
                      "description": "Total number of pages. This field is deprecated.",
                      "type": "integer"
                    },
                    "page_size": {
                      "description": "Size of each page.",
                      "type": "integer"
                    },
                    "to": {
                      "description": "End date of the query.",
                      "format": "date",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "Total number of records.",
                      "type": "integer"
                    },
                    "voice_mails": {
                      "description": "Voicemails",
                      "items": {
                        "properties": {
                          "call_id": {
                            "description": "The phone call's unique ID.",
                            "type": "string"
                          },
                          "call_log_id": {
                            "description": "The phone call log's unique ID.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Contact name of callee",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "The number associated with the callee. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_name": {
                            "description": "Contact name of the caller.",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "The number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "date_time": {
                            "description": "Start time and date of the voicemail.",
                            "type": "string"
                          },
                          "download_url": {
                            "description": "Download url of the attachment.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the voicemail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Voicemail ID.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the voice mail. Can be either 'read' or 'unread'",
                            "enum": [
                              "read",
                              "unread"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nUser object returned."
          },
          "300": {
            "description": "**Error Code:** 300\n\nUser does not belong to account."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` \n\n**Error Code:** 1001\n\nUser does not exist: {userId}"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Voicemails"
        ],
        "description": "Use this API to get a user's Zoom Phone voicemails. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_voicemail:read`, `phone_voicemail:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "phoneUserVoiceMails",
        "summary": "Get user's voicemails"
      }
    },
    "/phone/users/{userId}/voice_mails/sync": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "description": "FSync: Full sync \nBSync: Backward sync \nISync: Forward sync",
            "in": "query",
            "name": "sync_type",
            "required": true,
            "schema": {
              "default": "FSync",
              "enum": [
                "FSync",
                "BSync",
                "ISync"
              ],
              "type": "string"
            }
          },
          {
            "description": "Sync token. Use if requesting a backward (`BSync`) or forward (`ISync`) sync.",
            "in": "query",
            "name": "sync_token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Record count of each query.",
            "in": "query",
            "name": "count",
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "Integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "sync_token": "TUlDc0ZyQ3RCa18xNjQwODQyNTIwNzY0XzE2NDE0NDczMjA3NjQ=",
                      "voice_mails": [
                        {
                          "call_id": "876634343743",
                          "call_log_id": "46541323465",
                          "callee_name": "Callee Names",
                          "callee_number": "12135559876",
                          "callee_number_type": "2",
                          "caller_name": "Caller Name",
                          "caller_number": "14085551234",
                          "caller_number_type": "1",
                          "date_time": "2019-05-19T20:00:00Z",
                          "download_url": "ani_maborumu7labojgde.com",
                          "duration": "18:07",
                          "id": "Excepteur",
                          "status": "read"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "description": "Phone user voicemails.",
                  "properties": {
                    "sync_token": {
                      "description": "Sync token used for a backward (`BSync`) or forward (`ISync`) sync.",
                      "type": "string"
                    },
                    "voice_mails": {
                      "description": "Voicemails.",
                      "items": {
                        "properties": {
                          "call_id": {
                            "description": "Call ID.",
                            "type": "string"
                          },
                          "call_log_id": {
                            "description": "Call log ID.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Name of the callee.",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "Phone number of the callee.",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_name": {
                            "description": "Contact name of the caller.",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "Phone number of the caller.",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "date_time": {
                            "description": "Start time and date of the voiemail.",
                            "type": "string"
                          },
                          "download_url": {
                            "description": "Download URL for voicemail.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the voicemail formatted as `hh:mm:ss`. For example, `06:30` for six minutes and thirty seconds.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Voicemail ID.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the voicemail: `read` or `unread`.",
                            "enum": [
                              "read",
                              "unread"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`<br>\nSuccessfully listed the voicemails."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `300`<br>\nInvalid user ID.<br>\nUser does not exist.\n\n**Error Code:** `7035`<br>\nThe number of new records exceeds the sync count. Please resync with the `FSync` method."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `2001`<br>\nAccount does not exist.\n\n**Error Code:** `300`<br>\nThe sync token is invalid or expired."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Voicemails"
        ],
        "description": "Use this API to retrieve a user's Zoom Phone voicemails in descending order. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Scopes:** `phone:read`, `phone:read:admin`, `phone_voicemail:read`, `phone_voicemail:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "GetPhoneUserVoiceMails",
        "summary": "List user's voicemails in descending order"
      }
    },
    "/phone/voice_mails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "description": "Status of the voice mail",
            "in": "query",
            "name": "status",
            "schema": {
              "default": "all",
              "enum": [
                "all",
                "read",
                "unread"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/NextPageToken"
          },
          {
            "description": "Start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. The month defined should fall within the last six months. If unspecified, returns data from the past 30 days.",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "$ref": "#/paths/~1phone~1call_logs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "from": "2021-12-01",
                      "next_page_token": "",
                      "page_size": 30,
                      "to": "2022-01-01",
                      "total_records": 1,
                      "voice_mails": [
                        {
                          "call_id": "703755611068052302",
                          "call_log_id": "0bf08ce2-bf36-4ffc-a7fa-595d77aae9b",
                          "callee_name": "Jod Pone",
                          "callee_number": "103",
                          "callee_number_type": 1,
                          "caller_name": "Zoom",
                          "caller_number": "12135551109",
                          "caller_number_type": 2,
                          "date_time": "2021-12-03T19:12:31Z",
                          "download_url": "https://zoom.us/v2/phone/voice_mails/download/owtvDLxrQfOkSNebccA",
                          "duration": 7,
                          "id": "b0ab6d81f244fca84bdccb3ecb84519",
                          "status": "read"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "description": "Phone voicemails",
                  "properties": {
                    "from": {
                      "description": "Start date of the query.",
                      "format": "date",
                      "type": "string"
                    },
                    "next_page_token": {
                      "description": "The next page token is used to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "page_count": {
                      "description": "Total number of pages. This field is deprecated.",
                      "type": "integer"
                    },
                    "page_size": {
                      "description": "Size of each page",
                      "type": "integer"
                    },
                    "to": {
                      "description": "End date of the query.",
                      "format": "date",
                      "type": "string"
                    },
                    "total_records": {
                      "description": "Total number of records",
                      "type": "integer"
                    },
                    "voice_mails": {
                      "description": "Voicemails",
                      "items": {
                        "properties": {
                          "call_id": {
                            "description": "The phone call's unique ID.",
                            "type": "string"
                          },
                          "call_log_id": {
                            "description": "The phone call log's unique ID.",
                            "type": "string"
                          },
                          "callee_name": {
                            "description": "Contact name of the callee",
                            "type": "string"
                          },
                          "callee_number": {
                            "description": "The number associated with the callee. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "callee_number_type": {
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "caller_name": {
                            "description": "Contact name of the caller",
                            "type": "string"
                          },
                          "caller_number": {
                            "description": "The number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                            "type": "string"
                          },
                          "caller_number_type": {
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "date_time": {
                            "description": "Start time and date of the voicemail",
                            "type": "string"
                          },
                          "download_url": {
                            "description": "Download url of the attachment",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of the voicemail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Voicemail ID",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the voicemail: 'read' or 'unread'",
                            "enum": [
                              "read",
                              "unread"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "**HTTP Status Code:** `200`\n\nUser object returned."
          },
          "401": {
            "description": "**HTTP Status Code:** `401`\n\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}.\n"
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Voicemails"
        ],
        "description": "Use this API to get a user's Zoom Phone voicemails. \n\n**Scopes:** `phone_voicemail:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license",
        "operationId": "accountVoiceMails",
        "summary": "Get account voicemails"
      }
    },
    "/phone/voice_mails/{voicemailId}": {
      "delete": {
        "parameters": [
          {
            "description": "Unique identifier of the voicemail. Retrieve the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserVoiceMails) API.",
            "in": "path",
            "name": "voicemailId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "**HTTP Status Code:** `204` **No Content**\n\nVoicemail deleted."
          },
          "401": {
            "description": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124`\n\nAccount does not exist: {accountId}.\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` **Not Found**\n\nVoice mail does not exist: {voicemailId}.\n\n"
          }
        },
        "tags": [
          "Voicemails"
        ],
        "description": "Use this API to delete an account's [voicemail message](https://support.zoom.us/hc/en-us/articles/360021400211-Managing-voicemail-messages).\n\n**Scopes:** `phone:write:admin`, `phone:write`, `phone_voicemail:write`, `phone_voicemail:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Zoom Phone license",
        "operationId": "deleteVoicemail",
        "summary": "Delete a voicemail"
      },
      "get": {
        "parameters": [
          {
            "description": "Unique identifier of the voicemail. Retrieve the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserVoiceMails) API.",
            "in": "path",
            "name": "voicemailId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "call_id": "876634343743",
                      "call_log_id": "46541323465",
                      "callee_name": "John Doe",
                      "callee_number": "34567889",
                      "callee_number_type": "2",
                      "caller_name": "Jane Doe",
                      "caller_number": "12345678",
                      "caller_number_type": "1",
                      "date_time": "2019-05-19T20:00:00Z",
                      "download_url": "exampleurl.io",
                      "duration": "18:07",
                      "id": "Excepteur",
                      "status": "read",
                      "transcription": {
                        "content": "Some transcribed content",
                        "status": 2
                      }
                    }
                  }
                },
                "schema": {
                  "description": "Voicemail information.",
                  "properties": {
                    "call_id": {
                      "description": "The phone call's unique ID.",
                      "type": "string"
                    },
                    "call_log_id": {
                      "description": "The phone call log's unique ID.",
                      "type": "string"
                    },
                    "callee_name": {
                      "description": "Name of the callee.",
                      "type": "string"
                    },
                    "callee_number": {
                      "description": "The number associated with the callee. Could be a phone number or an extension. Check the number type to differentiate the two.",
                      "type": "string"
                    },
                    "callee_number_type": {
                      "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number.\n* `3` — Customized emergency number.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "caller_name": {
                      "description": "Name of the caller.",
                      "type": "string"
                    },
                    "caller_number": {
                      "description": "The number associated with the caller. Could be a phone number or an extension. Check the number type to differentiate the two. ",
                      "type": "string"
                    },
                    "caller_number_type": {
                      "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "date_time": {
                      "description": "The date the voicemail was created.",
                      "type": "string"
                    },
                    "download_url": {
                      "description": "URL to download the voicemail.",
                      "type": "string"
                    },
                    "duration": {
                      "description": "Duration of the voice mail, formatted as hh:mm:ss `00:06:30` for six minutes and thirty seconds for example.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Voicemail ID.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the voice mail. Can be either 'read' or 'unread'",
                      "enum": [
                        "read",
                        "unread"
                      ],
                      "type": "string"
                    },
                    "transcription": {
                      "description": "Voicemail transcript.",
                      "properties": {
                        "content": {
                          "description": "Content of the voicemail transcript",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the voicemail transcript:\n* `0` — Transcript is not available.\n* `1` — Transcript is processing.\n* `2` — Transcript processed successfully.\n* `4` — Transcript is disabled.\n* `5` — Transcript is enabled.\n* `9` — Transcript web error.\n* `11` — Transcript download error.\n* `12` — Transcript upload error.\n* `13` — Transcript web database error.\n* `14` — Transcript BYOS (Bring Your Own Storage) upload error.\n* `409` — Transcript duplicate processing request error.\n* `415` — Transcript unsupported media error.\n* `422` — Transcript cannot be processed.\n* `500` — Transcript server error.\n* `601` — Transcript AISense after retry error.\n* `602` — Transcript AISense upload file error.\n* `603` — Transcript AISense download file error.\n* `999` — Transcript AISense error.\n",
                          "enum": [
                            0,
                            1,
                            2,
                            4,
                            5,
                            9,
                            11,
                            12,
                            13,
                            14,
                            409,
                            415,
                            422,
                            500,
                            601,
                            602,
                            603,
                            999
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Voicemail information."
          },
          "400": {
            "description": "**HTTP Status Code:** `400`\n\n\n**Error Code:** `300`\n\nVoice mail does not exist: {voicemailId}."
          }
        },
        "security": [
          {
            "OAuth": []
          }
        ],
        "tags": [
          "Voicemails"
        ],
        "description": "Use this API to return information about a [voicemail message](https://support.zoom.us/hc/en-us/articles/360021400211-Managing-voicemail-messages).\n\n**Scopes:** `phone:read:admin`, `phone:read`, `phone_voicemail:read`, `phone_voicemail:read:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n**Prerequisites:** \n* A Zoom Phone license",
        "operationId": "getVoicemailDetails",
        "summary": "Get voicemail details"
      }
    }
  },
  "components": {
    "parameters": {
      "NextPageToken": {
        "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
        "in": "query",
        "name": "next_page_token",
        "schema": {
          "type": "string"
        }
      },
      "PageSize": {
        "description": "The number of records returned within a single API call.",
        "in": "query",
        "name": "page_size",
        "schema": {
          "default": 30,
          "maximum": 300,
          "type": "integer"
        }
      },
      "ToDate": {
        "description": "End date.",
        "in": "query",
        "name": "to",
        "required": true,
        "schema": {
          "format": "date",
          "type": "string"
        }
      },
      "UserId": {
        "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
        "in": "path",
        "name": "userId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "CallHandlingNotAnswerAction": {
        "description": "The action to take when a call is not answered: \n* `1` — Forward to voicemail. \n* `2` — Forward to the user. \n* `4` — Forward to the common area phone. \n* `6` — Forward to the auto receptionist. \n* `7` — Forward to a call queue. \n* `8` — Forward to a shared line group. \n* `9` — Forward to an external contact. \n* `10` - Forward to a phone number. \n* `11` — Disconnect. \n* `12` — Play a message, then disconnect. \n* `13` - Forward to message. \n* `14` - Forward to interactive voice response (IVR). \n\nReturned only for the `call_handling` sub-setting.",
        "enum": [
          1,
          2,
          4,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "type": "integer"
      },
      "CallHandlingRouting": {
        "description": "The extension's forwarding/overflow information. Returns response when `call_not_answer_action` is set to `2` (forward to user), `4` (forward to common area phone), `6` (forward to auto receptionist), `7` (forward to call queue), `8` (forward to shared line group), or  `9` (forward to external contacts).",
        "properties": {
          "forward_to": {
            "description": "The extension's forwarding information. Returns reponse when `call_not_answer_action` is set to `2` (forward to user), `4` (forward to common area phone), `6` (forward to auto receptionist), `7` (forward to call queue), `8` (forward to shared line group), or  `9` (forward to external contacts).",
            "properties": {
              "display_name": {
                "description": "The extension's name.",
                "type": "string"
              },
              "extension_id": {
                "description": "The extension ID.",
                "type": "string"
              },
              "extension_number": {
                "description": "The extension number.",
                "type": "integer"
              },
              "extension_type": {
                "description": "The type of extension: \n* `user` \n* `commonAreaPhone` \n* `sharedLineGroup` \n* `callQueue`",
                "enum": [
                  "user",
                  "commonAreaPhone",
                  "sharedLineGroup",
                  "callQueue"
                ],
                "type": "string"
              },
              "id": {
                "description": "The ID of the extension `user`, `commonAreaPhone`, `sharedLineGroup`, `device`, or `callQueue`.",
                "type": "string"
              },
              "phone_number": {
                "description": "The extension's phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                "type": "string"
              },
              "voicemail_greeting": {
                "description": "The voicemail greeting prompt. Returns only when `call_not_answer_action` is set to `1` (forward to voicemail) for the `Call Queue` and `Auto Receptionist` `call handling` sub setting.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "operator": {
            "description": "Allow callers to reach an operator. Response returned when the `call_not_answer_action` setting is set to `1` (forward to voicemail) and `connect_to_operator` setting is set to `true`.",
            "properties": {
              "display_name": {
                "description": "The extension's name.",
                "type": "string"
              },
              "extension_id": {
                "description": "The extension ID.",
                "type": "string"
              },
              "extension_number": {
                "description": "The extension number.",
                "type": "integer"
              },
              "extension_type": {
                "description": "The type of extension: \n* `user` \n* `commonAreaPhone` \n* `sharedLineGroup` \n* `callQueue`",
                "enum": [
                  "user",
                  "commonAreaPhone",
                  "sharedLineGroup",
                  "callQueue"
                ],
                "type": "string"
              },
              "id": {
                "description": "The ID of the extension `user`, `commonAreaPhone`, `sharedLineGroup`, `device`, or `callQueue`.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PaginationToken": {
        "description": "Pagination object.",
        "properties": {
          "next_page_token": {
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
            "type": "string"
          },
          "page_size": {
            "default": 30,
            "description": "The amount of records returns within a single API call. ",
            "maximum": 300,
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "Client_Credentials": {
        "description": "Client Credentials Flow for ChatBots",
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "https://api.zoom.us/oauth/token"
          }
        },
        "type": "oauth2"
      },
      "OAuth": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://zoom.us/oauth/authorize",
            "scopes": {},
            "tokenUrl": "https://zoom.us/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "OAuth": []
    }
  ],
  "tags": [
    {
      "name": "Audio Library"
    },
    {
      "name": "Auto Receptionists"
    },
    {
      "name": "Blocked List"
    },
    {
      "name": "Call Handling"
    },
    {
      "name": "Call Logs"
    },
    {
      "name": "Call Queues"
    },
    {
      "name": "Carrier Reseller"
    },
    {
      "name": "Common Area Phones"
    },
    {
      "name": "Dashboard"
    },
    {
      "name": "Devices"
    },
    {
      "name": "Directory Backup Routing Rules"
    },
    {
      "name": "Emergency Service Locations"
    },
    {
      "name": "Emergency Addresses"
    },
    {
      "name": "External Contacts"
    },
    {
      "name": "IVR"
    },
    {
      "name": "Monitoring Groups"
    },
    {
      "name": "Phone Numbers"
    },
    {
      "name": "Provider Exchange"
    },
    {
      "name": "Recordings"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Setting Templates"
    },
    {
      "name": "Settings"
    },
    {
      "name": "Shared Line Group"
    },
    {
      "name": "Site"
    },
    {
      "name": "SMS"
    },
    {
      "name": "Users"
    },
    {
      "name": "Voicemails"
    },
    {
      "name": "Zoom Rooms"
    }
  ]
}
